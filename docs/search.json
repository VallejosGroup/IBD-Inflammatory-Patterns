[
  {
    "objectID": "source/post/associations.html",
    "href": "source/post/associations.html",
    "title": "Associations with cluster membership",
    "section": "",
    "text": "Codeset.seed(123)\nif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\n##########################\n#--     Packages       --#\n##########################\n\nlibrary(tidyverse)\nlibrary(dplyr)\n# Support package (source found in libdr/)\nlibrary(libdr)\n## Modelling ##\nlibrary(lcmm)\nlibrary(nnet) # Multinomial logistic regression\n## Survival analysis ##\nlibrary(survival)\nlibrary(survminer)\n\n## Presentation ##\nlibrary(patchwork)\nlibrary(pander)\nlibrary(viridis)\n\ndict &lt;- readRDS(paste0(prefix, \"processed/dict.RDS\"))\nfcal &lt;- readRDS(paste0(prefix, \"processed/fcal.RDS\"))\nmodel.fc &lt;- readRDS(paste0(prefix, \"/cache/fcal/ncs/fcal-8.RDS\"))\ncrp &lt;- readRDS(paste0(prefix, \"processed/crp.RDS\"))\ncrp.median &lt;- readRDS(paste0(prefix, \"processed/median-crp.RDS\"))\nmodel.crp &lt;- readRDS(paste0(prefix, \"cache/crp-ma/crp-8.RDS\"))\n\n\ndk &lt;- read.csv(\n  paste0(\n    prefix,\n    \"Denmark/2024-12-13/Fcal_association_tests_merge4_6.csv\"\n  ),\n  sep = \";\"\n)\ndk &lt;- dk %&gt;% mutate(\n  Var1 = plyr::mapvalues(Var1,\n    from = paste0(\"FC\", seq(1, 6)),\n    to = c(\n      \"FC1\",\n      \"FC2\",\n      \"FC3\",\n      \"FC4-6\",\n      \"FC7\",\n      \"FC8\"\n    )\n  ),\n  Var2 = plyr::mapvalues(Var2,\n    from = c(\n      \"diag_age\",\n      \"final_diagUC\",\n      \"sexM\"\n    ),\n    to = c(\n      \"age\",\n      \"diagnosisUlcerative Colitis\",\n      \"sexMale\"\n    )\n  )\n)\n\ndk.fc.cd &lt;- read.csv(\n  paste0(\n    prefix,\n    \"Denmark/2024-12-13/Fcal_association_tests_merge4_6_CD.csv\"\n  ),\n  sep = \";\"\n)\n\n\ndk.fc.cd &lt;- dk.fc.cd %&gt;% mutate(\n  Var1 = plyr::mapvalues(Var1,\n    from = paste0(\"FC\", seq(1, 6)),\n    to = c(\n      \"FC1\",\n      \"FC2\",\n      \"FC3\",\n      \"FC4-6\",\n      \"FC7\",\n      \"FC8\"\n    )\n  ),\n  Var2 = plyr::mapvalues(Var2,\n    from = c(\n      \"diag_age\",\n      \"sexM\"\n    ),\n    to = c(\n      \"age\",\n      \"sexMale\"\n    )\n  )\n)\n\n\ndk.fc.uc &lt;- read.csv(\n  paste0(\n    prefix,\n    \"Denmark/2024-12-13/Fcal_association_tests_merge4_6_UC.csv\"\n  ),\n  sep = \";\"\n)\n\n\ndk.fc.uc &lt;- dk.fc.uc %&gt;% mutate(\n  Var1 = plyr::mapvalues(Var1,\n    from = paste0(\"FC\", seq(1, 6)),\n    to = c(\n      \"FC1\",\n      \"FC2\",\n      \"FC3\",\n      \"FC4-6\",\n      \"FC7\",\n      \"FC8\"\n    )\n  ),\n  Var2 = plyr::mapvalues(Var2,\n    from = c(\n      \"diag_age\",\n      \"sexM\"\n    ),\n    to = c(\n      \"age\",\n      \"sexMale\"\n    )\n  )\n)\n\n\ndk.crp &lt;- read.csv(\n  paste0(\n    prefix,\n    \"Denmark/2024-12-13/CRP_association_tests.csv\"\n  ),\n  sep = \";\"\n)\ndk.crp &lt;- dk.crp %&gt;% mutate(Var2 = plyr::mapvalues(Var2,\n  from = c(\n    \"diag_age\",\n    \"final_diagUC\",\n    \"sexM\"\n  ),\n  to = c(\n    \"age\",\n    \"diagnosisUlcerative Colitis\",\n    \"sexMale\"\n  )\n))\n\n\nThis page explores potential associations between information available at diagnosis, or shortly thereafter, and cluster membership. A descriptive analysis of baseline variables in described in a previous page.\nFor univariate analyses, continuous data have been analysed via ANOVA, and categorical data have been analysed using chi-squared or Fisher’s exact test as appropriate. Time-to-event data have been analysed using log-rank tests of Kaplan-Meier curves.\nMultivariate analyses were also performed to potentially adjust for confounding factors.\nAs faecal calprotectin (FC) and C-reactive protein (CRP) were analysed independently, this page is split into FC and CRP sections."
  },
  {
    "objectID": "source/post/associations.html#introduction",
    "href": "source/post/associations.html#introduction",
    "title": "Associations with cluster membership",
    "section": "",
    "text": "Codeset.seed(123)\nif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\n##########################\n#--     Packages       --#\n##########################\n\nlibrary(tidyverse)\nlibrary(dplyr)\n# Support package (source found in libdr/)\nlibrary(libdr)\n## Modelling ##\nlibrary(lcmm)\nlibrary(nnet) # Multinomial logistic regression\n## Survival analysis ##\nlibrary(survival)\nlibrary(survminer)\n\n## Presentation ##\nlibrary(patchwork)\nlibrary(pander)\nlibrary(viridis)\n\ndict &lt;- readRDS(paste0(prefix, \"processed/dict.RDS\"))\nfcal &lt;- readRDS(paste0(prefix, \"processed/fcal.RDS\"))\nmodel.fc &lt;- readRDS(paste0(prefix, \"/cache/fcal/ncs/fcal-8.RDS\"))\ncrp &lt;- readRDS(paste0(prefix, \"processed/crp.RDS\"))\ncrp.median &lt;- readRDS(paste0(prefix, \"processed/median-crp.RDS\"))\nmodel.crp &lt;- readRDS(paste0(prefix, \"cache/crp-ma/crp-8.RDS\"))\n\n\ndk &lt;- read.csv(\n  paste0(\n    prefix,\n    \"Denmark/2024-12-13/Fcal_association_tests_merge4_6.csv\"\n  ),\n  sep = \";\"\n)\ndk &lt;- dk %&gt;% mutate(\n  Var1 = plyr::mapvalues(Var1,\n    from = paste0(\"FC\", seq(1, 6)),\n    to = c(\n      \"FC1\",\n      \"FC2\",\n      \"FC3\",\n      \"FC4-6\",\n      \"FC7\",\n      \"FC8\"\n    )\n  ),\n  Var2 = plyr::mapvalues(Var2,\n    from = c(\n      \"diag_age\",\n      \"final_diagUC\",\n      \"sexM\"\n    ),\n    to = c(\n      \"age\",\n      \"diagnosisUlcerative Colitis\",\n      \"sexMale\"\n    )\n  )\n)\n\ndk.fc.cd &lt;- read.csv(\n  paste0(\n    prefix,\n    \"Denmark/2024-12-13/Fcal_association_tests_merge4_6_CD.csv\"\n  ),\n  sep = \";\"\n)\n\n\ndk.fc.cd &lt;- dk.fc.cd %&gt;% mutate(\n  Var1 = plyr::mapvalues(Var1,\n    from = paste0(\"FC\", seq(1, 6)),\n    to = c(\n      \"FC1\",\n      \"FC2\",\n      \"FC3\",\n      \"FC4-6\",\n      \"FC7\",\n      \"FC8\"\n    )\n  ),\n  Var2 = plyr::mapvalues(Var2,\n    from = c(\n      \"diag_age\",\n      \"sexM\"\n    ),\n    to = c(\n      \"age\",\n      \"sexMale\"\n    )\n  )\n)\n\n\ndk.fc.uc &lt;- read.csv(\n  paste0(\n    prefix,\n    \"Denmark/2024-12-13/Fcal_association_tests_merge4_6_UC.csv\"\n  ),\n  sep = \";\"\n)\n\n\ndk.fc.uc &lt;- dk.fc.uc %&gt;% mutate(\n  Var1 = plyr::mapvalues(Var1,\n    from = paste0(\"FC\", seq(1, 6)),\n    to = c(\n      \"FC1\",\n      \"FC2\",\n      \"FC3\",\n      \"FC4-6\",\n      \"FC7\",\n      \"FC8\"\n    )\n  ),\n  Var2 = plyr::mapvalues(Var2,\n    from = c(\n      \"diag_age\",\n      \"sexM\"\n    ),\n    to = c(\n      \"age\",\n      \"sexMale\"\n    )\n  )\n)\n\n\ndk.crp &lt;- read.csv(\n  paste0(\n    prefix,\n    \"Denmark/2024-12-13/CRP_association_tests.csv\"\n  ),\n  sep = \";\"\n)\ndk.crp &lt;- dk.crp %&gt;% mutate(Var2 = plyr::mapvalues(Var2,\n  from = c(\n    \"diag_age\",\n    \"final_diagUC\",\n    \"sexM\"\n  ),\n  to = c(\n    \"age\",\n    \"diagnosisUlcerative Colitis\",\n    \"sexMale\"\n  )\n))\n\n\nThis page explores potential associations between information available at diagnosis, or shortly thereafter, and cluster membership. A descriptive analysis of baseline variables in described in a previous page.\nFor univariate analyses, continuous data have been analysed via ANOVA, and categorical data have been analysed using chi-squared or Fisher’s exact test as appropriate. Time-to-event data have been analysed using log-rank tests of Kaplan-Meier curves.\nMultivariate analyses were also performed to potentially adjust for confounding factors.\nAs faecal calprotectin (FC) and C-reactive protein (CRP) were analysed independently, this page is split into FC and CRP sections."
  },
  {
    "objectID": "source/post/associations.html#faecal-calprotectin-analysis",
    "href": "source/post/associations.html#faecal-calprotectin-analysis",
    "title": "Associations with cluster membership",
    "section": "Faecal calprotectin analysis",
    "text": "Faecal calprotectin analysis\nMerge subject-level metadata with model-derived quantities\n\nCodemyDF.fc &lt;- fcal %&gt;%\n  group_by(ids) %&gt;%\n  summarise(\n    n.total = n(),\n    followup = max(calpro_time),\n  ) %&gt;%\n  mutate(\n    followup_cut = cut(followup, breaks = c(0, 2, 4, 6, 7)),\n    n.total_cut = cut(n.total, breaks = c(0, 5, 10, 20, max(n.total)))\n  )\n\nmyDF.fc &lt;- merge(myDF.fc,\n  model.fc$pprob,\n  by = \"ids\",\n  all.x = FALSE,\n  all.y = TRUE\n)\nmyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(probmax = pmax(\n    prob1, prob2, prob3, prob4,\n    prob5, prob6, prob7, prob8\n  )) # , prob9, prob10))\nmyDF.fc &lt;- merge(myDF.fc, dict, by = \"ids\", all.x = TRUE, all.y = FALSE)\n\nmyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(class_order = plyr::mapvalues(\n    class,\n    from = seq_len(8), to = c(7, 6, 4, 8, 1, 5, 2, 3)\n  )) %&gt;%\n  mutate(class_order = factor(\n    class_order,\n    levels = 1:8, labels = paste0(\"FC\", 1:8)\n  )) %&gt;%\n  mutate(\n    prob_order1 = prob5, prob_order2 = prob7,\n    prob_order3 = prob8, prob_order4 = prob3,\n    prob_order5 = prob6, prob_order6 = prob2,\n    prob_order7 = prob1, prob_order8 = prob4\n  )\n\nmyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(\n    class_order_original = class_order,\n    prob_order_original_1 = prob_order1,\n    prob_order_original_2 = prob_order2,\n    prob_order_original_3 = prob_order3,\n    prob_order_original_4 = prob_order4,\n    prob_order_original_5 = prob_order5,\n    prob_order_original_6 = prob_order6,\n    prob_order_original_7 = prob_order7,\n    prob_order_original_8 = prob_order8,\n    probmax_original = pmax(\n      prob_order1,\n      prob_order2,\n      prob_order3,\n      prob_order4,\n      prob_order5,\n      prob_order6,\n      prob_order7,\n      prob_order8\n    ),\n    class_order = plyr::mapvalues(class_order,\n      from = c(\"FC5\", \"FC6\", \"FC7\", \"FC8\"),\n      to = c(\"FC4\", \"FC4\", \"FC5\", \"FC6\")\n    ),\n    prob_order4 = prob_order4 + prob_order5 + prob_order6,\n    prob_order5 = prob_order7,\n    prob_order6 = prob_order8\n  ) %&gt;%\n  select(-prob_order7, -prob_order8) %&gt;%\n  mutate(probmax = pmax(\n    prob_order1,\n    prob_order2,\n    prob_order3,\n    prob_order4,\n    prob_order5,\n    prob_order6\n  ))\n\n\nnewlabs &lt;- c(\"FC1\", \"FC2\", \"FC3\", \"FC4-6\", \"FC7\", \"FC8\")\n\nmyDF.fc$class_order &lt;- factor(myDF.fc$class_order,\n  levels = paste0(\"FC\", seq(1, 6)),\n  labels = newlabs\n)\n\n\nHere, we create a data frame that combines individual-level information (e.g. age at diagnosis, sex) with model-derived quantities, such as the posterior probabilities of class assignment. To facilitate visualisation, we also create discretised versions for some variables.\nUncertainty cluster assignment probabilities\nFirst, we calculate the proportion of individuals assigned to each cluster with probability above 0.5.\n\nCodep1 &lt;- myDF.fc %&gt;%\n  group_by(class_order_original) %&gt;%\n  summarise(\n    prop50 = 100 * mean(probmax_original &gt; 0.5),\n    prop75 = 100 * mean(probmax_original &gt; 0.75)\n  ) %&gt;%\n  ggplot(aes(x = class_order_original, y = prop50)) +\n  ylim(c(0, 100)) +\n  xlab(\"Assigned cluster\") +\n  ylab(\"% assigned with prob &gt; 0.5\") +\n  geom_bar(stat = \"identity\", fill = \"#F9DC5C\", color = \"#C6AB00\") +\n  theme_minimal()\n\np1\n\n\n\n\n\n\n\nNext, we calculate average posterior probabilities of cluster assignment.\n\nCodemyDF.fc_means &lt;- myDF.fc %&gt;%\n  group_by(class_order_original, followup_cut) %&gt;%\n  summarise(\n    across(\n      starts_with(\"prob_order_original\"),\n      function(x) mean(x, na.rm = TRUE)\n    ),\n    .groups = \"drop\"\n  ) %&gt;%\n  pivot_longer(\n    cols = starts_with(\"prob_order_original\"),\n    names_to = \"prob_order_original\"\n  )\n\n\nFigure 1 shows how cluster assignment probabilities change as follow-up for subjects increases. As one would expect, probabilities typically increase as as follow-up increases. This relationship appears to depend upon when the mean trajectory for the assigned cluster substantially differs from the other clusters. FC8 shows high posterior probabilities with even short follow-up as this is the only cluster with low FC at diagnosis. However, longer follow-ups are required to distinguish other clusters. For example, individuals assigned to FC6 that have a short follow-up (&lt; 4 years from diagnosis) have, on average, a high probability of being assigned to FC3 instead ( versus ). This is not unexpected, as FC3 and FC6 share similar patterns within the first 2 years.\n\nCode# Assign level order otherwise alphanumerical order used\n# and add sample sizes to labels\nmyDF.fc_means &lt;- myDF.fc_means %&gt;%\n  mutate(\n    prob_order_original = factor(prob_order_original,\n      levels = paste0(\n        \"prob_order_original_\",\n        1:8\n      ),\n      labels = paste0(\"FC\", seq(1, 8))\n    ),\n    class_order_original = factor(class_order_original,\n      levels = paste0(\"FC\", 1:8),\n      labels = paste0(\n        \"Assigned to FC\", 1:8, \"\\n n = \",\n        as.vector(table(myDF.fc$class_order_original))\n      )\n    )\n  )\n\nfc_fup &lt;- myDF.fc_means %&gt;%\n  ggplot(aes(fill = prob_order_original, y = value, x = followup_cut)) +\n  geom_bar(position = \"fill\", stat = \"identity\") +\n  facet_wrap(. ~ class_order_original, ncol = 4) +\n  theme_minimal() +\n  theme(\n    legend.title = element_text(hjust = 0.5),\n    strip.background = element_rect(\n      color = \"lightgray\",\n      linewidth = 1.5,\n      linetype = \"solid\"\n    )\n  ) +\n  labs(\n    x = \"Follow-up cutoff (years)\",\n    y = \"\",\n    fill = \"Mean posterior\\nprobability of\\ncluster assignment\"\n  ) +\n  scale_fill_viridis_d(option = \"inferno\")\n\nfc_fup\n\nggsave(\"plots/fc-prob-fup.png\", fc_fup, width = 11, height = 8, units = \"in\")\nggsave(\"plots/fc-prob-fup.pdf\", fc_fup, width = 11, height = 8, units = \"in\")\n\n\n\n\n\n\nFigure 1: Demonstration of how mean posterior probabilities of cluster assignment for subjects changes based upon follow-up and assigned cluster.\n\n\n\n\nCluster assignment and year of diagnosis\n\nCodex &lt;- with(myDF.fc, table(as.factor(year(date.of.diag)), class_order_original))\nx &lt;- as.matrix(x)\ni &lt;- 0\nwhile (any(x &lt; 5)) {\n  if (any(x[i, ] &lt; 5)) {\n    if (i == nrow(x)) {\n      x[i - 1, ] &lt;- x[i - 1, ] + x[i, ]\n      rownames(x)[i - 1] &lt;- paste0(rownames(x)[i - 1], \", \", rownames(x)[i])\n      x &lt;- x[-i, ]\n    } else {\n      x[i, ] &lt;- x[i, ] + x[i + 1, ]\n      rownames(x)[i] &lt;- paste0(rownames(x)[i], \", \", rownames(x)[i + 1])\n      x &lt;- x[-(i + 1), ]\n      i &lt;- i - 1\n    }\n  }\n  i &lt;- i + 1\n}\nif (any(x &lt; 5)) {\n  stop(\"Failed to find a grouping for diagnosis year with at least 5 subjects in each cluster.\")\n}\n\n\nTo explore a potential relationship between cluster assignment and era effect, we have investigated year of diagnosis and cluster assignment. However, as fewer than five subjects were diagnosed in some years for specific clusters, we have grouped years together.\nThe following groupings ensure at least five subjects are in every stratum:\n\n2008, 2009, 2010\n2011\n2012\n2013, 2014\n2015, 2016\n2017\n2018, 2019\n\n\nCodemyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(year = plyr::mapvalues(year(date.of.diag),\n    from = c(\n      2008,\n      2009,\n      2010,\n      2013,\n      2014,\n      2015,\n      2016,\n      2018,\n      2019\n    ),\n    to = c(\n      \"2008-2010\",\n      \"2008-2010\",\n      \"2008-2010\",\n      \"2013-2014\",\n      \"2013-2014\",\n      \"2015-2016\",\n      \"2015-2016\",\n      \"2018-2019\",\n      \"2018-2019\"\n    )\n  ))\n\np &lt;- myDF.fc %&gt;%\n  ggplot(aes(x = year, fill = class_order_original)) +\n  geom_bar(position = \"fill\") +\n  scale_fill_viridis_d(option = \"inferno\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::label_percent()) +\n  labs(x = \"Year of IBD diagnosis\", y = \"\", fill = \"Assigned cluster\")\nggsave(\"plots/associations/fc-diagyear.pdf\",\n  p,\n  width = 8,\n  height = 6,\n  units = \"in\",\n  create.dir = TRUE\n)\np\n\n\n\n\n\n\nFigure 2: Proportion of subjects assigned to each FC cluster by year of diagnosis. Years with fewer than five subjects in a cluster are grouped together.\n\n\n\n\nAssociations with respect to cluster assignments\nThis section displays descriptive plots to summarize marginal associations between cluster assignments and individual-level covariates. We also explore univariate and multivariate associations with respect to cluster assignment using multinomial logistic regression. As a sensitivity analysis, we also consider restricting the analysis to only consider individuals whose class assignment was less uncertain (with posterior probability &gt; 0.5).\n\nFor all individuals\n\nCodep_diagnosis_all &lt;- myDF.fc %&gt;%\n  plotCat(\"diagnosis\", class = \"class_order\")\n\np_sex_all &lt;- myDF.fc %&gt;%\n  plotCat(\"sex\", class = \"class_order\")\n\np_age_all &lt;- myDF.fc %&gt;%\n  ggplot(aes(x = class_order, y = age)) +\n  geom_violin(fill = \"#5DB7DE\", color = \"#434371\") +\n  geom_boxplot(width = 0.1, color = \"black\", alpha = 0.2) +\n  theme_minimal() +\n  xlab(\"Cluster\") +\n  ylab(\"Age at diagnosis\")\n\np_mlr_all &lt;- myDF.fc %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"FC1\")) %&gt;%\n  mlrPlot(var = c(\"diagnosis\", \"age\", \"sex\"), class = \"class_order\")\n\ntemp.1 &lt;- myDF.fc %&gt;% filter(class_order == \"FC1\")\ntemp.2 &lt;- myDF.fc %&gt;% filter(class_order != \"FC1\")\nperc.fc1 &lt;- round(\n  sum(temp.1$diagnosis == \"Crohn's Disease\") /\n    nrow(temp.1) * 100,\n  1\n)\nperc.rest &lt;- round(\n  sum(temp.2$diagnosis == \"Crohn's Disease\") /\n    nrow(temp.2) * 100,\n  1\n)\n\n\nHere, we consider associations with respect to information available at diagnosis: age, sex and IBD type.\n62.9% of subjects in FC1 have Crohn’s disease whilst 50.9% of subjects in the other clusters have Crohn’s disease.\n\nCodep &lt;- wrap_elements(p_diagnosis_all) +\n  wrap_elements(p_mlr_all$p_both$`diagnosisUlcerative Colitis` +\n    p_mlr_all$p_both$`diagnosisIBDU` +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1.25, 2)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/fc-diagnosis.pdf\",\n  p,\n  width = 15,\n  height = 12,\n  units = \"in\",\n  create.dir = TRUE\n)\nprint(p)\n\n\n\n\n\n\n\n\nCodep_mlr_all &lt;- myDF.fc %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"FC1\")) %&gt;%\n  mlrPlot(\n    var = c(\"diagnosis\", \"age\", \"sex\"),\n    class = \"class_order\",\n    extern = dk\n  )\n\np &lt;- (wrap_elements(p_age_all) + p_mlr_all$plot_everything$age & theme(legend.position = \"none\")) /\n  (wrap_elements(p_sex_all) + p_mlr_all$plot_everything$sexMale +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1, 1)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/fc-sex-age.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\nDiagnosis year\n\nCodemyDF.fc %&gt;%\n  ggplot(aes(\n    x = as.character(year(date.of.diag)),\n    fill = class_order_original\n  )) +\n  geom_bar(position = \"fill\") +\n  labs(x = \"Year of diagnosis\", y = \"\", fill = \"Assigned cluster\") +\n  scale_fill_viridis_d(option = \"inferno\") +\n  scale_y_continuous(labels = scales::percent) +\n  theme_minimal()\n\n\n\n\n\n\n\nCrohn’s disease only\nFor CD patients, we also consider additional phenotyping information. This includes the following information:\nSmoking\nThis is recorded as a binary (Yes/No) variable and is primarily based on self-reporting. As such, it may not necessarily reflect true smoking status. Smoking was missing for approximately 5% of CD patients in the FC cohort.\nMontreal location\nMontreal location refers to where gastrointestinal inflammation is present and is categorised as:\n\nL1: Ileal, limited to the ileum which is the final segment of the small intestine.\nL2: Colonic, limited to the colon/large intestine.\nL3: Ileocolonic, inflammation is present in both the ileum and colon.\n\nMontreal location was missing for approximately 1% of CD patients in the FC cohort.\nMontreal behaviour\nMontreal behaviour describes another clinical phenotype and is defined as follows:\n\nB1: Inflammatory, in other words non-stricturing and non-penetrating\nB2: Stricturing, where the formation of fibrosis leads to the narrowing of the intestine.\nB3: Penetrating, where the inflammation causes the formation of fistulas or abscesses.\n\nDue to small numbers, B2 and B3 are merged into a single group (complicated CD) when analysing Montreal behaviour.\n\nCodemyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(Behaviour_merged = plyr::mapvalues(Behaviour,\n    from = c(\"B1\", \"B2\", \"B3\", NA),\n    to = c(\"B1\", \"B2 or B3\", \"B2 or B3\", NA)\n  ))\n\n\nMontreal behaviour was missing for approximately 2% of CD patients in the FC cohort.\nUpper GI inflammation\nUpper GI inflammation refers to any gastrointestinal inflammation further up than the ileum. Usually, upper inflammation is considered a modifier for Montreal location and is denoted L4. Upper GI inflammation (L4) was missing for a high proportion of CD individuals in the FC cohort (approx 33%. This is because the required investigations are only carried out where upper GI inflammation is suspected. As such, we have manually mapped missing L4 values as “No” (i.e. no upper GI inflammation for the associated patients).\n\nCodemyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(L4 = ifelse(!is.na(L4), L4, \"No\"))\n\n\nPerianal disease\nPerianal disease is considered a modifier for Montreal behaviour and is a severe complication of Crohn’s disease involving inflammation around the anus.\nPerianal disease status was missing for approximately 1% of CD patients in the FC cohort.\nNOTE: For the purposes of the multinomial logistic regression model, individuals with missing values in any of these variables will be excluded. For consistency, such individuals will also be excluded from the univariate summary plots.\nFor this purpose, we create a missingness indicator (missingN_cd) which will facilitate the application of such filter.\n\nCodemyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(missingN_cd = is.na(Smoke) +\n    is.na(Location) +\n    is.na(L4) +\n    is.na(Behaviour) +\n    is.na(Perianal))\n\nwith(myDF.fc[myDF.fc$diagnosis == \"Crohn's Disease\", ], table(missingN_cd &gt; 0))\n\n\nFALSE  TRUE \n  513    31 \n\n\nAs shown above, 31 subjects will be excluded hereafter.\nHere is the code to explore the associations:\n\nCodep_sex_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  plotCat(\"sex\", class = \"class_order\")\n\np_age_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  ggplot(aes(x = class_order, y = age)) +\n  geom_violin(fill = \"#5DB7DE\", color = \"#434371\") +\n  geom_boxplot(width = 0.1, color = \"black\", alpha = 0.2) +\n  theme_minimal() +\n  xlab(\"Cluster\") +\n  ylab(\"Age at diagnosis\")\n\np_smoke_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(Smoke = ifelse(!is.na(Smoke), Smoke, \"Missing\")) %&gt;%\n  plotCat(\"Smoke\", class = \"class_order\")\n\np_location_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(Location = ifelse(!is.na(Location), Location, \"Missing\")) %&gt;%\n  plotCat(\"Location\", class = \"class_order\")\n\np_behaviour_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(Behaviour = ifelse(!is.na(Behaviour_merged),\n    Behaviour_merged,\n    \"Missing\"\n  )) %&gt;%\n  plotCat(\"Behaviour\", class = \"class_order\")\n\np_L4_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(L4 = ifelse(!is.na(L4), L4, \"Missing\")) %&gt;%\n  plotCat(\"L4\", class = \"class_order\")\n\np_perianal_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(Perianal = ifelse(!is.na(Perianal), Perianal, \"Missing\")) %&gt;%\n  plotCat(\"Perianal\", class = \"class_order\")\n\np_mlr_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"FC1\")) %&gt;%\n  mlrPlot(\n    var = c(\n      \"age\", \"sex\",\n      \"Smoke\", \"Location\", \"L4\", \"Behaviour_merged\", \"Perianal\"\n    ),\n    class = \"class_order\",\n    extern = dk.fc.cd\n  )\n\n\n\nCode(wrap_elements(p_age_cd) + p_mlr_cd$p_both$age) /\n  (wrap_elements(p_sex_cd) + p_mlr_cd$p_both$sexMale) +\n  plot_annotation(tag_levels = \"A\", title = \"CD patients only\")\n\n\n\n\n\n\n\n\nCodep &lt;- (p_age_cd + ylim(0, 90) + ggplot()) / (p_mlr_cd$plot_everything$age + ggplot()) +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\") &\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/fc-cd-age.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\np &lt;- (wrap_elements(p_sex_cd) + ggplot()) /\n  (p_mlr_cd$plot_everything$sexMale + ggplot()) +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\") &\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/fc-cd-sex.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\n\n\nCodep_mlr_cd &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"FC1\")) %&gt;%\n  mlrPlot(\n    var = c(\n      \"age\", \"sex\",\n      \"Smoke\", \"Location\", \"L4\", \"Behaviour_merged\", \"Perianal\"\n    ),\n    class = \"class_order\"\n  )\n\np &lt;- wrap_elements(p_smoke_cd) +\n  (p_mlr_cd$p_both$SmokeYes & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\n\nggsave(\"plots/associations/fc-cd-smoking.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\np\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_location_cd) +\n  wrap_elements(p_mlr_cd$p_both$LocationL2 + p_mlr_cd$p_both$LocationL3 +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1.25, 2)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/fc-location.pdf\",\n  p,\n  width = 15,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_L4_cd) +\n  (p_mlr_cd$p_both$L4Yes & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/fc-L4.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\nprint(p)\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_behaviour_cd) +\n  (p_mlr_cd$p_both$`Behaviour_mergedB2 or B3` & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/fc-behaviour.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_perianal_cd) +\n  (p_mlr_cd$p_both$PerianalYes & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/fc-perianal.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\nprint(p)\n\n\n\n\n\n\n\n\nCode(wrap_elements(p_age_cd) + p_mlr_cd$p_both$age) /\n  (wrap_elements(p_sex_cd) + p_mlr_cd$p_both$sexMale) +\n  plot_annotation(tag_levels = \"A\", title = \"CD patients only\")\n\n\n\n\n\n\n\n\nCodewrap_elements(p_smoke_cd) + p_mlr_cd$p_both$SmokeYes +\n  plot_annotation(title = \"CD patients only\")\n\n\n\n\n\n\n\n\nCodewrap_elements(p_location_cd) +\n  (p_mlr_cd$p_both$LocationL2 + p_mlr_cd$p_both$LocationL3 +\n    plot_layout(guides = \"collect\")) +\n  plot_annotation(title = \"CD patients only\")\n\n\n\n\n\n\n\n\nCodewrap_elements(p_L4_cd) + p_mlr_cd$p_both$L4Yes +\n  plot_annotation(title = \"CD patients only\")\n\n\n\n\n\n\n\n\nCodewrap_elements(p_behaviour_cd) + p_mlr_cd$p_both$`Behaviour_mergedB2 or B3` +\n  plot_annotation(title = \"CD patients only\")\n\n\n\n\n\n\n\n\nCodewrap_elements(p_perianal_cd) + p_mlr_cd$p_both$PerianalYes +\n  plot_annotation(title = \"CD patients only\")\n\n\n\n\n\n\n\nUlcerative Colitis only\nThe additional phenotyping information available for UC patients consists of:\nSmoking\nThis is defined in the same way as for CD patients.\nSmoking was missing for approximately 6% of UC patients in the FC cohort.\nExtent\n\nNOTE: As for CD cases, individuals with missing values in any of these variables will be excluded from the association analysis. For consistency, such individuals will also be excluded from the univariate summary plots.\nFor this purpose, we create a missingness indicator (missingN_uc) which will facilitate the application of such filter.\n\nCodemyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(missingN_uc = is.na(Smoke) + is.na(Extent))\nwith(\n  myDF.fc[myDF.fc$diagnosis == \"Ulcerative Colitis\", ],\n  table(missingN_uc &gt; 0)\n)\n\n\nFALSE  TRUE \n  357    23 \n\n\nAs shown above, 23 will be excluded hereafter.\n\nCodep_sex_uc &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  plotCat(\"sex\", class = \"class_order\")\n\np_age_uc &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  ggplot(aes(x = class_order, y = age)) +\n  geom_violin(fill = \"#5DB7DE\", color = \"#434371\") +\n  geom_boxplot(width = 0.1, color = \"black\", alpha = 0.2) +\n  theme_minimal() +\n  xlab(\"Cluster\") +\n  ylab(\"Age at diagnosis\")\n\np_smoke_uc &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(Smoke = ifelse(!is.na(Smoke), Smoke, \"Missing\")) %&gt;%\n  plotCat(\"Smoke\", class = \"class_order\")\n\np_extent_uc &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(Extent = ifelse(!is.na(Extent), Extent, \"Missing\")) %&gt;%\n  plotCat(\"Extent\", class = \"class_order\")\n\np_mlr_uc &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"FC1\")) %&gt;%\n  mlrPlot(\n    var = c(\"age\", \"sex\", \"Smoke\", \"Extent\"),\n    class = \"class_order\",\n    extern = dk.fc.uc\n  )\n\n\n\nCode(wrap_elements(p_age_uc) + p_mlr_uc$p_both$age) /\n  (wrap_elements(p_sex_uc) + p_mlr_uc$p_both$sexMale) +\n  plot_annotation(tag_levels = \"A\", title = \"UC patients only\")\n\n\n\n\n\n\n\n\nCodep &lt;- (p_age_uc + ylim(0, 90) + ggplot()) / (p_mlr_uc$plot_everything$age + ggplot()) +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\") &\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/fc-uc-age.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\np &lt;- (wrap_elements(p_sex_uc) + ggplot()) /\n  (p_mlr_uc$plot_everything$sexMale + ggplot()) +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\") &\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/fc-uc-sex.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\n\n\nCodep_mlr_uc &lt;- myDF.fc %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"FC1\")) %&gt;%\n  mlrPlot(\n    var = c(\"age\", \"sex\", \"Smoke\", \"Extent\"),\n    class = \"class_order\"\n  )\n\np &lt;- wrap_elements(p_smoke_uc) +\n  (p_mlr_uc$p_both$SmokeYes & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/fc-uc-smoking.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_extent_uc) +\n  wrap_elements(p_mlr_uc$p_both$ExtentE2 + p_mlr_uc$p_both$ExtentE3 +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1.25, 2)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/fc-extent.pdf\",\n  p,\n  width = 15,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\n\nCode(wrap_elements(p_age_uc) + p_mlr_uc$plot_everything$age) /\n  (wrap_elements(p_sex_uc) + p_mlr_uc$plot_everything$sexMale) +\n  plot_annotation(tag_levels = \"A\", title = \"UC patients only\")\n\n\n\n\n\n\n\n\nCodewrap_elements(p_smoke_uc) + p_mlr_uc$plot_everything$SmokeYes +\n  plot_annotation(title = \"UC patients only\")\n\n\n\n\n\n\n\n\nCodewrap_elements(p_extent_uc) +\n  (p_mlr_uc$p_both$ExtentE2 +\n    ylim(c(-5, 5)) +\n    p_mlr_uc$p_both$ExtentE3 + ylim(c(-5, 5)) +\n    plot_layout(guides = \"collect\")) +\n  plot_annotation(title = \"UC patients only\")\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\nRemoved 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nNote that, due to small counts of extent E1 in cluster FC3, the model fitted after excluding those with low probability of cluster assignment was subject to numerical issues (complete separation). As such, the associated estimates are excluded from the plot.\nSome statistics to be used in the text:\n\nCodemyDF.fc %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(class_aux = ifelse(class_order %in% c(\"FC8\"),\n    class_order,\n    \"Other\"\n  )) %&gt;%\n  group_by(class_aux, sex) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count) * 100)) %&gt;%\n  knitr::kable()\n\n`summarise()` has grouped output by 'class_aux'. You can override using the\n`.groups` argument.\n\n\n\n\nclass_aux\nsex\ncount\npercentage\n\n\n\n6\nFemale\n7\n28.0000\n\n\n6\nMale\n18\n72.0000\n\n\nOther\nFemale\n167\n50.3012\n\n\nOther\nMale\n165\n49.6988\n\n\n\n\nCodemyDF.fc %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(class_aux = ifelse(class_order %in% c(\"FC3\"),\n    class_order,\n    \"Other\"\n  )) %&gt;%\n  group_by(class_aux, Extent) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count) * 100)) %&gt;%\n  knitr::kable()\n\n`summarise()` has grouped output by 'class_aux'. You can override using the\n`.groups` argument.\n\n\n\n\nclass_aux\nExtent\ncount\npercentage\n\n\n\n3\nE1\n1\n2.439024\n\n\n3\nE2\n21\n51.219512\n\n\n3\nE3\n19\n46.341463\n\n\nOther\nE1\n45\n14.240506\n\n\nOther\nE2\n129\n40.822785\n\n\nOther\nE3\n142\n44.936709\n\n\n\n\n\nAdvanced therapy use\nSummary statistics of AT use\nHere, we focus on AT therapy within the observation period (i.e. seven years since diagnosis). Overall, we observe significant differences in AT across clusters. In particular, after adjusting for age and sex, AT was significantly lower in FC2.\n\nCodemyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(AT_7Y = ifelse(AT == 1 & AT_line_1 &lt;= 7, 1, 0))\n\np_AT &lt;- myDF.fc %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  plotCat(\"AT_7Y\", class = \"class_order\")\n\np_AT_mlr &lt;- myDF.fc %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  mutate(class_order_original = relevel(class_order_original, ref = \"FC1\")) %&gt;%\n  mlrPlot(\n    var = c(\"age\", \"sex\", \"AT_7Y\"),\n    class = \"class_order_original\"\n  )\n\nwrap_elements(p_AT) + p_AT_mlr$plot_both$AT\n\n\n\n\n\n\n\nSome statistics to be used in the text:\n\nCodetable(myDF.fc$AT_7Y)\n\n\n  0   1 \n645 391 \n\nCodemyDF.fc %&gt;%\n  mutate(class_aux = ifelse(class_order %in% c(\"FC2\"),\n    class_order_original,\n    \"Other\"\n  )) %&gt;%\n  group_by(class_aux, AT_7Y) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count) * 100))\n\n`summarise()` has grouped output by 'class_aux'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 4\n# Groups:   class_aux [2]\n  class_aux AT_7Y count percentage\n  &lt;chr&gt;     &lt;dbl&gt; &lt;int&gt;      &lt;dbl&gt;\n1 2             0    58       86.6\n2 2             1     9       13.4\n3 Other         0   587       60.6\n4 Other         1   382       39.4\n\n\nHowever, as seen below, AT use varies across different IBD types (highest among CD patients, lowest among IBDU) patients.\n\nCodemyDF.fc %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  plotCat(\"AT_7Y\", class = \"diagnosis\")\n\n\n\n\n\n\n\nAs such, we also stratify cluster-specific AT usage according to IBD type. For this purpose, we exclude IBDU due to its small size.\n\nCodep_AT_cd &lt;- myDF.fc %&gt;%\n  subset(diagnosis == \"Crohn's Disease\") %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  plotCat(\"AT_7Y\", class = \"class_order_original\")\n\np_AT_uc &lt;- myDF.fc %&gt;%\n  subset(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  plotCat(\"AT_7Y\", class = \"class_order_original\")\n\n\nwrap_elements(p_AT) + ggtitle(\"CD + UC + IBDU\") +\n  wrap_elements(p_AT_cd) + ggtitle(\"CD only\") +\n  wrap_elements(p_AT_uc) + ggtitle(\"UC only\")\n\n\n\n\n\n\n\nAT use within the first year\n\nCodemyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(AT_1Y = ifelse(AT == 1 & AT_line_1 &lt;= 1, 1, 0))\n\ntable(myDF.fc$AT_1Y)\n\n\n  0   1 \n863 173 \n\nCodemyDF.fc %&gt;%\n  count(AT_1Y, group_by = diagnosis)\n\n  AT_1Y           group_by   n\n1     0    Crohn's Disease 415\n2     0 Ulcerative Colitis 338\n3     0               IBDU 110\n4     1    Crohn's Disease 129\n5     1 Ulcerative Colitis  42\n6     1               IBDU   2\n\nCodep_AT_1Y &lt;- myDF.fc %&gt;%\n  mutate(AT_1Y = factor(AT_1Y)) %&gt;%\n  plotCat(\"AT_1Y\", class = \"class_order_original\")\n\np_AT_1Y_cd &lt;- myDF.fc %&gt;%\n  subset(diagnosis == \"Crohn's Disease\") %&gt;%\n  plotCat(\"AT_1Y\", class = \"class_order_original\")\n\np_AT_1Y_cd &lt;- myDF.fc %&gt;%\n  subset(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  plotCat(\"AT_1Y\", class = \"class_order_original\")\n\n\nWe also generate a censored version for AT_1Y where lack of AT is treated as a right censored observation at seven years.\n\nCodemyDF.fc &lt;- myDF.fc %&gt;%\n  mutate(AT_line_1_cens = if_else(AT_7Y == 0, 7, as.numeric(AT_line_1))) %&gt;%\n  mutate(AT_line_1_cens = if_else(AT_line_1_cens &lt; 0, 0, AT_line_1_cens))\n\n\n\nCodetemp &lt;- subset(myDF.fc, diagnosis == \"Crohn's Disease\")\n\nsum(temp$AT_1Y) / nrow(temp)\n\n[1] 0.2371324\n\nCodesum(temp$AT_7Y) / nrow(temp)\n\n[1] 0.4963235\n\nCodetemp &lt;- subset(myDF.fc, diagnosis == \"Ulcerative Colitis\")\n\nsum(temp$AT_1Y) / nrow(temp)\n\n[1] 0.1105263\n\nCodesum(temp$AT_7Y) / nrow(temp)\n\n[1] 0.2842105\n\n\nCumulative AT usage\nAt present, we cannot show cumulative advanced therapy usage in this document as there are fewer than five subjects within at least one cluster-IBD type stratum. In the meantime, it is possible to view these plots in our manuscript which has digitally removed any strata with fewer than five subjects.\n\nCodekm.df &lt;- data.frame(\n  time = numeric(),\n  cumhaz = numeric(),\n  class = character(),\n  diag = character()\n)\n\nfor (g in 1:8) {\n  # Calculate cumulative patterns\n  temp.cd &lt;- myDF.fc %&gt;%\n    filter(class_order_original == paste0(\"FC\", g)) %&gt;%\n    filter(diagnosis == \"Crohn's Disease\")\n\n  temp.uc &lt;- myDF.fc %&gt;%\n    filter(class_order_original == paste0(\"FC\", g)) %&gt;%\n    filter(diagnosis == \"Ulcerative Colitis\")\n\n\n  km &lt;- survfit(Surv(AT_line_1_cens, AT_7Y) ~ 1, data = temp.cd)\n  km.df &lt;- rbind(\n    km.df,\n    data.frame(\n      time = km$time,\n      cumhaz = 1 - km$surv,\n      class = paste0(\n        \"FC\",\n        g,\n        \", CD=\",\n        nrow(temp.cd),\n        \"; UC=\",\n        nrow(temp.uc)\n      ),\n      diag = \"Crohn's disease\"\n    )\n  )\n\n\n  km &lt;- survfit(Surv(AT_line_1_cens, AT_7Y) ~ 1, data = temp.uc)\n  km.df &lt;- rbind(\n    km.df,\n    data.frame(\n      time = km$time,\n      cumhaz = 1 - km$surv,\n      class = paste0(\n        \"FC\",\n        g,\n        \", CD=\",\n        nrow(temp.cd),\n        \"; UC=\",\n        nrow(temp.uc)\n      ),\n      diag = \"Ulcerative colitis\"\n    )\n  )\n\n  temp.all &lt;- myDF.fc %&gt;%\n    filter(class_order_original == paste0(\"FC\", g))\n  km &lt;- survfit(Surv(AT_line_1_cens, AT_7Y) ~ 1, data = temp.all)\n  km.df &lt;- rbind(\n    km.df,\n    data.frame(\n      time = km$time,\n      cumhaz = 1 - km$surv,\n      class = paste0(\n        \"FC\",\n        g,\n        \", CD=\",\n        nrow(temp.cd),\n        \"; UC=\",\n        nrow(temp.uc)\n      ),\n      diag = \"All\"\n    )\n  )\n}\n\np1 &lt;- km.df %&gt;%\n  subset(diag != \"All\") %&gt;%\n  ggplot(aes(x = time, y = cumhaz)) +\n  geom_line(aes(color = diag), lty = 1, lwd = 1.2) +\n  facet_wrap(~class, ncol = 2) +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +\n  labs(\n    x = \"Time (years)\",\n    y = \"% of subjects receiving an advanced therapy\",\n    color = \"IBD type\"\n  ) +\n  theme(legend.position = \"bottom\")\n# p1\n\nggsave(\"paper/Figure-3.pdf\",\n  p1,\n  width = 8 * 3 / 4,\n  height = 12 * 3 / 4,\n  units = \"in\"\n)\nggsave(\"paper/Figure-3.png\",\n  p1,\n  width = 8 * 3 / 4,\n  height = 12 * 3 / 4,\n  units = \"in\"\n)\n\n\n\nCodekm.df %&gt;%\n  filter(diag != \"All\") %&gt;%\n  group_by(class, diag) %&gt;%\n  summarise(last_value = 100 * last(cumhaz)) %&gt;%\n  mutate(class = gsub(\",.*\", \"\", class)) %&gt;%\n  knitr::kable(\n    col.names = c(\"Cluster\", \"Diagnosis\", \"Total percentage\"),\n    digits = 1\n  )\n\n`summarise()` has grouped output by 'class'. You can override using the\n`.groups` argument.\n\n\n\n\nCluster\nDiagnosis\nTotal percentage\n\n\n\nFC1\nCrohn’s disease\n46.6\n\n\nFC1\nUlcerative colitis\n32.4\n\n\nFC2\nCrohn’s disease\n17.6\n\n\nFC2\nUlcerative colitis\n11.5\n\n\nFC3\nCrohn’s disease\n40.7\n\n\nFC3\nUlcerative colitis\n39.1\n\n\nFC4\nCrohn’s disease\n50.0\n\n\nFC4\nUlcerative colitis\n33.3\n\n\nFC5\nCrohn’s disease\n60.7\n\n\nFC5\nUlcerative colitis\n23.5\n\n\nFC6\nCrohn’s disease\n60.0\n\n\nFC6\nUlcerative colitis\n38.9\n\n\nFC7\nCrohn’s disease\n55.1\n\n\nFC7\nUlcerative colitis\n24.0\n\n\nFC8\nCrohn’s disease\n56.8\n\n\nFC8\nUlcerative colitis\n37.9"
  },
  {
    "objectID": "source/post/associations.html#c-reactive-protein-analysis",
    "href": "source/post/associations.html#c-reactive-protein-analysis",
    "title": "Associations with cluster membership",
    "section": "C-reactive protein analysis",
    "text": "C-reactive protein analysis\nMerge subject-level metadata with model-derived quantities\nHere, we create a data.frame that combines individual-level information (e.g. age at diagnosis, sex) with model-derived quantities, such as the posterior probabilities of class assignment. To facilitate visualisation, we also create discretised versions for some variables.\n\nCodemyDF.crp &lt;- crp %&gt;% # may change for crp.median\n  group_by(ids) %&gt;%\n  summarise(\n    n.total = n(),\n    followup = max(crp_time),\n  ) %&gt;%\n  mutate(\n    followup_cut = cut(followup, breaks = c(0, 2, 4, 6, 7)),\n    n.total_cut = cut(n.total, breaks = c(0, 5, 10, 20, max(n.total)))\n  )\n\nmyDF.crp &lt;- merge(myDF.crp,\n  model.crp$pprob,\n  by = \"ids\",\n  all.x = FALSE,\n  all.y = TRUE\n)\nmyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(probmax = pmax(\n    prob1, prob2, prob3, prob4,\n    prob5, prob6, prob7, prob8\n  ))\nmyDF.crp &lt;- merge(myDF.crp, dict, by = \"ids\", all.x = TRUE, all.y = FALSE)\n\nmyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(class_order = plyr::mapvalues(\n    class,\n    from = seq_len(8), to = c(2, 3, 1, 4, 5, 7, 6, 8)\n  )) %&gt;%\n  mutate(class_order = factor(\n    class_order,\n    levels = 1:8, labels = paste0(\"CRP\", 1:8)\n  )) %&gt;%\n  mutate(\n    prob_order1 = prob3, prob_order2 = prob1,\n    prob_order3 = prob2, prob_order4 = prob4,\n    prob_order5 = prob5, prob_order6 = prob7,\n    prob_order7 = prob6, prob_order8 = prob8\n  )\n\n\nUncertainty cluster assignment probabilities\nFirst, we calculate the proportion of individuals assigned to each cluster with probability above 0.5.\n\nCodep1 &lt;- myDF.crp %&gt;%\n  group_by(class_order) %&gt;%\n  summarise(\n    prop50 = 100 * mean(probmax &gt; 0.5),\n    prop75 = 100 * mean(probmax &gt; 0.75)\n  ) %&gt;%\n  ggplot(aes(x = class_order, y = prop50)) +\n  ylim(c(0, 100)) +\n  xlab(\"Assigned cluster\") +\n  ylab(\"% assigned with prob &gt; 0.5\") +\n  geom_bar(stat = \"identity\") +\n  theme_minimal()\n\np1\n\n\n\n\n\n\n\nNext, we calculate average posterior probabilities of cluster assignment.\n\nCodemyDF.crp_means &lt;- myDF.crp %&gt;%\n  group_by(class_order, followup_cut) %&gt;%\n  summarise(\n    across(\n      starts_with(\"prob_order\"),\n      function(x) mean(x, na.rm = TRUE)\n    ),\n    .groups = \"drop\"\n  ) %&gt;%\n  pivot_longer(cols = starts_with(\"prob_order\"), names_to = \"prob_order\")\n\n\n\nFigure 1 shows how cluster assignment probabilities change as follow-up for subjects increases. As one would expect, probabilities typically increase as as follow-up increases. This relationship appears to depend upon when the mean trajectory for the assigned cluster substantially differs from the other clusters. FC8 shows high posterior probabilities with even short follow-up as this is the only cluster with low FC at diagnosis. However, longer follow-ups are required to distinguish other clusters. For example, individuals assigned to FC6 that have a short follow-up (&lt; 4 years from diagnosis) have, on average, a high probability of being assigned to FC3 instead ( versus ). This is not unexpected, as FC3 and FC6 share similar patterns within the first 2 years.\n\nCode# Assign level order otherwise alphanumerical order used\n# and add sample sizes to labels\nmyDF.crp_means &lt;- myDF.crp_means %&gt;%\n  mutate(\n    prob_order = factor(prob_order,\n      levels = c(paste0(\"prob_order\", 1:8)),\n      labels = c(paste0(\"CRP\", 1:8))\n    ),\n    class_order = factor(class_order,\n      levels = paste0(\"CRP\", 1:8),\n      labels = paste0(\n        \"Assigned to CRP\", 1:8, \"\\n n = \",\n        as.vector(table(myDF.crp$class_order))\n      )\n    )\n  )\n\ncrp_fup &lt;- myDF.crp_means %&gt;%\n  ggplot(aes(fill = prob_order, y = value, x = followup_cut)) +\n  geom_bar(position = \"fill\", stat = \"identity\") +\n  facet_wrap(. ~ class_order, ncol = 4) +\n  theme_minimal() +\n  theme(\n    legend.title = element_text(hjust = 0.5),\n    strip.background = element_rect(\n      color = \"lightgray\",\n      linewidth = 1.5,\n      linetype = \"solid\"\n    )\n  ) +\n  labs(\n    x = \"Follow-up cutoff (years)\",\n    y = \"\",\n    fill = \"Mean posterior\\nprobability of\\ncluster assignment\"\n  ) +\n  scale_fill_viridis_d(option = \"D\")\n\ncrp_fup\n\nggsave(\"plots/crp-prob-fup.png\", crp_fup, width = 11, height = 8, units = \"in\")\nggsave(\"plots/crp-prob-fup.pdf\", crp_fup, width = 11, height = 8, units = \"in\")\n\n\np &lt;- fc_fup / crp_fup + plot_annotation(tag_levels = \"A\") &\n  theme(\n    plot.tag = element_text(size = 20, face = \"bold\"),\n    legend.title = element_text(size = 14),\n    legend.text = element_text(size = 12)\n  )\n\nggsave(\"plots/prob-fup.pdf\",\n  p,\n  width = 11 * 3 / 4,\n  height = 16 * 3 / 4,\n  units = \"in\"\n)\nggsave(\"plots/prob-fup.png\",\n  p,\n  width = 11 * 3 / 4,\n  height = 16 * 3 / 4,\n  units = \"in\"\n)\n\n\n\n\n\n\nFigure 3: Demonstration of how mean posterior probabilities of cluster assignment for subjects changes based upon follow-up and assigned cluster.\n\n\n\n\nCluster assignment and year of diagnosis\n\nCodex &lt;- with(myDF.crp, table(as.factor(year(date.of.diag)), class_order))\nx &lt;- as.matrix(x)\ni &lt;- 0\nwhile (any(x &lt; 5)) {\n  if (any(x[i, ] &lt; 5)) { # if any cluster has fewer than 5 subjects\n    if (i == nrow(x)) { # if last row add to previous\n      x[i - 1, ] &lt;- x[i - 1, ] + x[i, ]\n      rownames(x)[i - 1] &lt;- paste0(rownames(x)[i - 1], \", \", rownames(x)[i])\n      x &lt;- x[-i, ]\n    } else { # else add to next row\n      x[i, ] &lt;- x[i, ] + x[i + 1, ]\n      rownames(x)[i] &lt;- paste0(rownames(x)[i], \", \", rownames(x)[i + 1])\n      x &lt;- x[-(i + 1), ]\n      i &lt;- i - 1\n    }\n  }\n  i &lt;- i + 1\n}\nif (any(x &lt; 5)) {\n  stop(\"Failed to find a grouping for diagnosis year with at least 5 subjects in each cluster.\")\n}\n\n\nTo explore a potential relationship between cluster assignment and era effect, we have investigated year of diagnosis and cluster assignment. However, as fewer than five subjects were diagnosed in some years for specific clusters, we have grouped years together.\nThe following groupings ensure at least five subjects are in every stratum:\n\n2008, 2009, 2010\n2011, 2012\n2013, 2014, 2015\n2016\n2017, 2018, 2019\n\n\nCodemyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(year = plyr::mapvalues(year(date.of.diag),\n    from = c(\n      2008,\n      2009,\n      2010,\n      2011,\n      2012,\n      2013,\n      2014,\n      2015,\n      2017,\n      2018,\n      2019\n    ),\n    to = c(\n      \"2008-2010\",\n      \"2008-2010\",\n      \"2008-2010\",\n      \"2011-2012\",\n      \"2011-2012\",\n      \"2013-2015\",\n      \"2013-2015\",\n      \"2013-2015\",\n      \"2017-2019\",\n      \"2017-2019\",\n      \"2017-2019\"\n    )\n  ))\np &lt;- myDF.crp %&gt;%\n  ggplot(aes(x = year, fill = class_order)) +\n  geom_bar(position = \"fill\") +\n  scale_fill_viridis_d(option = \"D\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::label_percent()) +\n  labs(x = \"Year of IBD diagnosis\", y = \"\", fill = \"Assigned cluster\")\n\nggsave(\"plots/associations/crp-diagyear.pdf\",\n  p,\n  width = 8,\n  height = 6,\n  units = \"in\",\n  create.dir = TRUE\n)\np\n\n\n\n\n\n\nFigure 4: Proportion of subjects assigned to each CRP cluster by year of diagnosis. Years with fewer than five subjects in a cluster are grouped together.\n\n\n\n\nAssociations with respect to cluster assignments\nThis section displays descriptive plots to summarize marginal associations between cluster assignments and individual-level covariates. We also explore univariate and multivariate associations with respect to cluster assignment using multinomial logistic regression. As a sensitivity analysis, we also consider restricting the analysis to only consider individuals whose class assignment was less uncertain (with posterior probability &gt; 0.5).\n\nFor all individuals\nHere, we consider associations with respect to information available at diagnosis: age, sex and IBD type.\n\nCodep_diagnosis_all &lt;- myDF.crp %&gt;%\n  plotCat(\"diagnosis\", class = \"class_order\")\n\np_sex_all &lt;- myDF.crp %&gt;%\n  plotCat(\"sex\", class = \"class_order\")\n\np_age_all &lt;- myDF.crp %&gt;%\n  ggplot(aes(x = class_order, y = age)) +\n  geom_violin(fill = \"#5DB7DE\", color = \"#434371\") +\n  geom_boxplot(width = 0.1, color = \"black\", alpha = 0.2) +\n  theme_minimal() +\n  xlab(\"Cluster\") +\n  ylab(\"Age at diagnosis\")\n\np_mlr_all &lt;- myDF.crp %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"CRP1\")) %&gt;%\n  mlrPlot(var = c(\"diagnosis\", \"age\", \"sex\"), class = \"class_order\")\n\n\n\nCodep &lt;- wrap_elements(p_diagnosis_all) +\n  wrap_elements(p_mlr_all$p_both$`diagnosisUlcerative Colitis` +\n    p_mlr_all$p_both$`diagnosisIBDU` +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1.25, 2)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/crp-diagnosis.pdf\",\n  p,\n  width = 15,\n  height = 12,\n  units = \"in\",\n  create.dir = TRUE\n)\n\nprint(p)\n\n\n\n\n\n\n\n\nCodep_mlr_all &lt;- myDF.crp %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"CRP1\")) %&gt;%\n  mlrPlot(\n    var = c(\"diagnosis\", \"age\", \"sex\"),\n    class = \"class_order\",\n    extern = dk.crp\n  )\n\np &lt;- (wrap_elements(p_age_all) + p_mlr_all$plot_everything$age & theme(legend.position = \"none\")) /\n  (wrap_elements(p_sex_all) + p_mlr_all$plot_everything$sexMale +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1, 1)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/crp-sex-age.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\nCodep &lt;- (wrap_elements(p_age_all) + p_mlr_all$plot_both$age & theme(legend.position = \"none\")) /\n  (wrap_elements(p_sex_all) + p_mlr_all$plot_both$sexMale +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1, 1)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/crp-sex-age.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\n\nCodep &lt;- (p_age_all + ylim(0, 98) + ggplot()) / (p_mlr_all$plot_everything$age + ggplot()) +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\") &\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/crp-age.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\np &lt;- (wrap_elements(p_sex_all) + ggplot()) / (p_mlr_all$plot_everything$sexMale + ggplot()) +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\") &\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/crp-sex.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\n\nRestricted to those with posterior probability &gt; 0.5\n\nCodep_diagnosis &lt;- myDF.crp %&gt;%\n  filter(probmax &gt; 0.5) %&gt;%\n  plotCat(\"diagnosis\", class = \"class_order\")\n\np_sex &lt;- myDF.crp %&gt;%\n  filter(probmax &gt; 0.5) %&gt;%\n  plotCat(\"sex\", class = \"class_order\")\n\np_age &lt;- myDF.crp %&gt;%\n  filter(probmax &gt; 0.5) %&gt;%\n  ggplot(aes(x = class_order, y = age)) +\n  geom_violin(fill = \"#5DB7DE\", color = \"#434371\") +\n  geom_boxplot(width = 0.1, color = \"black\", alpha = 0.2) +\n  theme_minimal() +\n  xlab(\"Cluster\") +\n  ylab(\"Age at diagnosis\")\n\n\nCrohn’s disease only\nFor CD patients, we also consider additional phenotyping information. This includes the following information:\nSmoking\nThis is recorded as a binary (Yes/No) variable and is primarily based on self-reporting. As such, it may not necessarily reflect true smoking status. Smoking was missing for approximately 6% of CD patients in the FC cohort.\nMontreal location\nMontreal location refers to where gastrointestinal inflammation is present and is categorised as:\n\nL1: Ileal, limited to the ileum which is the final segment of the small intestine.\nL2: Colonic, limited to the colon/large intestine.\nL3: Ileocolonic, inflammation is present in both the ileum and colon.\n\nMontreal location was missing for approximately 3% of CD patients in the FC cohort.\nMontreal behaviour\nMontreal behaviour describes another clinical phenotype and is defined as follows:\n\nB1: Inflammatory, in other words non-stricturing and non-penetrating\nB2: Stricturing, where the formation of fibrosis leads to the narrowing of the intestine.\nB3: Penetrating, where the inflammation causes the formation of fistulas or abscesses.\n\nDue to small numbers, B2 and B3 are merged into a single group (complicated CD) when analysing Montreal behaviour.\n\nCodemyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(Behaviour_merged = plyr::mapvalues(Behaviour,\n    from = c(\"B1\", \"B2\", \"B3\", NA),\n    to = c(\"B1\", \"B2 or B3\", \"B2 or B3\", NA)\n  ))\n\n\nMontreal behaviour was missing for approximately 3% of CD patients in the FC cohort.\nUpper GI inflammation\nUpper GI inflammation refers to any gastrointestinal inflammation further up than the ileum. Usually, upper inflammation is considered a modifier for Montreal location and is denoted L4. Upper GI inflammation (L4) was missing for a high proportion of CD individuals in the FC cohort (approx 3% This is because the required investigations are only carried out where upper GI inflammation is suspected. As such, we have manually mapped missing L4 values as “No” (i.e. no upper GI inflammation for the associated patients).\n\nCodemyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(L4 = ifelse(!is.na(L4), L4, \"No\"))\n\n\nPerianal disease\nPerianal disease is considered a modifier for Montreal behaviour and is a severe complication of Crohn’s disease involving inflammation around the anus.\nPerianal disease status was missing for approximately 2% of CD patients in the FC cohort.\nNOTE: For the purposes of the multinomial logistic regression model, individuals with missing values in any of these variables will be excluded. For consistency, such individuals will also be excluded from the univariate summary plots.\nFor this purpose, we create a missingness indicator (missingN_cd) which will facilitate the application of such filter.\n\nCodemyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(missingN_cd = is.na(Smoke) + is.na(Location) + is.na(L4) +\n    is.na(Behaviour) + is.na(Perianal))\n\nwith(\n  myDF.crp[myDF.crp$diagnosis == \"Crohn's Disease\", ],\n  table(missingN_cd &gt; 0)\n)\n\n\nFALSE  TRUE \n  744    61 \n\n\nAs shown above, 61 will be excluded hereafter.\nHere is the code to explore the associations:\n\nCodep_sex_cd &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  plotCat(\"sex\", class = \"class_order\")\n\np_age_cd &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  ggplot(aes(x = class_order, y = age)) +\n  geom_violin(fill = \"#5DB7DE\", color = \"#434371\") +\n  geom_boxplot(width = 0.1, color = \"black\", alpha = 0.2) +\n  theme_minimal() +\n  xlab(\"Cluster\") +\n  ylab(\"Age at diagnosis\")\n\np_smoke_cd &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(Smoke = ifelse(!is.na(Smoke), Smoke, \"Missing\")) %&gt;%\n  plotCat(\"Smoke\", class = \"class_order\")\n\np_location_cd &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(Location = ifelse(!is.na(Location), Location, \"Missing\")) %&gt;%\n  plotCat(\"Location\", class = \"class_order\")\n\np_behaviour_cd &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(Behaviour = ifelse(!is.na(Behaviour_merged),\n    Behaviour_merged,\n    \"Missing\"\n  )) %&gt;%\n  plotCat(\"Behaviour\", class = \"class_order\")\n\np_L4_cd &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(L4 = ifelse(!is.na(L4), L4, \"Missing\")) %&gt;%\n  plotCat(\"L4\", class = \"class_order\")\n\np_perianal_cd &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(Perianal = ifelse(!is.na(Perianal), Perianal, \"Missing\")) %&gt;%\n  plotCat(\"Perianal\", class = \"class_order\")\n\np_mlr_cd &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"CRP1\")) %&gt;%\n  mlrPlot(\n    var = c(\"age\", \"sex\", \"Smoke\", \"Location\", \"L4\", \"Behaviour_merged\"),\n    class = \"class_order\"\n  )\n\n\n\nCode(wrap_elements(p_age_cd) + p_mlr_cd$plot_both$age) /\n  (wrap_elements(p_sex_cd) + p_mlr_cd$plot_both$sexMale) +\n  plot_annotation(tag_levels = \"A\", title = \"CD patients only\")\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_smoke_cd) +\n  (p_mlr_cd$p_both$SmokeYes & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\n\nggsave(\"plots/associations/crp-cd-smoking.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\n\n\nCodep &lt;- wrap_elements(p_location_cd) +\n  wrap_elements(p_mlr_cd$p_both$LocationL2 + p_mlr_cd$p_both$LocationL3 +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1.25, 2)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/crp-location.pdf\",\n  p,\n  width = 15,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_L4_cd) +\n  (p_mlr_cd$p_both$L4Yes & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/crp-L4.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\nprint(p)\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_behaviour_cd) +\n  (p_mlr_cd$p_both$`Behaviour_mergedB2 or B3` & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\nggsave(\"plots/associations/crp-behaviour.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\nprint(p)\n\n\n\n\n\n\n\nSome statistics to be used in the text:\n\nCodemyDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(class_aux = ifelse(class_order %in% c(\"FC1\", \"FC2\"),\n    class_order,\n    \"Other\"\n  )) %&gt;%\n  group_by(class_aux, L4) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count) * 100)) %&gt;%\n  knitr::kable()\n\n`summarise()` has grouped output by 'class_aux'. You can override using the\n`.groups` argument.\n\n\n\n\nclass_aux\nL4\ncount\npercentage\n\n\n\nOther\nNo\n660\n88.70968\n\n\nOther\nYes\n84\n11.29032\n\n\n\n\nCodemyDF.crp %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  filter(missingN_cd == 0) %&gt;%\n  mutate(class_aux = ifelse(class_order %in% c(\"CRP1\", \"CRP8\"),\n    class_order,\n    \"Other\"\n  )) %&gt;%\n  group_by(class_aux, Smoke) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count) * 100)) %&gt;%\n  knitr::kable()\n\n`summarise()` has grouped output by 'class_aux'. You can override using the\n`.groups` argument.\n\n\n\n\nclass_aux\nSmoke\ncount\npercentage\n\n\n\n1\nNo\n125\n73.09942\n\n\n1\nYes\n46\n26.90058\n\n\n8\nNo\n29\n46.03175\n\n\n8\nYes\n34\n53.96825\n\n\nOther\nNo\n323\n63.33333\n\n\nOther\nYes\n187\n36.66667\n\n\n\n\n\nUlcerative Colitis only\nThe additional phenotyping information available for UC patients consists of:\nSmoking\nThis is defined in the same way as for CD patients.\nSmoking was missing for approximately 8% of UC patients in the FC cohort.\nExtent\n\nNOTE: As for CD cases, individuals with missing values in any of these variables will be excluded from the association analysis. For consistency, such individuals will also be excluded from the univariate summary plots.\nFor this purpose, we create a missingness indicator (missingN_uc) which will facilitate the application of such filter.\n\nCodemyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(missingN_uc = is.na(Smoke) + is.na(Extent))\n\nwith(\n  myDF.crp[myDF.crp$diagnosis == \"Ulcerative Colitis\", ],\n  table(missingN_uc &gt; 0)\n)\n\n\nFALSE  TRUE \n  764    83 \n\n\nAs shown above, 83 will be excluded hereafter.\n\nCodep_sex_uc &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  plotCat(\"sex\", class = \"class_order\")\n\np_age_uc &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  ggplot(aes(x = class_order, y = age)) +\n  geom_violin(fill = \"#5DB7DE\", color = \"#434371\") +\n  geom_boxplot(width = 0.1, color = \"black\", alpha = 0.2) +\n  theme_minimal() +\n  xlab(\"Cluster\") +\n  ylab(\"Age at diagnosis\")\n\np_smoke_uc &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(Smoke = ifelse(!is.na(Smoke), Smoke, \"Missing\")) %&gt;%\n  plotCat(\"Smoke\", class = \"class_order\")\n\np_extent_uc &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(Extent = ifelse(!is.na(Extent), Extent, \"Missing\")) %&gt;%\n  plotCat(\"Extent\", class = \"class_order\")\n\np_mlr_uc &lt;- myDF.crp %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"CRP1\")) %&gt;%\n  mlrPlot(\n    var = c(\"age\", \"sex\", \"Smoke\", \"Extent\"),\n    class = \"class_order\"\n  )\n\n\n\nCodep &lt;- wrap_elements(p_extent_uc) +\n  wrap_elements(p_mlr_uc$p_both$ExtentE2 + p_mlr_uc$p_both$ExtentE3 +\n    plot_layout(guides = \"collect\") &\n    theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(widths = c(1.25, 2)) &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/crp-extent.pdf\",\n  p,\n  width = 15,\n  height = 12,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\n\nCode(wrap_elements(p_age_uc) + p_mlr_uc$plot_everything$age) /\n  (wrap_elements(p_sex_uc) + p_mlr_uc$plot_everything$sexMale) +\n  plot_annotation(tag_levels = \"A\", title = \"UC patients only\")\n\n\n\n\n\n\n\n\nCodep &lt;- wrap_elements(p_smoke_uc) + (p_mlr_uc$p_both$SmokeYes & theme(legend.position = \"bottom\")) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(face = \"bold\", size = 22))\n\nggsave(\"plots/associations/crp-uc-smoking.pdf\",\n  p,\n  width = 12,\n  height = 12,\n  units = \"in\"\n)\n\n\nSome statistics to be used in the text:\n\nCodemyDF.crp %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(class_aux = ifelse(class_order %in% c(\"FC8\"),\n    class_order,\n    \"Other\"\n  )) %&gt;%\n  group_by(class_aux, sex) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count) * 100)) %&gt;%\n  knitr::kable()\n\n`summarise()` has grouped output by 'class_aux'. You can override using the\n`.groups` argument.\n\n\n\n\nclass_aux\nsex\ncount\npercentage\n\n\n\nOther\nFemale\n341\n44.63351\n\n\nOther\nMale\n423\n55.36649\n\n\n\n\nCodemyDF.crp %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  filter(missingN_uc == 0) %&gt;%\n  mutate(class_aux = ifelse(class_order %in% c(\"FC3\"),\n    class_order,\n    \"Other\"\n  )) %&gt;%\n  group_by(class_aux, Extent) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = (count / sum(count) * 100)) %&gt;%\n  knitr::kable()\n\n`summarise()` has grouped output by 'class_aux'. You can override using the\n`.groups` argument.\n\n\n\n\nclass_aux\nExtent\ncount\npercentage\n\n\n\nOther\nE1\n147\n19.24084\n\n\nOther\nE2\n311\n40.70681\n\n\nOther\nE3\n306\n40.05236\n\n\n\n\n\nAdvanced therapy use\nOverall cluster-specific trajectories\nHere, we extract overall cluster-specific trajectories as these will be used for visualisation purposes in order to better understand patterns of AT use. Note that model outputs do not match the reordered clusters (based on cumulative inflammation) used throughout this report. As such, we use title.mapping to re-order the trajectories when these are plotted.\n\nCodetime.pred &lt;- seq(0, 7, by = 0.01)\n\npred.crp.df &lt;- data.frame(\n  crp_time = c(time.pred, time.pred),\n  diagnosis = c(\n    rep(\"Crohn's Disease\", length(time.pred)),\n    rep(\"Ulcerative Colitis\", length(time.pred))\n  )\n)\npred.crp.df.update &lt;- lcmm::predictY(model.crp,\n  pred.crp.df,\n  var.time = \"crp_time\",\n  draws = TRUE\n)$pred\n\npred &lt;- predictY(model.crp,\n  pred.crp.df,\n  var.time = \"crp_time\",\n  draws = TRUE\n)$pred\n\npred &lt;- as.data.frame(pred[seq_along(time.pred), ])\npred$time &lt;- time.pred\n\nylimit &lt;- log(2500)\ntitle.mapping &lt;- c(2, 3, 1, 4, 5, 7, 6, 8)\n\n\nSummary statistics of AT use\nOverall, we observe significant differences in AT across clusters. In particular, after adjusting for age and sex, AT was significantly lower in FC2.\n\nCodemyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(AT_7Y = ifelse(AT == 1 & AT_line_1 &lt;= 7, 1, 0))\n\np_AT &lt;- myDF.crp %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  plotCat(\"AT_7Y\", class = \"class_order\")\n\np_AT_mlr &lt;- myDF.crp %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  mutate(class_order = relevel(class_order, ref = \"CRP1\")) %&gt;%\n  mlrPlot(\n    var = c(\"age\", \"sex\", \"AT_7Y\"),\n    class = \"class_order\"\n  )\n\nwrap_elements(p_AT) + p_AT_mlr$plot_both$AT\n\n\n\n\n\n\n\nHowever, as seen below, AT use varies across different IBD types (highest among CD patients, lowest among IBDU) patients.\n\nCodemyDF.crp %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  plotCat(\"AT_7Y\", class = \"diagnosis\")\n\n\n\n\n\n\n\nAs such, we also stratify cluster-specific AT usage according to IBD type. For this purpose, we exclude IBDU due to its small size.\n\nCodep_AT_cd &lt;- myDF.crp %&gt;%\n  subset(diagnosis == \"Crohn's Disease\") %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  plotCat(\"AT_7Y\", class = \"class_order\")\n\np_AT_uc &lt;- myDF.crp %&gt;%\n  subset(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  mutate(AT_7Y = factor(AT_7Y)) %&gt;%\n  plotCat(\"AT_7Y\", class = \"class_order\")\n\n\nwrap_elements(p_AT) + ggtitle(\"CD + UC + IBDU\") +\n  wrap_elements(p_AT_cd) + ggtitle(\"CD only\") +\n  wrap_elements(p_AT_uc) + ggtitle(\"UC only\")\n\n\n\n\n\n\n\nAT use within the first year\n\nCodemyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(AT_1Y = ifelse(AT == 1 & AT_line_1 &lt;= 1, 1, 0))\n\ntable(myDF.crp$AT_1Y)\n\n\n   0    1 \n1634  204 \n\nCodep_AT_1Y &lt;- myDF.crp %&gt;%\n  mutate(AT_1Y = factor(AT_1Y)) %&gt;%\n  plotCat(\"AT_1Y\", class = \"class_order\")\n\np_AT_1Y_cd &lt;- myDF.crp %&gt;%\n  subset(diagnosis == \"Crohn's Disease\") %&gt;%\n  plotCat(\"AT_1Y\", class = \"class_order\")\n\np_AT_1Y_cd &lt;- myDF.crp %&gt;%\n  subset(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  plotCat(\"AT_1Y\", class = \"class_order\")\n\n\nWe also generate a censored version for AT_1Y where lack of AT is treated as a right censored observation at seven years.\n\nCodemyDF.crp &lt;- myDF.crp %&gt;%\n  mutate(AT_line_1_cens = if_else(AT_7Y == 0, 7, as.numeric(AT_line_1))) %&gt;%\n  mutate(AT_line_1_cens = if_else(AT_line_1_cens &lt; 0, 0, AT_line_1_cens))\n\n\n\nCodetemp &lt;- subset(myDF.crp, diagnosis == \"Crohn's Disease\")\n\nsum(temp$AT_1Y) / nrow(temp)\n\n[1] 0.2074534\n\nCodesum(temp$AT_7Y) / nrow(temp)\n\n[1] 0.4645963\n\nCodetemp &lt;- subset(myDF.crp, diagnosis == \"Ulcerative Colitis\")\n\nsum(temp$AT_1Y) / nrow(temp)\n\n[1] 0.04132231\n\nCodesum(temp$AT_7Y) / nrow(temp)\n\n[1] 0.1003542\n\n\nCumulative AT usage\nAt present, we cannot show cumulative advanced therapy usage in this document as there are fewer than five subjects within at least one cluster-IBD type stratum. In the meantime, it is possible to view these plots in our manuscript which has digitally removed any strata with fewer than five subjects.\n\nCodekm.df &lt;- data.frame(\n  time = numeric(),\n  cumhaz = numeric(),\n  class = character(),\n  diag = character()\n)\n\nfor (g in 1:8) {\n  # Calculate cumulative patterns\n  temp.cd &lt;- myDF.crp %&gt;%\n    filter(class_order == paste0(\"CRP\", g)) %&gt;%\n    filter(diagnosis == \"Crohn's Disease\")\n\n  temp.uc &lt;- myDF.crp %&gt;%\n    filter(class_order == paste0(\"CRP\", g)) %&gt;%\n    filter(diagnosis == \"Ulcerative Colitis\")\n\n\n  km &lt;- survfit(Surv(AT_line_1_cens, AT_7Y) ~ 1, data = temp.cd)\n  km.df &lt;- rbind(\n    km.df,\n    data.frame(\n      time = km$time,\n      cumhaz = 1 - km$surv,\n      class = paste0(\n        \"CRP\",\n        g,\n        \", CD=\",\n        nrow(temp.cd),\n        \"; UC=\",\n        nrow(temp.uc)\n      ),\n      diag = \"Crohn's disease\"\n    )\n  )\n\n\n  km &lt;- survfit(Surv(AT_line_1_cens, AT_7Y) ~ 1, data = temp.uc)\n  km.df &lt;- rbind(\n    km.df,\n    data.frame(\n      time = km$time,\n      cumhaz = 1 - km$surv,\n      class = paste0(\n        \"CRP\",\n        g,\n        \", CD=\",\n        nrow(temp.cd),\n        \"; UC=\",\n        nrow(temp.uc)\n      ),\n      diag = \"Ulcerative colitis\"\n    )\n  )\n\n  temp.all &lt;- myDF.crp %&gt;%\n    filter(class_order == paste0(\"CRP\", g))\n  km &lt;- survfit(Surv(AT_line_1_cens, AT_7Y) ~ 1, data = temp.all)\n  km.df &lt;- rbind(\n    km.df,\n    data.frame(\n      time = km$time,\n      cumhaz = 1 - km$surv,\n      class = paste0(\n        \"CRP\",\n        g,\n        \", CD=\",\n        nrow(temp.cd),\n        \"; UC=\",\n        nrow(temp.uc)\n      ),\n      diag = \"All\"\n    )\n  )\n}\n\np1 &lt;- km.df %&gt;%\n  subset(diag != \"All\") %&gt;%\n  ggplot(aes(x = time, y = cumhaz)) +\n  geom_line(aes(color = diag), lty = 1, lwd = 1.2) +\n  facet_wrap(~class, ncol = 2) +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) +\n  labs(\n    x = \"Time (years)\",\n    y = \"% of subjects receiving an advanced therapy\",\n    color = \"IBD type\"\n  ) +\n  theme(legend.position = \"bottom\")\n# p1\n\nggsave(\"paper/CRP-AT.pdf\", p1, width = 8 * 3 / 4, height = 12 * 3 / 4, units = \"in\")\nggsave(\"paper/CRP-AT.png\", p1, width = 8 * 3 / 4, height = 12 * 3 / 4, units = \"in\")\n\n\nDemographics table"
  },
  {
    "objectID": "source/post/associations.html#reuse",
    "href": "source/post/associations.html#reuse",
    "title": "Associations with cluster membership",
    "section": "Reuse",
    "text": "Reuse\nLicensed by CC BY unless otherwise stated."
  },
  {
    "objectID": "source/post/associations.html#session-info",
    "href": "source/post/associations.html#session-info",
    "title": "Associations with cluster membership",
    "section": "Session info",
    "text": "Session info\n\nCodepander(sessionInfo())\n\nR version 4.4.3 (2025-02-28)\nPlatform: aarch64-apple-darwin20\nlocale: en_GB.UTF-8||en_GB.UTF-8||en_GB.UTF-8||C||en_GB.UTF-8||en_GB.UTF-8\nattached base packages: splines, stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: viridis(v.0.6.5), viridisLite(v.0.4.2), pander(v.0.6.6), survminer(v.0.5.0), ggpubr(v.0.6.0), survival(v.3.8-3), nnet(v.7.3-20), lcmm(v.2.2.1), libdr(v.1.0.1), magrittr(v.2.0.3), patchwork(v.1.3.0), lubridate(v.1.9.4), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.4), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): tidyselect(v.1.2.1), farver(v.2.1.2), fastmap(v.1.2.0), digest(v.0.6.37), timechange(v.0.3.0), lifecycle(v.1.0.4), compiler(v.4.4.3), rlang(v.1.1.5), tools(v.4.4.3), utf8(v.1.2.4), yaml(v.2.3.10), data.table(v.1.17.0), knitr(v.1.49), ggsignif(v.0.6.4), spacefillr(v.0.4.0), labeling(v.0.4.3), htmlwidgets(v.1.6.4), plyr(v.1.8.9), abind(v.1.4-8), withr(v.3.0.2), numDeriv(v.2016.8-1.1), grid(v.4.4.3), xtable(v.1.8-4), colorspace(v.2.1-1), scales(v.1.3.0), iterators(v.1.0.14), cli(v.3.6.4), mvtnorm(v.1.3-3), rmarkdown(v.2.29), marqLevAlg(v.2.0.8), ragg(v.1.3.3), generics(v.0.1.3), km.ci(v.0.5-6), tzdb(v.0.4.0), parallel(v.4.4.3), survMisc(v.0.5.6), vctrs(v.0.6.5), Matrix(v.1.7-2), jsonlite(v.1.9.1), carData(v.3.0-5), car(v.3.1-3), hms(v.1.1.3), rstatix(v.0.7.2), Formula(v.1.2-5), systemfonts(v.1.2.1), foreach(v.1.5.2), glue(v.1.8.0), codetools(v.0.2-20), stringi(v.1.8.4), gtable(v.0.3.6), munsell(v.0.5.1), pillar(v.1.10.1), htmltools(v.0.5.8.1), R6(v.2.6.1), KMsurv(v.0.1-5), textshaping(v.1.0.0), doParallel(v.1.0.17), evaluate(v.1.0.3), lattice(v.0.22-6), backports(v.1.5.0), broom(v.1.0.7), Rcpp(v.1.0.14), gridExtra(v.2.3), nlme(v.3.1-167), xfun(v.0.51), zoo(v.1.8-13) and pkgconfig(v.2.0.3)"
  },
  {
    "objectID": "source/selection/fcal.html",
    "href": "source/selection/fcal.html",
    "title": "Model selection",
    "section": "",
    "text": "Codeset.seed(123)\nif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\n\n##########################\n#--     Packages       --#\n##########################\n\nlibrary(tidyverse)\n# Support package (source found in libdr/)\nlibrary(libdr)\n## Modelling ##\nlibrary(lcmm)\nlibrary(kml) # K-means\n## Presentation ##\nlibrary(patchwork)\nlibrary(ggdist)\nlibrary(ggalluvial)\nlibrary(pander)\nlibrary(qqplotr)\n\n##########################\n#--     Data read      --#\n##########################\n\ndict &lt;- readRDS(paste0(prefix, \"processed/dict.RDS\"))\nfcal &lt;- readRDS(paste0(prefix, \"processed/fcal.RDS\"))\n\ndk.fcal &lt;- read.csv(paste0(prefix, \"Denmark/2024-11-29/Fcal_8_models.csv\"),\n                    sep = \";\")\n\n\nThis page describes how the latent class mixed models (LCMMs) were fitted to faecal calprotectin (FC). A separate page is dedicated to C-reactive protein.\nIn order to not present subject-level data, subjects within each cluster have been collated into groups of six."
  },
  {
    "objectID": "source/selection/fcal.html#introduction",
    "href": "source/selection/fcal.html#introduction",
    "title": "Model selection",
    "section": "",
    "text": "Codeset.seed(123)\nif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\n\n##########################\n#--     Packages       --#\n##########################\n\nlibrary(tidyverse)\n# Support package (source found in libdr/)\nlibrary(libdr)\n## Modelling ##\nlibrary(lcmm)\nlibrary(kml) # K-means\n## Presentation ##\nlibrary(patchwork)\nlibrary(ggdist)\nlibrary(ggalluvial)\nlibrary(pander)\nlibrary(qqplotr)\n\n##########################\n#--     Data read      --#\n##########################\n\ndict &lt;- readRDS(paste0(prefix, \"processed/dict.RDS\"))\nfcal &lt;- readRDS(paste0(prefix, \"processed/fcal.RDS\"))\n\ndk.fcal &lt;- read.csv(paste0(prefix, \"Denmark/2024-11-29/Fcal_8_models.csv\"),\n                    sep = \";\")\n\n\nThis page describes how the latent class mixed models (LCMMs) were fitted to faecal calprotectin (FC). A separate page is dedicated to C-reactive protein.\nIn order to not present subject-level data, subjects within each cluster have been collated into groups of six."
  },
  {
    "objectID": "source/selection/fcal.html#model-specification",
    "href": "source/selection/fcal.html#model-specification",
    "title": "Model selection",
    "section": "Model specification",
    "text": "Model specification\nLCMMs are an extension of linear mixed effects models with an added cluster-specific fixed effect component. We use LCMMs with a natural cubic spline formulation for the fixed effects component. Random effects are specified as intercepts and the multinomial logistic regression model which assigns cluster membership uses IBD type (CD, UC, or IBDU) as a covariate.\nFor full formal definitions of the models and statistics we have used in the work, please refer to the supplementary material for our paper.\nModel statistics"
  },
  {
    "objectID": "source/selection/fcal.html#model-loading",
    "href": "source/selection/fcal.html#model-loading",
    "title": "Model selection",
    "section": "Model loading",
    "text": "Model loading\nFitting the LCMMs discussed in this report takes multiple days in some cases and uses 25 CPU cores per model. We have fitted these models using Eddie, the University of Edinburgh’s high performance computing solution. The code in the dropdown box below was used to fit the models.\n\n\n\n\n\n\nCode used to fit models\n\n\n\n\n\n\n\nInitial LME\nLCMM\n\n\n\n\n## Modelling ##\nlibrary(lcmm)\nlibrary(splines)\n\n\nfcal &lt;- readRDS(\"fcal.RDS\")\nfcal$calpro_result &lt;- log(fcal$calpro_result)\n\nif(!dir.exists(\"cache\")) dir.create(\"cache\")\n\nif(!file.exists(\"m1.RDS\")) {\n  m1 &lt;-  hlme(fixed =  calpro_result ~ ns(calpro_time,\n                                          df = 4,\n                                          Boundary.knots = c(0, 7)),\n              random = ~  1,\n              subject = \"ids\",\n              data = fcal,\n              verbose = TRUE,\n              var.time = \"calpro_time\",\n              maxiter = 8000)\n  if (m1$conv != 1) stop(\"LME did not converge \\n\")\n  saveRDS(m1, \"m1.RDS\")\n  message(\"Finished fitting m1\")\n}\n\n\n\n\n## Modelling ##\nlibrary(lcmm)\nlibrary(splines)\n\nargs &lt;- commandArgs(trailingOnly = TRUE)\nfcal &lt;- readRDS(\"fcal.RDS\")\nfcal$calpro_result &lt;- log(fcal$calpro_result)\nif(!dir.exists(\"cache\")) dir.create(\"cache\")\n\nrep &lt;- 50\n# set the maximum number of iterations\nmaxiter &lt;- 10\n\nif(file.exists(\"m1.RDS\")) {\n  m1 &lt;- readRDS(\"m1.RDS\")\n  ng &lt;- as.numeric(args[1])\n  # create a cluster\n  cl &lt;- parallel::makeForkCluster(parallel::detectCores())\n  # export the number of groups to the cluster\n  parallel::clusterExport(cl, \"ng\")\n  # run gridsearch\n  hlme.fit &lt;- gridsearch(\n    rep = rep,\n    maxiter = maxiter,\n    minit = m1,\n    cl = cl,\n    hlme(calpro_result ~ ns(calpro_time,\n                            df = 4,\n                            Boundary.knots = c(0, 7)),\n         mixture = ~ ns(calpro_time,\n                        df = 4,\n                        Boundary.knots = c(0, 7)),\n         random = ~  1,\n         subject = \"ids\",\n     classmb = ~ 1 + diagnosis,\n         ng = ng,\n         data = fcal,\n         maxiter = 24000,\n         verbose = TRUE,\n         partialH = FALSE)\n  )\n  # stop the cluster\n  parallel::stopCluster(cl)\n\n  if (hlme.fit$conv == 1) {\n    message(\"Convergence achieved for \", ng, \" subgroups ✅ \\n\")\n  } else {\n    stop(\"Convergence NOT achieved for \", ng, \" subgroups ⚠️ \\n\")\n  }\n  saveRDS(hlme.fit, paste0(\"cache/fcal-\", ng, \".RDS\"))\n} else {\n  stop(\"m1 not found!\")\n}\n\n\n\n\n\n\n\nAs recommended by Proust-Lima, Philipps, and Liquet (2017), a linear mixed effects model is first fitted to generate initial starting values, (the “Initial LME” tab). A grid search approach is then used to converge the LCMMs towards a global maximum for each assumed number of clusters based on maximum likelihood (the “LCMM” tab).\nAfter the above code is run, the resultant models are saved in cvallejo-predicct/libdr/cache/ for use in this report.\nWhen an LCMM is fitted, the assumed number of clusters (or “classes”) must be specified a priori. Here we consider 4-8 clusters as 4 clusters were already found in our previous work (Constantine-Cooke et al. 2023), and we expect to find at least as many clusters given our inclusion criteria is more relaxed.\nA posteriori model statistics and visual investigations must be used to decide upon the optimum number of classes."
  },
  {
    "objectID": "source/selection/fcal.html#fixed-effects-specified-via-natural-cubic-splines",
    "href": "source/selection/fcal.html#fixed-effects-specified-via-natural-cubic-splines",
    "title": "Model selection",
    "section": "Fixed effects specified via Natural Cubic Splines",
    "text": "Fixed effects specified via Natural Cubic Splines\n\nCode# set the number of groups\nG.fcal &lt;- numeric()\nmodels.fcal &lt;- list()\nG.cands &lt;- seq(2, 11)\nfor (G.cand in G.cands) {\n  file.name &lt;- paste0(prefix, \"/cache/fcal/ncs/fcal-\", G.cand, \".RDS\")\n  if (file.exists(file.name)) {\n    G.fcal &lt;- c(G.fcal, G.cand)\n    models.fcal[[G.cand]] &lt;- readRDS(file.name)\n  }\n}\nrm(G.cand)\n\n\nWe firstly consider specifying fixed effects using NCS which have a few notable advantages (Elhakeem et al. 2022):\n\nLess parameters need to be estimated than either a GRBF function regression model or a polynomial regression model with the same flexibility. This reduces the time complexity when fitting the model and in the future may also make extensions more practically feasible.\nNCS enforce linearity between t_0 and the first knot and between the last knot and t_\\text{max} which ensures the model does not behave erratically in these sometimes problematic areas.\nNCS are not highly sensitive to a continuous parameter and instead requires only K, the number of knots to be tuned. NCS are typically robust to where the knots themselves are placed.\n\nKnot choice\nTo determine the most appropriate number of knots for the natural cubic splines, we considered two, three, and four knots. We only use six-cluster models for this analysis as this reasonably captures heterogeneity without being too expensive computationally.\nOur previous work used three knots across a five-year period. As we are now modelling across a seven-year period, we may need to increase the number of knots to four to ensure the model remains flexible. We also considered two knots] in case a more smoooth model is required.\nWe place the knots at their default location which is at quantiles. We note that the number of knots is reported by Harrell (2015) to be much more important than knot location.\nModel trajectories\nOne knot\n\nCodeknots.1 &lt;- readRDS(paste0(prefix, \"/cache/fcal/ncs/1-knots.RDS\"))\nknots.1.list &lt;- list()\nknots.1.list[[6]] &lt;- knots.1\ncairo_pdf(\"paper/1-knots.pdf\",\n  width = 9,\n  height = 9\n)\nspaghettiPlot(fcal,\n  knots.1.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  n.knots = 1,\n  var.time = \"calpro_time\"\n)\ninvisible(dev.off())\nspaghettiPlot(fcal,\n  knots.1.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  n.knots = 1,\n  var.time = \"calpro_time\"\n)\n\n\n\n\n\n\nFigure 1: Cluster profiles for the six-cluster model assuming one knot. The vertical teal lines indicate knot location. Mean cluster profiles are denoted by the red curves\n\n\n\n\nTwo knots\nFrom Figure 2, we can see specifying only two knots results in very smooth curves for the mean trajectory of each cluster. However, this model appears to be too smooth which results in a relatively poor fit.\n\nCodeknots.2 &lt;- readRDS(paste0(prefix, \"/cache/fcal/ncs/2-knots.RDS\"))\nknots.2.list &lt;- list()\nknots.2.list[[6]] &lt;- knots.2\ncairo_pdf(\"paper/2-knots.pdf\",\n  width = 9,\n  height = 9\n)\nspaghettiPlot(fcal,\n  knots.2.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  n.knots = 2,\n  var.time = \"calpro_time\"\n)\ninvisible(dev.off())\nspaghettiPlot(fcal,\n  knots.2.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  n.knots = 2,\n  var.time = \"calpro_time\"\n)\n\n\n\n\n\n\nFigure 2: Cluster profiles for the six-cluster model assuming two knots. The vertical teal lines indicate knot location. Mean cluster profiles are denoted by the red curves\n\n\n\n\nThree knots\nThree knots appears to be the most appropriate specification (Figure 3). Whilst there is perhaps some evidence of overfitting, this appears to be minimal.\n\nCodeknots.3 &lt;- readRDS(paste0(prefix, \"cache/fcal/ncs/fcal-6.RDS\"))\nknots.3.list &lt;- list()\nknots.3.list[[6]] &lt;- knots.3\ncairo_pdf(\"paper/3-knots.pdf\",\n  width = 9,\n  height = 9\n)\nspaghettiPlot(fcal,\n  knots.3.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  n.knots = 3,\n  var.time = \"calpro_time\"\n)\ninvisible(dev.off())\nspaghettiPlot(fcal,\n  knots.3.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  n.knots = 3,\n  var.time = \"calpro_time\"\n)\n\n\n\n\n\n\nFigure 3: Cluster profiles for the six-cluster model assuming three knots. The vertical teal lines indicate knot location. Mean cluster profiles are denoted by the red curves\n\n\n\n\nFour knots\nFour knots appears to be too many. Figure 4 presents a minor improvement to model fit over the three knot specification, and there are signs of overfitting which is likely driven by the small distances between knots.\n\nCodeknots.4 &lt;- readRDS(paste0(prefix, \"/cache/fcal/ncs/4-knots.RDS\"))\nknots.4.list &lt;- list()\nknots.4.list[[6]] &lt;- knots.4\ncairo_pdf(\"paper/4-knots.pdf\",\n  width = 9,\n  height = 9\n)\nspaghettiPlot(fcal,\n  knots.4.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  n.knots = 4,\n  var.time = \"calpro_time\"\n)\n\nWarning: Removed 24 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\nCodeinvisible(dev.off())\nspaghettiPlot(fcal,\n  knots.4.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  n.knots = 4,\n  var.time = \"calpro_time\"\n)\n\nWarning: Removed 24 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\nFigure 4: Cluster profiles for the six-cluster model assuming four knots. The vertical teal lines indicate knot location. Mean cluster profiles are denoted by the red curves\n\n\n\n\nModel statistics\nAIC and BIC both suggest a four-knot specification to be optimal (Table 1). However, visual inspection of the mean cluster trajectories (see above) suggests the four-knot approach results in overfitting, especially around knot locations. This will also become more of an issue as the number of clusters increase and additional sparsity is exhibited for some clusters.\nAs such, we have elected to use natural cubic splines with three knots placed at quantiles.\n\nCodeknots.df &lt;- tibble(\n  Knots = c(\"One knot\", \"Two knots\", \"Three knots\", \"Four knots\"),\n  loglik = c(\n    knots.1$loglik,\n    knots.2$loglik,\n    knots.3$loglik,\n    knots.4$loglik\n  ),\n  AIC = c(\n    knots.1$AIC,\n    knots.2$AIC,\n    knots.3$AIC,\n    knots.4$AIC\n  ),\n  BIC = c(\n    knots.1$BIC,\n    knots.2$BIC,\n    knots.3$BIC,\n    knots.4$BIC\n  )\n)\nknitr::kable(knots.df,\n  col.names = c(\n    \"Knots\",\n    \"Maxmum log likelihood\",\n    \"AIC\",\n    \"BIC\"\n  )\n)\nrm(\n  knots.1,\n  knots.1.list,\n  knots.3,\n  knots.3.list,\n  knots.4,\n  knots.4.list\n)\n\n\nTable 1: Model statistics for differing numbers of knots for natural cubic splines\n\n\n\n\nKnots\nMaxmum log likelihood\nAIC\nBIC\n\n\n\nOne knot\n-16448.75\n32967.49\n33140.50\n\n\nTwo knots\n-16230.02\n32542.04\n32744.71\n\n\nThree knots\n-16141.82\n32377.63\n32609.96\n\n\nFour knots\n-16125.38\n32356.75\n32618.74\n\n\n\n\n\n\n\n\nNumber of clusters\nAfter determining the most appriopate number of knots, we must now decide upon the most appropiate number of clusters.\nFrom the alluvial plot comparing FC models (Figure 5), we can see newly formed clusters are quite robust- remaining consistent as the number of clusters increases. However, new clusters are formed from multiple clusters which implies these clusters do not have a high degree of separation from one another. From this figure, six clusters appear to be a reasonable choice.\n\nCodealluvial.df &lt;- matrix(nrow = 0, ncol = 3)\ncolnames(alluvial.df) &lt;- c(\"ids\", \"class\", \"G\")\nfor (G in G.fcal) {\n  alluvial.df &lt;- rbind(alluvial.df, cbind(models.fcal[[G]]$pprob[, 1:2], G = G))\n}\nalluvial.df &lt;- as.data.frame(alluvial.df)\n\nalluvial.df$ids &lt;- as.character(alluvial.df$ids)\nalluvial.df$class &lt;- as.factor(alluvial.df$class)\n\n# eliminate label switching\n\nalluvial.df[alluvial.df[, \"G\"] == 3, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 3, \"class\"],\n    from = c(seq(1, 3)),\n    to = c(3, 1, 2)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 4, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 4, \"class\"],\n    from = c(seq(1, 4)),\n    to = c(3, 4, 1, 2)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 5, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 5, \"class\"],\n    from = c(seq(1, 5)),\n    to = c(2, 1, 5, 3, 4)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 6, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 6, \"class\"],\n    from = c(seq(1, 6)),\n    to = c(6, 4, 5, 2, 3, 1)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 7, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 7, \"class\"],\n    from = c(seq(1, 7)),\n    to = c(4, 1, 5, 3, 2, 7, 6)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 8, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 8, \"class\"],\n    from = c(seq(1, 8)),\n    to = c(7, 5, 1, 3, 6, 4, 8, 2)\n  )\n\n\nalluvial.df[alluvial.df[, \"G\"] == 9, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 9, \"class\"],\n    from = c(seq(1, 9)),\n    to = c(1, 5, 8, 9, 6, 4, 7, 2, 3)\n  )\n\n\nalluvial.df[alluvial.df[, \"G\"] == 10, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 10, \"class\"],\n    from = c(seq(1, 10)),\n    to = c(2, 4, 9, 1, 7, 10, 6, 8, 5, 3)\n  )\n\n\nalluvial.df[alluvial.df[, \"G\"] == 11, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 11, \"class\"],\n    from = c(seq(1, 11)),\n    to = c(6, 10, 7, 2, 11, 3, 9, 4, 5, 1, 8)\n  )\n\n\np &lt;- ggplot(\n  alluvial.df,\n  aes(\n    x = G,\n    stratum = class,\n    alluvium = ids,\n    fill = class,\n    label = class\n  )\n) +\n  scale_x_discrete(expand = c(.1, .1)) +\n  geom_flow() +\n  geom_stratum(alpha = 0.5) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = rainbow(11)) +\n  xlab(\"Assumed number of clusters\") +\n  ylab(\"Frequency\")\nprint(p)\n\np &lt;- p + ggtitle(\"\", \"\")\nggsave(\"paper/alluvial-FCAL-all.png\",\n  p,\n  width = 12,\n  height = 6.75,\n  units = \"in\"\n)\nggsave(\"paper/alluvial-FCAL-all.pdf\",\n  p,\n  width = 12,\n  height = 6.75,\n  units = \"in\"\n)\n\n\n\n\n\n\nFigure 5: Alluvial plot of cluster membership across G for FC\n\n\n\n\n\nCodealluvial.df &lt;- matrix(nrow = 0, ncol = 3)\ncolnames(alluvial.df) &lt;- c(\"ids\", \"class\", \"G\")\nfor (G in G.fcal) {\n  alluvial.df &lt;- rbind(alluvial.df, cbind(models.fcal[[G]]$pprob[, 1:2], G = G))\n}\nalluvial.df &lt;- as.data.frame(alluvial.df)\n\nalluvial.df$ids &lt;- as.character(alluvial.df$ids)\nalluvial.df$class &lt;- as.factor(alluvial.df$class)\n\np &lt;- ggplot(\n  alluvial.df,\n  aes(\n    x = G,\n    stratum = class,\n    alluvium = ids,\n    fill = class,\n    label = class\n  )\n) +\n  scale_x_discrete(expand = c(.1, .1)) +\n  geom_flow() +\n  geom_stratum(alpha = 0.5) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = rainbow(11)) +\n  xlab(\"Assumed number of clusters\") +\n  ylab(\"Frequency\")\nprint(p)\n\n\n\n\n\n\nFigure 6: Alluvial plot of cluster membership across G for FC\n\n\n\n\nPosterior classifications\nFrom the below data, we can see how posterior probabilities change as the number of assumed clusters increase.\n\n\n\nG = 2\nG = 3\nG = 4\nG = 5\nG = 6\nG = 7\nG = 8\nG = 9\nG = 10\nG = 11\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\n\n\n\nN\n505\n531\n\n\n%\n48.75\n51.25\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\n\n\n\nclass1\n0.805\n0.195\n\n\nclass2\n0.1986\n0.8014\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\n\n\n\nprob&gt;0.7\n68.71\n69.49\n\n\nprob&gt;0.8\n54.26\n50.47\n\n\nprob&gt;0.9\n37.23\n37.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\n\n\n\nN\n501\n298\n237\n\n\n%\n48.36\n28.76\n22.88\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\n\n\n\nclass1\n0.8072\n0.0856\n0.1072\n\n\nclass2\n0.1203\n0.787\n0.0927\n\n\nclass3\n0.1259\n0.1043\n0.7698\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\n\n\n\nprob&gt;0.7\n70.66\n66.78\n63.71\n\n\nprob&gt;0.8\n57.68\n54.7\n50.63\n\n\nprob&gt;0.9\n43.51\n39.6\n35.86\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\n\n\n\nN\n324\n200\n274\n238\n\n\n%\n31.27\n19.31\n26.45\n22.97\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\n\n\n\nclass1\n0.7547\n0.1307\n0.0465\n0.0681\n\n\nclass2\n0.1486\n0.6844\n0.0645\n0.1025\n\n\nclass3\n0.0651\n0.0609\n0.7858\n0.0881\n\n\nclass4\n0.0701\n0.1005\n0.0904\n0.7389\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\n\n\n\nprob&gt;0.7\n60.19\n43\n68.61\n58.4\n\n\nprob&gt;0.8\n45.99\n32\n56.2\n47.06\n\n\nprob&gt;0.9\n36.42\n21.5\n41.24\n34.87\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\n\n\n\nN\n255\n258\n42\n337\n144\n\n\n%\n24.61\n24.9\n4.05\n32.53\n13.9\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\n\n\n\nclass1\n0.7292\n0.0724\n0.0374\n0.0776\n0.0834\n\n\nclass2\n0.0901\n0.7656\n0.0432\n0.0502\n0.0509\n\n\nclass3\n0.0344\n0.0776\n0.8022\n0.0782\n0.0075\n\n\nclass4\n0.0811\n0.0315\n0.037\n0.747\n0.1035\n\n\nclass5\n0.0967\n0.0679\n0.0059\n0.1416\n0.6878\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\n\n\n\nprob&gt;0.7\n54.9\n63.95\n71.43\n59.05\n43.75\n\n\nprob&gt;0.8\n45.1\n51.55\n59.52\n46.88\n32.64\n\n\nprob&gt;0.9\n31.76\n37.98\n42.86\n34.42\n22.92\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\n\n\n\nN\n141\n144\n48\n234\n312\n157\n\n\n%\n13.61\n13.9\n4.63\n22.59\n30.12\n15.15\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\n\n\n\nclass1\n0.7231\n0.0302\n0.028\n0.097\n0.0124\n0.1093\n\n\nclass2\n0.0374\n0.6684\n0.009\n0.0911\n0.126\n0.0681\n\n\nclass3\n0.061\n0.0094\n0.7606\n0.0477\n0.0726\n0.0487\n\n\nclass4\n0.0727\n0.1064\n0.034\n0.6842\n0.0851\n0.0175\n\n\nclass5\n0.0068\n0.094\n0.0393\n0.083\n0.7422\n0.0346\n\n\nclass6\n0.1158\n0.0547\n0.0412\n0.04\n0.0646\n0.6836\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\n\n\n\nprob&gt;0.7\n55.32\n42.36\n66.67\n48.29\n58.65\n48.41\n\n\nprob&gt;0.8\n44.68\n31.94\n54.17\n37.61\n47.76\n33.76\n\n\nprob&gt;0.9\n30.5\n22.22\n39.58\n21.79\n33.33\n21.66\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nN\n49\n177\n59\n205\n191\n229\n126\n\n\n%\n4.73\n17.08\n5.69\n19.79\n18.44\n22.1\n12.16\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\n\n\n\nclass1\n0.6775\n0.0669\n0.0022\n0.0379\n0.0546\n0.1242\n0.0367\n\n\nclass2\n0.0346\n0.6893\n0.0388\n0.034\n0.0378\n0.0546\n0.1108\n\n\nclass3\n0.0027\n0.0598\n0.7169\n0.0618\n0.0617\n0.0363\n0.0607\n\n\nclass4\n0.0076\n0.0305\n0.0458\n0.7318\n0.0358\n0.1458\n0.0029\n\n\nclass5\n0.0256\n0.0222\n0.0383\n0.0342\n0.6878\n0.1125\n0.0794\n\n\nclass6\n0.0428\n0.0383\n0.0226\n0.144\n0.1246\n0.6117\n0.016\n\n\nclass7\n0.016\n0.1025\n0.0297\n0.0068\n0.0838\n0.0202\n0.741\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nprob&gt;0.7\n46.94\n48.59\n54.24\n58.54\n50.26\n31.44\n58.73\n\n\nprob&gt;0.8\n40.82\n36.16\n49.15\n44.39\n38.22\n21.83\n50\n\n\nprob&gt;0.9\n30.61\n20.9\n35.59\n27.32\n26.18\n10.92\n34.13\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nN\n244\n64\n103\n194\n140\n67\n67\n157\n\n\n%\n23.55\n6.18\n9.94\n18.73\n13.51\n6.47\n6.47\n15.15\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\nprob8\n\n\n\nclass1\n0.6255\n0.0238\n0.0339\n0.127\n0.0156\n0.0661\n0.0167\n0.0914\n\n\nclass2\n0.0312\n0.7158\n0.0553\n0.0692\n0.0406\n0.006\n0.0169\n0.0649\n\n\nclass3\n0.0548\n0.0357\n0.7109\n0.0362\n0.0734\n0.0232\n0.0573\n0.0085\n\n\nclass4\n0.1397\n0.037\n0.021\n0.7495\n0.0021\n0.0189\n0.0097\n0.0222\n\n\nclass5\n0.0175\n0.0232\n0.1004\n0.0055\n0.7182\n0.0176\n0.0432\n0.0744\n\n\nclass6\n0.1193\n0.0137\n0.0437\n0.0543\n0.0271\n0.6537\n0.0239\n0.0643\n\n\nclass7\n0.0373\n0.0164\n0.1082\n0.0123\n0.0775\n0.0298\n0.6788\n0.0397\n\n\nclass8\n0.0929\n0.043\n0.0102\n0.0232\n0.0752\n0.0436\n0.0275\n0.6844\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nprob&gt;0.7\n34.84\n54.69\n55.34\n59.28\n53.57\n47.76\n44.78\n49.68\n\n\nprob&gt;0.8\n24.18\n48.44\n38.83\n46.39\n47.86\n37.31\n37.31\n39.49\n\n\nprob&gt;0.9\n15.16\n28.12\n25.24\n32.47\n31.43\n28.36\n25.37\n29.94\n\n\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nN\n102\n60\n75\n33\n129\n45\n235\n164\n\n\n%\n9.85\n5.79\n7.24\n3.19\n12.45\n4.34\n22.68\n15.83\n\n\n\n\n\n\n\n\n\n \nclass9\n\n\n\nN\n193\n\n\n%\n18.63\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\n\n\n\nclass1\n0.7052\n0.0337\n0.0567\n0.002\n0.0747\n0.0322\n0.0527\n\n\nclass2\n0.055\n0.7411\n0.0163\n0.0077\n0.0229\n0.0015\n0.0377\n\n\nclass3\n0.1003\n0.0155\n0.6609\n0.0053\n0.0687\n0.0225\n0.055\n\n\nclass4\n0.0023\n0.0124\n0.0023\n0.7246\n3e-04\n0.0191\n0.1115\n\n\nclass5\n0.0985\n0.0183\n0.0463\n0.0011\n0.7203\n0.0174\n0.0145\n\n\nclass6\n0.0562\n0.0022\n0.0205\n0.0276\n0.029\n0.6901\n0.1125\n\n\nclass7\n0.0333\n0.0248\n0.0177\n0.0688\n0.0122\n0.0332\n0.6131\n\n\nclass8\n0.0131\n0.051\n0.031\n0.0309\n0.0821\n0.0252\n0.0812\n\n\nclass9\n0.0185\n0.0375\n0.0046\n0.0174\n0.0018\n0.009\n0.1455\n\n\n\n\n\n\n\n\n\n\n \nprob8\nprob9\n\n\n\nclass1\n0.0116\n0.0312\n\n\nclass2\n0.0536\n0.0642\n\n\nclass3\n0.0524\n0.0194\n\n\nclass4\n0.0864\n0.0412\n\n\nclass5\n0.0783\n0.0052\n\n\nclass6\n0.0363\n0.0256\n\n\nclass7\n0.0824\n0.1145\n\n\nclass8\n0.6679\n0.0177\n\n\nclass9\n0.0192\n0.7466\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nprob&gt;0.7\n51.96\n56.67\n44\n57.58\n56.59\n46.67\n37.02\n\n\nprob&gt;0.8\n40.2\n53.33\n33.33\n45.45\n47.29\n42.22\n23.83\n\n\nprob&gt;0.9\n22.55\n31.67\n26.67\n30.3\n32.56\n33.33\n14.89\n\n\n\n\n\n\n\n\n\n\n \nclass8\nclass9\n\n\n\nprob&gt;0.7\n45.12\n59.07\n\n\nprob&gt;0.8\n37.2\n47.15\n\n\nprob&gt;0.9\n28.66\n31.09\n\n\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nN\n102\n43\n36\n94\n118\n188\n133\n59\n\n\n%\n9.85\n4.15\n3.47\n9.07\n11.39\n18.15\n12.84\n5.69\n\n\n\n\n\n\n\n\n\n\n \nclass9\nclass10\n\n\n\nN\n54\n209\n\n\n%\n5.21\n20.17\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\n\n\n\nclass1\n0.73\n0.0125\n0.0207\n0.0026\n0.0149\n0.099\n0.0706\n\n\nclass2\n0.0206\n0.6965\n0.0302\n0.0467\n0.046\n0.0962\n0.0253\n\n\nclass3\n0.0818\n0.0227\n0.7056\n0.0027\n0.0599\n0.0816\n0.006\n\n\nclass4\n0.005\n0.0265\n8e-04\n0.7029\n0.0226\n0.0629\n0.0653\n\n\nclass5\n0.0291\n0.0232\n0.0871\n0.0133\n0.5886\n0.0965\n0.0037\n\n\nclass6\n0.0975\n0.0353\n0.0398\n0.0463\n0.09\n0.5336\n0.0356\n\n\nclass7\n0.0636\n0.0162\n0.0015\n0.0791\n0.004\n0.0549\n0.7225\n\n\nclass8\n0.0314\n0.0205\n0.0023\n0.084\n0.0063\n0.0772\n0.0692\n\n\nclass9\n0.0505\n0.0023\n0.0088\n0.046\n0.0046\n0.0922\n0.03\n\n\nclass10\n0.0191\n0.0108\n0.0163\n0.0158\n0.1163\n0.0539\n0.0018\n\n\n\n\n\n\n\n\n\n\n\n \nprob8\nprob9\nprob10\n\n\n\nclass1\n0.016\n0.0267\n0.0069\n\n\nclass2\n0.0102\n3e-04\n0.028\n\n\nclass3\n8e-04\n0.0074\n0.0316\n\n\nclass4\n0.0501\n0.0306\n0.0333\n\n\nclass5\n0.0032\n0.0107\n0.1445\n\n\nclass6\n0.0309\n0.037\n0.0541\n\n\nclass7\n0.0385\n0.0149\n0.0048\n\n\nclass8\n0.6971\n0.007\n0.0049\n\n\nclass9\n0.004\n0.7179\n0.0437\n\n\nclass10\n0.0041\n0.0389\n0.7229\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nprob&gt;0.7\n53.92\n48.84\n52.78\n52.13\n30.51\n21.28\n54.89\n\n\nprob&gt;0.8\n46.08\n41.86\n47.22\n38.3\n25.42\n13.83\n47.37\n\n\nprob&gt;0.9\n36.27\n32.56\n33.33\n25.53\n16.95\n4.79\n33.83\n\n\n\n\n\n\n\n\n\n\n\n \nclass8\nclass9\nclass10\n\n\n\nprob&gt;0.7\n49.15\n59.26\n54.55\n\n\nprob&gt;0.8\n42.37\n53.7\n43.06\n\n\nprob&gt;0.9\n28.81\n31.48\n32.54\n\n\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nN\n133\n189\n118\n103\n10\n199\n36\n42\n\n\n%\n12.84\n18.24\n11.39\n9.94\n0.97\n19.21\n3.47\n4.05\n\n\n\n\n\n\n\n\n\n\n\n \nclass9\nclass10\nclass11\n\n\n\nN\n51\n97\n58\n\n\n%\n4.92\n9.36\n5.6\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\n\n\n\nclass1\n0.7214\n0.0564\n0.004\n0.0625\n5e-04\n0.0047\n0.0015\n\n\nclass2\n0.036\n0.5301\n0.0906\n0.0972\n0.012\n0.0519\n0.0387\n\n\nclass3\n0.0037\n0.0953\n0.5825\n0.0285\n0.019\n0.1379\n0.0849\n\n\nclass4\n0.0695\n0.102\n0.016\n0.7222\n0.005\n0.0084\n0.0204\n\n\nclass5\n0\n0.0287\n0.087\n0\n0.7155\n0.0924\n0\n\n\nclass6\n0.0019\n0.051\n0.1141\n0.0173\n0.0313\n0.6994\n0.0161\n\n\nclass7\n0.006\n0.0824\n0.0613\n0.0805\n0.003\n0.0308\n0.7028\n\n\nclass8\n0.0255\n0.0972\n0.0482\n0.0204\n4e-04\n0.0194\n0.0297\n\n\nclass9\n0.0264\n0.0875\n0.0044\n0.048\n0.0246\n0.043\n0.0086\n\n\nclass10\n0.0647\n0.0672\n0.0219\n0.0048\n0.0057\n0.0322\n8e-04\n\n\nclass11\n0.0655\n0.0793\n0.0065\n0.0309\n7e-04\n0.0049\n0.0023\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob8\nprob9\nprob10\nprob11\n\n\n\nclass1\n0.0161\n0.015\n0.0809\n0.037\n\n\nclass2\n0.0345\n0.0346\n0.0442\n0.0303\n\n\nclass3\n0.0227\n0.009\n0.0133\n0.0032\n\n\nclass4\n0.0122\n0.0258\n0.0025\n0.0158\n\n\nclass5\n0\n0.0395\n0.0368\n0\n\n\nclass6\n0.0132\n0.0362\n0.0151\n0.0045\n\n\nclass7\n0.0225\n0.0072\n0.0028\n7e-04\n\n\nclass8\n0.6994\n3e-04\n0.0493\n0.0101\n\n\nclass9\n0.0024\n0.7202\n0.0308\n0.0041\n\n\nclass10\n0.0259\n0.0263\n0.7003\n0.0504\n\n\nclass11\n0.0203\n0.0065\n0.0835\n0.6997\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nprob&gt;0.7\n54.89\n21.69\n29.66\n52.43\n50\n50.75\n52.78\n\n\nprob&gt;0.8\n47.37\n13.76\n23.73\n45.63\n40\n41.21\n44.44\n\n\nprob&gt;0.9\n33.83\n4.23\n16.95\n34.95\n30\n29.15\n33.33\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass8\nclass9\nclass10\nclass11\n\n\n\nprob&gt;0.7\n47.62\n56.86\n52.58\n48.28\n\n\nprob&gt;0.8\n42.86\n50.98\n40.21\n43.1\n\n\nprob&gt;0.9\n33.33\n33.33\n25.77\n29.31\n\n\n\nCoderm(output)\n\n\n\n\n\n\nCodepprobs.2 &lt;- c()\ngroups.2 &lt;- models.fcal[[2]]\npprobs.3 &lt;- c()\ngroups.3 &lt;- models.fcal[[3]]\npprobs.4 &lt;- c()\ngroups.4 &lt;- models.fcal[[4]]\npprobs.5 &lt;- c()\ngroups.5 &lt;- models.fcal[[5]]\npprobs.6 &lt;- c()\ngroups.6 &lt;- models.fcal[[6]]\npprobs.7 &lt;- c()\ngroups.7 &lt;- models.fcal[[7]]\npprobs.8 &lt;- c()\ngroups.8 &lt;- models.fcal[[8]]\npprobs.9 &lt;- c()\ngroups.9 &lt;- models.fcal[[9]]\npprobs.10 &lt;- c()\ngroups.10 &lt;- models.fcal[[10]]\npprobs.11 &lt;- c()\ngroups.11 &lt;- models.fcal[[11]]\n\n\nfor (i in 1:nrow(models.fcal[[2]]$pprob)) {\n  class.2 &lt;- groups.2$pprob[i, 2]\n  pprobs.2 &lt;- c(pprobs.2, groups.2$pprob[i, class.2 + 2])\n  class.3 &lt;- groups.3$pprob[i, 2]\n  pprobs.3 &lt;- c(pprobs.3, groups.3$pprob[i, class.3 + 2])\n  class.4 &lt;- groups.4$pprob[i, 2]\n  pprobs.4 &lt;- c(pprobs.4, groups.4$pprob[i, class.4 + 2])\n  class.5 &lt;- groups.5$pprob[i, 2]\n  pprobs.5 &lt;- c(pprobs.5, groups.5$pprob[i, class.5 + 2])\n  class.6 &lt;- groups.6$pprob[i, 2]\n  pprobs.6 &lt;- c(pprobs.6, groups.6$pprob[i, class.6 + 2])\n  class.7 &lt;- groups.7$pprob[i, 2]\n  pprobs.7 &lt;- c(pprobs.7, groups.7$pprob[i, class.7 + 2])\n  class.8 &lt;- groups.8$pprob[i, 2]\n  pprobs.8 &lt;- c(pprobs.8, groups.8$pprob[i, class.8 + 2])\n  class.9 &lt;- groups.9$pprob[i, 2]\n  pprobs.9 &lt;- c(pprobs.9, groups.9$pprob[i, class.9 + 2])\n  class.10 &lt;- groups.10$pprob[i, 2]\n  pprobs.10 &lt;- c(pprobs.10, groups.10$pprob[i, class.10 + 2])\n  class.11 &lt;- groups.11$pprob[i, 2]\n  pprobs.11 &lt;- c(pprobs.11, groups.11$pprob[i, class.11 + 2])\n}\npprobs.2 &lt;- tibble(prob = pprobs.2)\npprobs.3 &lt;- tibble(prob = pprobs.3)\npprobs.4 &lt;- tibble(prob = pprobs.4)\npprobs.5 &lt;- tibble(prob = pprobs.5)\npprobs.6 &lt;- tibble(prob = pprobs.6)\npprobs.7 &lt;- tibble(prob = pprobs.7)\npprobs.8 &lt;- tibble(prob = pprobs.8)\npprobs.9 &lt;- tibble(prob = pprobs.9)\npprobs.10 &lt;- tibble(prob = pprobs.10)\npprobs.11 &lt;- tibble(prob = pprobs.11)\n\npprobs.2$Model &lt;- as.factor(rep(\"Two clusters\", nrow(pprobs.2)))\npprobs.3$Model &lt;- as.factor(rep(\"Three clusters\", nrow(pprobs.3)))\npprobs.4$Model &lt;- as.factor(rep(\"Four clusters\", nrow(pprobs.4)))\npprobs.5$Model &lt;- as.factor(rep(\"Five clusters\", nrow(pprobs.5)))\npprobs.6$Model &lt;- as.factor(rep(\"Six clusters\", nrow(pprobs.6)))\npprobs.7$Model &lt;- as.factor(rep(\"Seven clusters\", nrow(pprobs.7)))\npprobs.8$Model &lt;- as.factor(rep(\"Eight clusters\", nrow(pprobs.8)))\npprobs.9$Model &lt;- as.factor(rep(\"Nine clusters\", nrow(pprobs.9)))\npprobs.10$Model &lt;- as.factor(rep(\"Ten clusters\", nrow(pprobs.10)))\npprobs.11$Model &lt;- as.factor(rep(\"Eleven clusters\", nrow(pprobs.11)))\npprobs &lt;- rbind(\n  pprobs.2,\n  pprobs.3,\n  pprobs.4,\n  pprobs.5,\n  pprobs.6,\n  pprobs.7,\n  pprobs.8,\n  pprobs.9,\n  pprobs.10,\n  pprobs.11\n)\n\np &lt;- pprobs %&gt;%\n  ggplot(aes(x = prob, y = Model)) +\n  stat_slab(\n    fill = \"#5D5179\", color = \"gray\",\n    size = 0.8,\n    alpha = 0.7\n  ) +\n  geom_dots(color = \"#4F759B\", dotsize = 1) +\n  xlab(\"Posterior probability for cluster membership\") +\n  ylab(\"\") +\n  ggtitle(\n    \"Distribution of Posterior Probabilities Across Models\",\n    \"Subject-specific posterior probabilities for assigned cluster\"\n  ) +\n  theme_minimal() +\n  scale_y_discrete(limits = rev)\nggsave(\"plots/pprob-distribution.png\",\n  p,\n  width = 8.5,\n  height = 7.5,\n  units = \"in\"\n)\nggsave(\"plots/pprob-distribution.pdf\",\n  p,\n  width = 8.5,\n  height = 7.5,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\nResidual plots\n\nG = 2\n\n\n##### G = 3 ##### G = 4 ##### G = 5 ##### G = 6 ##### G = 7 ##### G = 8 ##### G = 9 ##### G = 10 ##### G = 11 \n\n\n\nChosen model\n\nCodep1 &lt;- data.frame(residuals = resid(models.fcal[[8]])) %&gt;%\n  ggplot(aes(x = residuals)) +\n  geom_histogram(aes(y = after_stat(density)),\n    fill = \"#D8829D\",\n    color = \"#AF6A80\",\n    bins = 30\n  ) +\n  geom_density(color = \"#023777\", linewidth = 1.2) +\n  theme_classic() +\n  theme(axis.line = element_line(colour = \"gray\")) +\n  ylab(\"Density\") +\n  xlab(\"Residuals\") +\n  ggtitle(\"A\")\n\np2 &lt;- data.frame(residuals = resid(models.fcal[[8]])) %&gt;%\n  ggplot(aes(sample = residuals)) +\n  stat_qq_band() +\n  stat_qq_line(color = \"#D8829D\") +\n  stat_qq_point(color = \"#023777\") +\n  theme_classic() +\n  theme(axis.line = element_line(colour = \"gray\")) +\n  ylab(\"Theoretical Quantiles\") +\n  xlab(\"Sample Quantiles\") +\n  ggtitle(\"B\")\nggsave(\"paper/Residual-plot-fcal-ncs.pdf\",\n  plot = p1 / p2,\n  width = 8,\n  height = 8,\n  units = \"in\"\n)\nprint(p1 / p2)\n\n\n\n\n\n\nFigure 7: Plots assessing normality for the distribution of residuals for the chosen NCS model for FCAL. (A) Histrogram; (B) Q-Q plot.\n\n\n\n\n\nCodepredClass &lt;- models.fcal[[8]]$pprob[, c(\"ids\", \"class\")]\ntemp &lt;- merge(models.fcal[[8]]$pred, predClass, by = \"ids\")\nlabels &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\")\np &lt;- list()\n\nfor (i in 1:8) {\n  p[[i]] &lt;- subset(temp, class == i) %&gt;%\n    ggplot(aes(sample = resid_ss)) +\n    stat_qq_band() +\n    stat_qq_line(color = \"#D8829D\") +\n    stat_qq_point(color = \"#023777\") +\n    theme_classic() +\n    theme(axis.line = element_line(colour = \"gray\")) +\n    ylab(\"Theoretical Quantiles\") +\n    xlab(\"Sample Quantiles\") +\n    ggtitle(labels[i])\n}\n\nArrangedPlot &lt;- (p[[1]] + p[[2]]) /\n  (p[[3]] + p[[4]]) /\n  (p[[5]] + p[[6]]) /\n  (p[[7]] + p[[8]])\n\nggsave(\"paper/cluster-resids-ncs.pdf\",\n  ArrangedPlot,\n  width = 8,\n  height = 8,\n  units = \"in\"\n)\nprint(ArrangedPlot)\n\n\n\n\n\n\nFigure 8: Q-Q plots assessing normality for the distribution of residuals stratifed by cluster assignment.\n\n\n\n\nModel metrics\n\nCodesummaryplot(models.fcal[[4]],\n  models.fcal[[5]],\n  models.fcal[[6]],\n  models.fcal[[7]],\n  models.fcal[[8]],\n  models.fcal[[9]],\n  models.fcal[[10]],\n  models.fcal[[11]],\n  which = c(\"loglik\", \"AIC\", \"BIC\", \"entropy\", \"ICL\"),\n  mfrow = c(2, 3),\n  axis = \"Class\"\n)\n\n\n\n\n\n\nFigure 9: Model metrics for FCAL for G = 4-9\n\n\n\n\n\nCodefcal.metrics &lt;- makeMetrics(G.fcal, models.fcal)\nbuildDT(fcal.metrics)\n\n\n\nClusters\nMaximum log-likelihood\nAIC\nBIC\n\n\n\n2\n-16532.10\n33094.20\n33168.35\n\n\n3\n-16354.39\n32754.78\n32868.47\n\n\n4\n-16260.21\n32582.42\n32735.66\n\n\n5\n-16201.86\n32481.71\n32674.49\n\n\n6\n-16141.82\n32377.63\n32609.96\n\n\n7\n-16109.77\n32329.54\n32601.42\n\n\n8\n-16076.89\n32279.77\n32591.19\n\n\n9\n-16039.66\n32221.33\n32572.29\n\n\n10\n-16015.29\n32188.59\n32579.09\n\n\n11\n-16005.55\n32185.10\n32615.16\n\n\n\n\n\nThe optimum AIC is  32185.1  with cluster 13. The optimum BIC is 32572.29  with cluster 11\nSpaghetti plots per cluster\n\nCodefor (G in G.fcal) {\n  # Data frame to hold processed data\n  new.fc &lt;- data.frame(\n    ids = numeric(),\n    calpro_result = numeric(),\n    calpro_time = numeric(),\n    class = numeric()\n  )\n\n  for (clust in 1:G) {\n    ids.clust &lt;- subset(models.fcal[[G]]$pprob, class == clust)$ids\n    n.clust &lt;- length(ids.clust)\n    rand &lt;- sample(n.clust, n.clust) # Randomise the order of the ids\n    iters &lt;- floor(n.clust / 6) # How many groups of six are there?\n\n    # Matrix to hold the smoothed data\n    fcal.ma &lt;- matrix(NA, nrow = iters, ncol = 7)\n    fcal.time &lt;- matrix(NA, nrow = iters, ncol = 7)\n\n    for (i in 0:(iters - 1)) {\n      # Find ids for group of five\n      ids.select &lt;- ids.clust[rand[((i * 6) + 1):((i * 6) + 6)]]\n      fcal.subset &lt;- subset(fcal, ids %in% ids.select)\n      # Median process as per CRP preprocessing\n      for (j in seq(0, 6)) {\n        if (j == 6) {\n          sub.obs &lt;- subset(\n            fcal.subset,\n            calpro_time &gt;= j - 0.5 & calpro_time &lt;= j + 1\n          )\n        } else {\n          sub.obs &lt;- subset(\n            fcal.subset,\n            calpro_time &gt;= j - 0.5 & calpro_time &lt; j + 0.5\n          )\n        }\n        if (nrow(sub.obs) &gt; 0) {\n          fcal.ma[i + 1, j + 1] &lt;- median(sub.obs$calpro_result)\n          fcal.time[i + 1, j + 1] &lt;- median(sub.obs$calpro_time)\n        }\n      }\n    }\n\n    rownames(fcal.ma) &lt;- 1:iters\n    fcal.ma &lt;- reshape2::melt(t(fcal.ma),\n      id.vars = row.names(fcal.ma),\n      na.rm = TRUE\n    )\n    colnames(fcal.ma) &lt;- c(\"calpro_time\", \"ids\", \"calpro_result\")\n    fcal.ma &lt;- fcal.ma[, c(2, 3, 1)] # Make ids first column\n\n    rownames(fcal.time) &lt;- 1:iters\n    fcal.time &lt;- reshape2::melt(t(fcal.time),\n      id.vars = row.names(fcal.time),\n      na.rm = TRUE\n    )\n    colnames(fcal.time) &lt;- c(\"calpro_time\", \"ids\", \"pred_time\")\n    fcal.time &lt;- fcal.time[, c(2, 3, 1)] # Make ids first column\n\n    fcal.ma &lt;- merge(fcal.ma, fcal.time, by = c(\"ids\", \"calpro_time\"))\n    fcal.ma &lt;- fcal.ma %&gt;%\n      mutate(calpro_time = pred_time) %&gt;%\n      select(-pred_time)\n\n    fcal.ma$class &lt;- clust # Identify cluster assignment\n    new.fc &lt;- rbind(new.fc, fcal.ma)\n  }\n\n  if (!dir.exists(\"plots/spaghetti\")) dir.create(\"plots/spaghetti\")\n  png(paste0(\"plots/spaghetti/fcal-ncs-\", G, \".png\"),\n    width = 10,\n    height = 17.5,\n    units = \"in\",\n    res = 300\n  )\n  grid::grid.newpage()\n  spaghettiPlot(new.fc,\n    models.fcal,\n    G = G,\n    log = TRUE,\n    tmax = 7,\n    sizes = TRUE,\n    knots = FALSE,\n    var.time = \"calpro_time\",\n    clusters = TRUE\n  )\n  invisible(dev.off())\n\n  cairo_pdf(paste0(\"plots/spaghetti/fcal-ncs-\", G, \".pdf\"),\n    width = 10,\n    height = 17.5\n  )\n  grid::grid.newpage()\n  spaghettiPlot(new.fc,\n    models.fcal,\n    G = G,\n    log = TRUE,\n    tmax = 7,\n    sizes = TRUE,\n    knots = FALSE,\n    var.time = \"calpro_time\",\n    clusters = TRUE\n  )\n  invisible(dev.off())\n\n  grid::grid.newpage()\n  print(spaghettiPlot(new.fc,\n    models.fcal,\n    G = G,\n    log = TRUE,\n    tmax = 7,\n    sizes = TRUE,\n    knots = FALSE,\n    var.time = \"calpro_time\",\n    clusters = TRUE\n  ))\n}\n\nNULL\n\n\n\n\n\n\n\n\nNULL\n\n\n\n\n\n\n\n\nNULL\n\n\n\n\n\n\n\n\nNULL\n\n\n\n\n\n\n\n\nNULL\n\n\n\n\n\n\n\n\nNULL\n\n\n\n\n\n\n\n\nNULL\n\n\n\n\n\n\n\n\nNULL\n\n\n\n\n\n\n\n\nNULL\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNULL\n\n\nChosen model\n\nCodenew.fc &lt;- data.frame(\n  ids = numeric(),\n  calpro_result = numeric(),\n  calpro_time = numeric(),\n  class = numeric()\n)\n\nfor (clust in 1:8) {\n  ids.clust &lt;- subset(models.fcal[[8]]$pprob, class == clust)$ids\n  n.clust &lt;- length(ids.clust)\n  rand &lt;- sample(n.clust, n.clust) # Randomise the order of the ids\n  iters &lt;- floor(n.clust / 6) # How many groups of six are there?\n\n  # Matrix to hold the smoothed data\n  fcal.ma &lt;- matrix(NA, nrow = iters, ncol = 7)\n  fcal.time &lt;- matrix(NA, nrow = iters, ncol = 7)\n\n\n  for (i in 0:(iters - 1)) {\n    # Find ids for group of five\n    ids.select &lt;- ids.clust[rand[((i * 6) + 1):((i * 6) + 6)]]\n    fcal.subset &lt;- subset(fcal, ids %in% ids.select)\n    # Median process as per CRP preprocessing\n    for (j in seq(0, 6)) {\n      if (j == 6) {\n        sub.obs &lt;- subset(\n          fcal.subset,\n          calpro_time &gt;= j - 0.5 & calpro_time &lt;= j + 1\n        )\n      } else {\n        sub.obs &lt;- subset(\n          fcal.subset,\n          calpro_time &gt;= j - 0.5 & calpro_time &lt; j + 0.5\n        )\n      }\n      if (nrow(sub.obs) &gt; 0) {\n        fcal.ma[i + 1, j + 1] &lt;- median(sub.obs$calpro_result)\n        fcal.time[i + 1, j + 1] &lt;- median(sub.obs$calpro_time)\n      }\n    }\n  }\n\n  rownames(fcal.ma) &lt;- 1:iters\n  fcal.ma &lt;- reshape2::melt(t(fcal.ma),\n    id.vars = row.names(fcal.ma),\n    na.rm = TRUE\n  )\n  colnames(fcal.ma) &lt;- c(\"calpro_time\", \"ids\", \"calpro_result\")\n  fcal.ma &lt;- fcal.ma[, c(2, 3, 1)] # Make ids first column\n\n\n  rownames(fcal.time) &lt;- 1:iters\n  fcal.time &lt;- reshape2::melt(t(fcal.time),\n    id.vars = row.names(fcal.time),\n    na.rm = TRUE\n  )\n  colnames(fcal.time) &lt;- c(\"calpro_time\", \"ids\", \"pred_time\")\n  fcal.time &lt;- fcal.time[, c(2, 3, 1)] # Make ids first column\n\n  fcal.ma &lt;- merge(fcal.ma, fcal.time, by = c(\"ids\", \"calpro_time\"))\n  fcal.ma &lt;- fcal.ma %&gt;%\n    mutate(calpro_time = pred_time) %&gt;%\n    select(-pred_time)\n\n  fcal.ma$class &lt;- clust # Identify cluster assignment\n  new.fc &lt;- rbind(new.fc, fcal.ma)\n}\n\n\nAs. a parsimonious choice, we have elected to focus on the 8-cluster model as we believe this strikes a reasonable balance between characterising the LIBDR cohort whilst still presenting trends which likely reflect the IBD population in Western Europe.\nLabelling\nThe labels/order of the clusters generated above are random. To improve the readability and assist with interpretation of associations, it would be beneficial to order clusters by some analogue for disease severity. This section explores possible solutions for this task.\nCumulative inflammation across follow-up\nOne possible solution is to order clusters by cumulative inflammation which is given by the area under the curve for each mean cluster trajectory.\n\nCoderank.full &lt;- rankCumulative(models.fcal[[8]], tmax = 7)\n\nrank.full %&gt;%\n  ggplot(aes(x = paste0(\"FC\", New), y = Area)) +\n  geom_bar(stat = \"identity\", fill = \"#745C97\", color = \"#39375B\") +\n  ylab(\"Cumulative inflammation (Area)\") +\n  xlab(\"Cluster\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nCodepng(paste0(\"plots/spaghetti/fcal-ncs-reordered.png\"),\n  width = 10,\n  height = 16,\n  units = \"in\",\n  res = 300\n)\ngrid::grid.newpage()\nspaghettiPlot(new.fc,\n  models.fcal,\n  G = 8,\n  log = TRUE,\n  tmax = 7,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"calpro_time\",\n  clusters = TRUE,\n  mapping = rank.full$Original\n)\ninvisible(dev.off())\n\ncairo_pdf(paste0(\"plots/spaghetti/fcal-ncs-reordered.pdf\"),\n  width = 10,\n  height = 16\n)\ngrid::grid.newpage()\nspaghettiPlot(new.fc,\n  models.fcal,\n  G = 8,\n  log = TRUE,\n  tmax = 7,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"calpro_time\",\n  clusters = TRUE,\n  mapping = rank.full$Original\n)\ninvisible(dev.off())\n\nspaghettiPlot(new.fc,\n  models.fcal,\n  G = 8,\n  log = TRUE,\n  tmax = 7,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"calpro_time\",\n  clusters = TRUE,\n  mapping = rank.full$Original\n)\n\n\n\n\n\n\n\nWith Danish predictions\n\nCodedk.fcal &lt;- dk.fcal %&gt;%\n  mutate(cluster = str_replace_all(cluster, \"Ypred_class\", \"\"))\n\n\n\nCodedk.fcal$cluster &lt;- plyr::mapvalues(dk.fcal$cluster,\n                                   from = seq(1, 8),\n                                   to = c(3, 1, 7, 5, 8, 2, 4, 6))\n\n\n\nCodecairo_pdf(paste0(\"plots/spaghetti/fcal-scot-dk.pdf\"),\n  width = 10,\n  height = 16\n)\ngrid::grid.newpage()\nspaghettiPlot(new.fc,\n  models.fcal,\n  G = 8,\n  log = TRUE,\n  tmax = 7,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"calpro_time\",\n  clusters = TRUE,\n  mapping = rank.full$Original,\n  external = dk.fcal\n)\ninvisible(dev.off())\n\npng(paste0(\"plots/spaghetti/fcal-scot-dk.png\"),\n  width = 10,\n  height = 16,\n  units = \"in\",\n  res = 300\n)\ngrid::grid.newpage()\nspaghettiPlot(new.fc,\n  models.fcal,\n  G = 8,\n  log = TRUE,\n  tmax = 7,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"calpro_time\",\n  clusters = TRUE,\n  mapping = rank.full$Original,\n  external = dk.fcal\n)\ninvisible(dev.off())\n\ngrid::grid.newpage()\nspaghettiPlot(new.fc,\n  models.fcal,\n  G = 8,\n  log = TRUE,\n  tmax = 7,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"calpro_time\",\n  clusters = TRUE,\n  mapping = rank.full$Original,\n  external = dk.fcal\n)\n\n\n\n\n\n\n\n\nCodefor (G in (9:10)) {\n  new.fc &lt;- data.frame(\n    ids = numeric(),\n    calpro_result = numeric(), \n    calpro_time = numeric(),\n    class = numeric()\n  )\n\n  for (clust in 1:G) {\n    ids.clust &lt;- subset(models.fcal[[G]]$pprob, class == clust)$ids\n    n.clust &lt;- length(ids.clust)\n    rand &lt;- sample(n.clust, n.clust) # Randomise the order of the ids\n    iters &lt;- floor(n.clust / 6) # How many groups of six are there?\n\n    # Matrix to hold the smoothed data\n    fcal.ma &lt;- matrix(NA, nrow = iters, ncol = 7)\n    fcal.time &lt;- matrix(NA, nrow = iters, ncol = 7)\n\n    for (i in 0:(iters - 1)) {\n      # Find ids for group of five\n      ids.select &lt;- ids.clust[rand[((i * 6) + 1):((i * 6) + 6)]]\n      fcal.subset &lt;- subset(fcal, ids %in% ids.select)\n      # Median process as per CRP preprocessing\n      for (j in seq(0, 6)) {\n        if (j == 6) {\n          sub.obs &lt;- subset(\n            fcal.subset,\n            calpro_time &gt;= j - 0.5 & calpro_time &lt;= j + 1\n          )\n        } else {\n          sub.obs &lt;- subset(\n            fcal.subset,\n            calpro_time &gt;= j - 0.5 & calpro_time &lt; j + 0.5\n          )\n        }\n        if (nrow(sub.obs) &gt; 0) {\n          fcal.ma[i + 1, j + 1] &lt;- median(sub.obs$calpro_result)\n          fcal.time[i + 1, j + 1] &lt;- median(sub.obs$calpro_time)\n        }\n      }\n    }\n\n    rownames(fcal.ma) &lt;- 1:iters\n    fcal.ma &lt;- reshape2::melt(t(fcal.ma),\n      id.vars = row.names(fcal.ma),\n      na.rm = TRUE\n    )\n    colnames(fcal.ma) &lt;- c(\"calpro_time\", \"ids\", \"calpro_result\")\n    fcal.ma &lt;- fcal.ma[, c(2, 3, 1)] # Make ids first column\n\n    rownames(fcal.time) &lt;- 1:iters\n    fcal.time &lt;- reshape2::melt(t(fcal.time),\n      id.vars = row.names(fcal.time),\n      na.rm = TRUE\n    )\n    colnames(fcal.time) &lt;- c(\"calpro_time\", \"ids\", \"pred_time\")\n    fcal.time &lt;- fcal.time[, c(2, 3, 1)] # Make ids first column\n\n    fcal.ma &lt;- merge(fcal.ma, fcal.time, by = c(\"ids\", \"calpro_time\"))\n    fcal.ma &lt;- fcal.ma %&gt;%\n      mutate(calpro_time = pred_time) %&gt;%\n      select(-pred_time)\n\n    fcal.ma$class &lt;- clust # Identify cluster assignment\n    new.fc &lt;- rbind(new.fc, fcal.ma)\n  }\n\n\n  rank.full &lt;- rankCumulative(models.fcal[[G]], tmax = 7)\n  png(paste0(\"plots/spaghetti/fcal-ncs-reordered-\", G, \".png\"),\n    width = 10,\n    height = 16,\n    units = \"in\",\n    res = 300\n  )\n  grid::grid.newpage()\n  spaghettiPlot(new.fc,\n    models.fcal,\n    G = G,\n    log = TRUE,\n    tmax = 7,\n    sizes = TRUE,\n    knots = FALSE,\n    var.time = \"calpro_time\",\n    clusters = TRUE,\n    mapping = rank.full$Original\n  )\n  invisible(dev.off())\n\n  cairo_pdf(paste0(\"plots/spaghetti/fcal-ncs-reordered-\", G, \".pdf\"),\n    width = 10,\n    height = 16\n  )\n  grid::grid.newpage()\n  spaghettiPlot(new.fc,\n    models.fcal,\n    G = G,\n    log = TRUE,\n    tmax = 7,\n    sizes = TRUE,\n    knots = FALSE,\n    var.time = \"calpro_time\",\n    clusters = TRUE,\n    mapping = rank.full$Original\n  )\n  invisible(dev.off())\n}\n\n\nAlluvial anchored plot\nHaving chosen the 8-cluster model to be the most appropriate, we have produced a version of Figure 6 using the labels assigned for the 8-cluster model.\n\nCodealluvial.df &lt;- matrix(nrow = 0, ncol = 3)\ncolnames(alluvial.df) &lt;- c(\"ids\", \"class\", \"G\")\nfor (G in 2:10) {\n  alluvial.df &lt;- rbind(alluvial.df, cbind(models.fcal[[G]]$pprob[, 1:2], G = G))\n}\nalluvial.df &lt;- as.data.frame(alluvial.df)\n\nalluvial.df$ids &lt;- as.character(alluvial.df$ids)\nalluvial.df$class &lt;- as.factor(alluvial.df$class)\n\n# eliminate label switching\n\nalluvial.df[alluvial.df[, \"G\"] == 2, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 2, \"class\"],\n    from = c(1, 2),\n    to = c(4, 8)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 3, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 3, \"class\"],\n    from = c(seq(1, 3)),\n    to = c(8, 4, 3)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 4, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 4, \"class\"],\n    from = c(seq(1, 4)),\n    to = c(8, 7, 4, 3)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 5, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 5, \"class\"],\n    from = c(seq(1, 5)),\n    to = c(3, 4, 6, 8, 7)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 6, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 6, \"class\"],\n    from = c(seq(1, 6)),\n    to = c(1, 7, 6, 3, 8, 4)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 7, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 7, \"class\"],\n    from = c(seq(1, 7)),\n    to = c(5, 4, 6, 8, 3, 7, 1)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 8, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 8, \"class\"],\n    from = rank.full$Original,\n    to = rank.full$New\n  )\n\n\nalluvial.df[alluvial.df[, \"G\"] == 9, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 9, \"class\"],\n    from = c(seq(1, 9)),\n    to = c(4, 6, 2, 9, 1, 5, 7, 3, 8)\n  )\n\n\nalluvial.df[alluvial.df[, \"G\"] == 10, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 10, \"class\"],\n    from = c(seq(1, 10)),\n    to = c(3, 5, 9, 4, 7, 10, 1, 2, 6, 8)\n  )\n\np &lt;- ggplot(\n  alluvial.df,\n  aes(\n    x = G,\n    stratum = class,\n    alluvium = ids,\n    fill = class,\n    label = class\n  )\n) +\n  scale_x_discrete(expand = c(.1, .1)) +\n  geom_flow() +\n  geom_stratum(alpha = 0.5) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = c(viridis::inferno(8), \"#F2F3C9\", \"white\")) +\n  xlab(\"Assumed number of clusters\") +\n  ylab(\"Frequency\")\nprint(p)\n\n\n\n\n\n\nCodep &lt;- p + ggtitle(\"\", \"\")\nggsave(\"paper/alluvial-FCAL-anchored.png\",\n  p,\n  width = 12,\n  height = 6.75,\n  units = \"in\"\n)\nggsave(\"paper/alluvial-FCAL-anchored.pdf\",\n  p,\n  width = 12,\n  height = 6.75,\n  units = \"in\"\n)\nsaveRDS(p, paste0(prefix, \"processed/plots/fc-alluvial.RDS\"))"
  },
  {
    "objectID": "source/selection/fcal.html#fixed-effects-specified-via-gaussian-radial-basis-functions",
    "href": "source/selection/fcal.html#fixed-effects-specified-via-gaussian-radial-basis-functions",
    "title": "Model selection",
    "section": "Fixed effects specified via Gaussian radial basis functions",
    "text": "Fixed effects specified via Gaussian radial basis functions\n\nCodeG.grbf &lt;- numeric()\nmodels.grbf &lt;- list()\nfor (G.cand in 1:8) {\n  file.name &lt;- paste0(prefix, \"/cache/fcal/grbf/final/fcal-\", G.cand, \".RDS\")\n  if (file.exists(file.name)) {\n    G.grbf &lt;- c(G.grbf, G.cand)\n    models.grbf[[G.cand]] &lt;- readRDS(file.name)\n  }\n}\nrm(G.cand)\n\n\nNumber of Gaussian radial basis functions\nTwo GRBFs\n\nCodeknots.grbf.2 &lt;- readRDS(paste0(prefix, \"cache/fcal/grbf/k=2/grbf-1.2.RDS\"))\nknots.grbf.2.list &lt;- list()\nknots.grbf.2.list[[6]] &lt;- knots.grbf.2\npng(\"paper/grbf-plots-2.png\", width = 8, height = 7, units = \"in\", res = 300)\nspaghettiPlot(fcal,\n  knots.grbf.2.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  knot.type = \"equal\",\n  n.knots = 2,\n  grbf = TRUE,\n  l = 1.2,\n  var.time = \"calpro_time\"\n)\ninvisible(dev.off())\nspaghettiPlot(fcal,\n  knots.grbf.2.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  knot.type = \"equal\",\n  n.knots = 2,\n  grbf = TRUE,\n  l = 1.2,\n  var.time = \"calpro_time\"\n)\n\n\n\n\n\n\nFigure 10: Cluster profiles for the six-cluster model assuming two knots. The vertical teal lines indicate knot location. Mean cluster profiles are denoted by the red curves.\n\n\n\n\nThree GRBFs\n\nCodeknots.grbf.3 &lt;- readRDS(paste0(prefix, \"/cache/fcal/grbf/k=3/grbf-1.2.RDS\"))\nknots.grbf.3.list &lt;- list()\nknots.grbf.3.list[[6]] &lt;- knots.grbf.3\npng(\"paper/grbf-plots-3.png\", width = 8, height = 7, units = \"in\", res = 300)\nspaghettiPlot(fcal,\n  knots.grbf.3.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  knot.type = \"equal\",\n  n.knots = 3,\n  grbf = TRUE,\n  l = 1.2,\n  var.time = \"calpro_time\"\n)\ninvisible(dev.off())\nspaghettiPlot(fcal,\n  knots.grbf.3.list,\n  G = 6,\n  log = TRUE,\n  tmax = 7,\n  sizes = FALSE,\n  knots = TRUE,\n  knot.type = \"equal\",\n  n.knots = 3,\n  grbf = TRUE,\n  l = 1.2,\n  var.time = \"calpro_time\"\n)\n\n\n\n\n\n\nFigure 11: Cluster profiles for the six-cluster model assuming three knots. The vertical teal lines indicate knot location. Mean cluster profiles are denoted by the red curves.\n\n\n\n\n\nCodealluvial.df &lt;- matrix(nrow = 0, ncol = 3)\ncolnames(alluvial.df) &lt;- c(\"ids\", \"class\", \"G\")\nfor (G in G.grbf) {\n  alluvial.df &lt;- rbind(alluvial.df, cbind(models.grbf[[G]]$pprob[, 1:2], G = G))\n}\nalluvial.df &lt;- as.data.frame(alluvial.df)\n\nalluvial.df$ids &lt;- as.character(alluvial.df$ids)\nalluvial.df$class &lt;- as.factor(alluvial.df$class)\n\n# eliminate label switching\n\nalluvial.df[alluvial.df[, \"G\"] == 3, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 3, \"class\"],\n    from = c(seq(1, 3)),\n    to = c(1, 3, 2)\n  )\n#\nalluvial.df[alluvial.df[, \"G\"] == 4, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 4, \"class\"],\n    from = c(seq(1, 4)),\n    to = c(3, 2, 1, 4)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 5, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 5, \"class\"],\n    from = c(seq(1, 5)),\n    to = c(2, 4, 5, 1, 3)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 6, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 6, \"class\"],\n    from = c(seq(1, 6)),\n    to = c(5, 3, 2, 4, 1, 6)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 7, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 7, \"class\"],\n    from = c(seq(1, 7)),\n    to = c(5, 1, 4, 7, 3, 6, 2)\n  )\n#\nalluvial.df[alluvial.df[, \"G\"] == 8, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 8, \"class\"],\n    from = c(seq(1, 8)),\n    to = c(6, 2, 4, 5, 1, 3, 7, 8)\n  )\n\n\np &lt;- ggplot(\n  alluvial.df,\n  aes(\n    x = G,\n    stratum = class,\n    alluvium = ids,\n    fill = class,\n    label = class\n  )\n) +\n  scale_x_discrete(expand = c(.1, .1)) +\n  geom_flow() +\n  geom_stratum(alpha = 0.5) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = rainbow(8)) +\n  xlab(\"Assumed number of clusters\") +\n  ylab(\"Frequency\")\nprint(p)\n\np &lt;- p + ggtitle(\"\", \"\")\nggsave(\"paper/alluvial-FCAL-grbf.png\",\n  p,\n  width = 12,\n  height = 6.75,\n  units = \"in\"\n)\nggsave(\"paper/alluvial-FCAL-grbf.pdf\",\n  p,\n  width = 12,\n  height = 6.75,\n  units = \"in\"\n)\n\n\n\n\n\n\nFigure 12: Alluvial plot of cluster membership across G for FCAL\n\n\n\n\n\nCodeknots.df &lt;- tibble(\n  Knots = c(\"2 GRBFs\", \"3 GRBFs\"),\n  loglik = c(\n    knots.grbf.2$loglik,\n    knots.grbf.3$loglik\n  ),\n  AIC = c(\n    knots.grbf.2$AIC,\n    knots.grbf.3$AIC\n  ),\n  BIC = c(\n    knots.grbf.2$BIC,\n    knots.grbf.3$BIC\n  )\n)\nknitr::kable(knots.df,\n  col.names = c(\n    \"Knots\",\n    \"Maxmum log likelihood\",\n    \"AIC\",\n    \"BIC\"\n  )\n)\nrm(\n  knots.grbf.2.list,\n  knots.grbf.3.list\n)\n\n\nTable 2: Model statistics for differing numbers of knots for natural cubic splines\n\n\n\n\nKnots\nMaxmum log likelihood\nAIC\nBIC\n\n\n\n2 GRBFs\n-16421.02\n32924.03\n33126.70\n\n\n3 GRBFs\n-16237.73\n32569.45\n32801.78\n\n\n\n\n\n\n\n\nNumber of clusters\nPosterior classifications\nFrom the below data, we can see how posterior probabilities change as the number of assumed clusters increase\n\n\n\nG = 2\nG = 3\nG = 4\nG = 5\nG = 6\nG = 7\nG = 8\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\n\n\n\nN\n496\n540\n\n\n%\n47.88\n52.12\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\n\n\n\nclass1\n0.8024\n0.1976\n\n\nclass2\n0.2024\n0.7976\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\n\n\n\nprob&gt;0.7\n68.35\n67.59\n\n\nprob&gt;0.8\n55.24\n51.48\n\n\nprob&gt;0.9\n36.09\n34.81\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\n\n\n\nN\n310\n497\n229\n\n\n%\n29.92\n47.97\n22.1\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\n\n\n\nclass1\n0.7767\n0.1262\n0.0971\n\n\nclass2\n0.0985\n0.7971\n0.1044\n\n\nclass3\n0.1083\n0.13\n0.7617\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\n\n\n\nprob&gt;0.7\n66.13\n68.21\n60.26\n\n\nprob&gt;0.8\n52.58\n55.73\n48.03\n\n\nprob&gt;0.9\n34.19\n39.64\n35.81\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\n\n\n\nN\n277\n195\n311\n253\n\n\n%\n26.74\n18.82\n30.02\n24.42\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\n\n\n\nclass1\n0.7524\n0.0494\n0.0663\n0.1319\n\n\nclass2\n0.0553\n0.7415\n0.0991\n0.1041\n\n\nclass3\n0.0648\n0.0963\n0.7746\n0.0643\n\n\nclass4\n0.1593\n0.1106\n0.0696\n0.6606\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\n\n\n\nprob&gt;0.7\n59.57\n57.44\n67.2\n39.13\n\n\nprob&gt;0.8\n48.01\n47.69\n55.31\n27.27\n\n\nprob&gt;0.9\n32.85\n34.36\n35.69\n19.37\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\n\n\n\nN\n114\n268\n204\n166\n284\n\n\n%\n11\n25.87\n19.69\n16.02\n27.41\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\n\n\n\nclass1\n0.7472\n0.0951\n0.0911\n0.0093\n0.0572\n\n\nclass2\n0.0985\n0.6457\n0.0624\n0.0462\n0.1472\n\n\nclass3\n0.0937\n0.0659\n0.7086\n0.1028\n0.029\n\n\nclass4\n0.0181\n0.0503\n0.1333\n0.7194\n0.0788\n\n\nclass5\n0.0527\n0.13\n0.0236\n0.0526\n0.7411\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\n\n\n\nprob&gt;0.7\n57.02\n35.82\n55.39\n53.01\n59.51\n\n\nprob&gt;0.8\n49.12\n25\n40.69\n39.76\n47.89\n\n\nprob&gt;0.9\n33.33\n19.78\n27.45\n27.71\n32.04\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\n\n\n\nN\n186\n256\n117\n281\n150\n46\n\n\n%\n17.95\n24.71\n11.29\n27.12\n14.48\n4.44\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\n\n\n\nclass1\n0.6971\n0.0182\n0.0826\n0.0555\n0.0902\n0.0564\n\n\nclass2\n0.0114\n0.7392\n0.0467\n0.1273\n0.0372\n0.0382\n\n\nclass3\n0.0834\n0.0391\n0.7249\n0.1022\n0.0093\n0.0411\n\n\nclass4\n0.0578\n0.1309\n0.1022\n0.6399\n0.0436\n0.0256\n\n\nclass5\n0.1135\n0.054\n0.0201\n0.053\n0.713\n0.0464\n\n\nclass6\n0.0639\n0.0941\n0.0575\n0.0176\n0.063\n0.7039\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\n\n\n\nprob&gt;0.7\n52.15\n58.2\n53.85\n36.3\n52\n50\n\n\nprob&gt;0.8\n38.17\n46.09\n47.86\n24.56\n42.67\n41.3\n\n\nprob&gt;0.9\n26.88\n33.59\n34.19\n18.86\n28\n19.57\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nN\n139\n149\n274\n33\n255\n60\n126\n\n\n%\n13.42\n14.38\n26.45\n3.19\n24.61\n5.79\n12.16\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\n\n\n\nclass1\n0.7097\n0.0839\n0.0394\n0.0193\n0.0117\n0.0553\n0.0807\n\n\nclass2\n0.0956\n0.6875\n0.059\n0.0554\n0.0344\n0.0357\n0.0325\n\n\nclass3\n0.0391\n0.0405\n0.6494\n0.0112\n0.1266\n0.027\n0.1062\n\n\nclass4\n0.0458\n0.1192\n0.0446\n0.7189\n0.0409\n0.0301\n5e-04\n\n\nclass5\n0.0067\n0.025\n0.1272\n0.012\n0.7453\n0.0377\n0.046\n\n\nclass6\n0.0685\n0.059\n0.031\n0.0247\n0.088\n0.6833\n0.0455\n\n\nclass7\n0.0703\n0.0331\n0.093\n4e-04\n0.033\n0.0447\n0.7255\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nprob&gt;0.7\n56.12\n48.32\n40.51\n51.52\n61.18\n46.67\n52.38\n\n\nprob&gt;0.8\n41.01\n32.21\n26.64\n45.45\n47.45\n40\n46.83\n\n\nprob&gt;0.9\n27.34\n18.79\n18.98\n36.36\n33.73\n26.67\n33.33\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nN\n70\n131\n140\n166\n114\n208\n66\n141\n\n\n%\n6.76\n12.64\n13.51\n16.02\n11\n20.08\n6.37\n13.61\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\nprob8\n\n\n\nclass1\n0.644\n0.067\n0.0342\n0.0562\n0.0262\n0.0728\n0.0586\n0.041\n\n\nclass2\n0.0451\n0.6683\n0.0792\n0.0712\n0.0344\n0.0258\n0.0059\n0.0702\n\n\nclass3\n0.0283\n0.0741\n0.5651\n0.0419\n0.0306\n0.0622\n0.0347\n0.1632\n\n\nclass4\n0.0474\n0.0777\n0.033\n0.6829\n0.0674\n0.0119\n0.056\n0.0237\n\n\nclass5\n0.0297\n0.0314\n0.038\n0.1\n0.6569\n0.0177\n0.1012\n0.0251\n\n\nclass6\n0.0385\n0.0292\n0.0608\n0.0029\n0.0087\n0.7125\n0.021\n0.1264\n\n\nclass7\n0.0443\n0.0015\n0.0264\n0.036\n0.1159\n0.0453\n0.697\n0.0337\n\n\nclass8\n0.0291\n0.0683\n0.1686\n0.0174\n0.0117\n0.1331\n0.0165\n0.5553\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nprob&gt;0.7\n40\n47.33\n30\n51.2\n45.61\n52.4\n51.52\n24.11\n\n\nprob&gt;0.8\n32.86\n41.22\n22.86\n42.77\n29.82\n42.79\n34.85\n19.86\n\n\nprob&gt;0.9\n21.43\n31.3\n12.14\n28.31\n13.16\n29.33\n28.79\n10.64\n\n\n\nCoderm(output)\n\n\n\n\n\n\nCodepprobs.2 &lt;- c()\ngroups.2 &lt;- models.grbf[[2]]\npprobs.3 &lt;- c()\ngroups.3 &lt;- models.grbf[[3]]\npprobs.4 &lt;- c()\ngroups.4 &lt;- models.grbf[[4]]\npprobs.5 &lt;- c()\ngroups.5 &lt;- models.grbf[[5]]\npprobs.6 &lt;- c()\ngroups.6 &lt;- models.grbf[[6]]\npprobs.7 &lt;- c()\ngroups.7 &lt;- models.grbf[[7]]\npprobs.8 &lt;- c()\ngroups.8 &lt;- models.grbf[[8]]\n\n\nfor (i in 1:nrow(models.grbf[[2]]$pprob)) {\n  class.2 &lt;- groups.2$pprob[i, 2]\n  pprobs.2 &lt;- c(pprobs.2, groups.2$pprob[i, class.2 + 2])\n  class.3 &lt;- groups.3$pprob[i, 2]\n  pprobs.3 &lt;- c(pprobs.3, groups.3$pprob[i, class.3 + 2])\n  class.4 &lt;- groups.4$pprob[i, 2]\n  pprobs.4 &lt;- c(pprobs.4, groups.4$pprob[i, class.4 + 2])\n  class.5 &lt;- groups.5$pprob[i, 2]\n  pprobs.5 &lt;- c(pprobs.5, groups.5$pprob[i, class.5 + 2])\n  class.6 &lt;- groups.6$pprob[i, 2]\n  pprobs.6 &lt;- c(pprobs.6, groups.6$pprob[i, class.6 + 2])\n  class.7 &lt;- groups.7$pprob[i, 2]\n  pprobs.7 &lt;- c(pprobs.7, groups.7$pprob[i, class.7 + 2])\n  class.8 &lt;- groups.8$pprob[i, 2]\n  pprobs.8 &lt;- c(pprobs.8, groups.8$pprob[i, class.8 + 2])\n}\npprobs.2 &lt;- tibble(prob = pprobs.2)\npprobs.3 &lt;- tibble(prob = pprobs.3)\npprobs.4 &lt;- tibble(prob = pprobs.4)\npprobs.5 &lt;- tibble(prob = pprobs.5)\npprobs.6 &lt;- tibble(prob = pprobs.6)\npprobs.7 &lt;- tibble(prob = pprobs.7)\npprobs.8 &lt;- tibble(prob = pprobs.8)\n\npprobs.2$Model &lt;- as.factor(rep(\"Two clusters\", nrow(pprobs.2)))\npprobs.3$Model &lt;- as.factor(rep(\"Three clusters\", nrow(pprobs.3)))\npprobs.4$Model &lt;- as.factor(rep(\"Four clusters\", nrow(pprobs.4)))\npprobs.5$Model &lt;- as.factor(rep(\"Five clusters\", nrow(pprobs.5)))\npprobs.6$Model &lt;- as.factor(rep(\"Six clusters\", nrow(pprobs.6)))\npprobs.7$Model &lt;- as.factor(rep(\"Seven clusters\", nrow(pprobs.7)))\npprobs.8$Model &lt;- as.factor(rep(\"Eight clusters\", nrow(pprobs.8)))\npprobs &lt;- rbind(\n  pprobs.2,\n  pprobs.3,\n  pprobs.4,\n  pprobs.5,\n  pprobs.6,\n  pprobs.7,\n  pprobs.8\n)\n\np &lt;- pprobs %&gt;%\n  ggplot(aes(x = prob, y = Model)) +\n  # geom_histogram(bins = 40, fill = NA, position=\"identity\")\n  stat_slab(\n    fill = \"#5D5179\", color = \"gray\",\n    size = 0.8,\n    alpha = 0.7\n  ) +\n  geom_dots(color = \"#4F759B\", dotsize = 1) +\n  xlab(\"Posterior probability for cluster membership\") +\n  ylab(\"\") +\n  ggtitle(\n    \"Distribution of Posterior Probabilities Across Models\",\n    \"Subject-specific posterior probabilities for assigned cluster\"\n  ) +\n  theme_minimal() +\n  scale_y_discrete(limits = rev)\nggsave(\"plots/pprob-distribution-grbf.png\",\n  p,\n  width = 8.5,\n  height = 7.5,\n  units = \"in\"\n)\nggsave(\"plots/pprob-distribution-grbf.pdf\",\n  p,\n  width = 8.5,\n  height = 7.5,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\nResidual plots\n\nG = 2\n\n\n##### G = 3 ##### G = 4 ##### G = 5 ##### G = 6 ##### G = 7 ##### G = 8 \n\n\n\nChosen model\n\nCodep1 &lt;- data.frame(residuals = resid(models.grbf[[6]])) %&gt;%\n  ggplot(aes(x = residuals)) +\n  geom_histogram(aes(y = after_stat(density)),\n    fill = \"#D8829D\",\n    color = \"#AF6A80\",\n    bins = 30\n  ) +\n  geom_density(color = \"#023777\", size = 1.2) +\n  theme_classic() +\n  theme(axis.line = element_line(colour = \"gray\")) +\n  ylab(\"Density\") +\n  xlab(\"Residuals\") +\n  ggtitle(\"A\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nCodep2 &lt;- data.frame(residuals = resid(models.grbf[[6]])) %&gt;%\n  ggplot(aes(sample = residuals)) +\n  stat_qq_band() +\n  stat_qq_line(color = \"#D8829D\") +\n  stat_qq_point(color = \"#023777\") +\n  theme_classic() +\n  theme(axis.line = element_line(colour = \"gray\")) +\n  ylab(\"Theoretical Quantiles\") +\n  xlab(\"Sample Quantiles\") +\n  ggtitle(\"B\")\nggsave(\"paper/Residual-plot-fcal-grbf.pdf\",\n  plot = p1 / p2,\n  width = 8,\n  height = 8,\n  units = \"in\"\n)\nprint(p1 / p2)\n\n\n\n\n\n\nFigure 13: Plots assessing normality for the distribution of residuals for the chosen GRBF model for FCAL. (A) Histrogram; (B) Q-Q plot.\n\n\n\n\n\nCodepredClass &lt;- models.grbf[[6]]$pprob[, c(\"ids\", \"class\")]\ntemp &lt;- merge(models.grbf[[6]]$pred, predClass, by = \"ids\")\nlabels &lt;- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\")\np &lt;- list()\n\nfor (i in 1:6) {\n  p[[i]] &lt;- subset(temp, class == i) %&gt;%\n    ggplot(aes(sample = resid_ss)) +\n    stat_qq_band() +\n    stat_qq_line(color = \"#D8829D\") +\n    stat_qq_point(color = \"#023777\") +\n    theme_classic() +\n    theme(axis.line = element_line(colour = \"gray\")) +\n    ylab(\"Theoretical Quantiles\") +\n    xlab(\"Sample Quantiles\") +\n    ggtitle(labels[i])\n}\n\nArrangedPlot &lt;- (p[[1]] + p[[2]]) / (p[[3]] + p[[4]]) / (p[[5]] + p[[6]])\n\nggsave(\"paper/cluster-resids-grbf.pdf\",\n  ArrangedPlot,\n  width = 8,\n  height = 8,\n  units = \"in\"\n)\nprint(ArrangedPlot)\n\n\n\n\n\n\nFigure 14: Q-Q plots assessing normality for the distribution of residuals stratifed by cluster assignment.\n\n\n\n\nModel metrics\n\nCodesummaryplot(models.grbf[[2]],\n  models.grbf[[3]],\n  models.grbf[[4]],\n  models.grbf[[5]],\n  models.grbf[[6]],\n  models.grbf[[7]],\n  #  models.grbf[[8]],\n  which = c(\"loglik\", \"AIC\", \"BIC\", \"entropy\", \"ICL\"),\n  mfrow = c(2, 3),\n  axis = \"Class\"\n)\n\n\n\n\n\n\nFigure 15: Model metrics for FCAL for G = 2-8\n\n\n\n\n\nCodegrbf.metrics &lt;- makeMetrics(G.grbf, models.grbf)\nbuildDT(grbf.metrics)\n\n\n\nClusters\nMaximum log-likelihood\nAIC\nBIC\n\n\n\n2\n-16590.47\n33210.94\n33285.09\n\n\n3\n-16422.90\n32891.80\n33005.49\n\n\n4\n-16340.79\n32743.58\n32896.81\n\n\n5\n-16272.49\n32622.98\n32815.76\n\n\n6\n-16237.73\n32569.45\n32801.78\n\n\n7\n-16205.04\n32520.07\n32791.94\n\n\n8\n-16187.21\n32500.41\n32811.83\n\n\n\n\n\nThe optimum AIC is  32500.41  with cluster 10. The optimum BIC is 32791.94  with cluster 9\nSpaghetti plots per cluster\n\nCodefor (G in G.grbf) {\n  cat(paste0(\"##### G = \", G, \"\\n\\n\"))\n  cat(\"###### Log-scale, all subjects \\n\\n\")\n  grid::grid.newpage()\n  spaghettiPlot(fcal,\n    models.grbf,\n    G = G,\n    log = TRUE,\n    tmax = 7,\n    sizes = TRUE,\n    knots = TRUE,\n    knot.type = \"equal\",\n    grbf = TRUE,\n    var.time = \"calpro_time\"\n  )\n}\n\n##### G = 2\n\n###### Log-scale, all subjects \n\n\n\n\n\n\n\n\n##### G = 3\n\n###### Log-scale, all subjects \n\n\n\n\n\n\n\n\n##### G = 4\n\n###### Log-scale, all subjects \n\n\n\n\n\n\n\n\n##### G = 5\n\n###### Log-scale, all subjects \n\n\n\n\n\n\n\n\n##### G = 6\n\n###### Log-scale, all subjects \n\n\n\n\n\n\n\n\n##### G = 7\n\n###### Log-scale, all subjects \n\n\n\n\n\n\n\n\n##### G = 8\n\n###### Log-scale, all subjects \n\n\n\n\n\n\n\n\nIBD Associations\n\nCodecluster &lt;- numeric()\n\ndict.grbf &lt;- subset(dict, ids %in% unique(fcal$ids))\n\nfor (id in dict.grbf$ids) {\n  cluster &lt;- c(\n    cluster,\n    subset(models.grbf[[6]]$pprob, ids == id)$class\n  )\n}\n\n\ndict.grbf$diagnosis &lt;- as.factor(dict.grbf$diagnosis)\ndict.grbf$cluster &lt;- as.factor(cluster)\nrm(cluster)\n\n\n\n\nPopulation\nCluster = 1\nCluster = 2\nCluster = 3\nCluster = 4\nCluster = 5\nCluster = 6\n\n\n\n\nCodedescribe_cat(\"diagnosis\", dict.grbf)\n\n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n               544                380                112                  0 \n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n         0.5250965          0.3667954          0.1081081          0.0000000 \n\n\n\n\n\nCodedescribe_cat(\"diagnosis\", subset(dict.grbf, cluster == 1))\n\n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n               117                 45                 24                  0 \n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n         0.6290323          0.2419355          0.1290323          0.0000000 \n\n\n\n\n\nCodedescribe_cat(\"diagnosis\", subset(dict.grbf, cluster == 2))\n\n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n               173                 48                 35                  0 \n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n         0.6757812          0.1875000          0.1367188          0.0000000 \n\n\n\n\n\nCodedescribe_cat(\"diagnosis\", subset(dict.grbf, cluster == 3))\n\n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n                72                 33                 12                  0 \n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n         0.6153846          0.2820513          0.1025641          0.0000000 \n\n\n\n\n\nCodedescribe_cat(\"diagnosis\", subset(dict.grbf, cluster == 4))\n\n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n                70                193                 18                  0 \n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n        0.24911032         0.68683274         0.06405694         0.00000000 \n\n\n\n\n\nCodedescribe_cat(\"diagnosis\", subset(dict.grbf, cluster == 5))\n\n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n                83                 44                 23                  0 \n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n         0.5533333          0.2933333          0.1533333          0.0000000 \n\n\n\n\n\nCodedescribe_cat(\"diagnosis\", subset(dict.grbf, cluster == 6))\n\n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n                29                 17                  0                  0 \n\n   Crohn's Disease Ulcerative Colitis               IBDU               &lt;NA&gt; \n         0.6304348          0.3695652          0.0000000          0.0000000 \n\n\n\n\n\nFisher’s exact test\n\nCodefisher.test(dict.grbf$diagnosis,\n  dict.grbf$cluster,\n  simulate.p.value = TRUE, # calculate p-values using Monte Carlo\n  B = 1e5\n) # replicates for Monte Carlo test\n\n\n    Fisher's Exact Test for Count Data with simulated p-value (based on\n    1e+05 replicates)\n\ndata:  dict.grbf$diagnosis and dict.grbf$cluster\np-value = 1e-05\nalternative hypothesis: two.sided"
  },
  {
    "objectID": "source/selection/fcal.html#ncs-vs-grbf-comparison",
    "href": "source/selection/fcal.html#ncs-vs-grbf-comparison",
    "title": "Model selection",
    "section": "NCS vs GRBF comparison",
    "text": "NCS vs GRBF comparison\n\nCodepred.df &lt;- data.frame(\n  calpro_time = seq(0, 7, by = 0.01),\n  diagnosis = \"Crohn's Disease\"\n)\npred.df &lt;- rbind(\n  pred.df,\n  data.frame(\n    calpro_time = seq(0, 7, by = 0.01),\n    diagnosis = \"Ulcerative colitis\"\n  )\n)\npred.df &lt;- rbind(\n  pred.df,\n  data.frame(\n    calpro_time = seq(0, 7, by = 0.01),\n    diagnosis = \"IBDU\"\n  )\n)\n\np.list &lt;- list()\n\nl &lt;- 1.2\ncenters &lt;- c(7 / 4, 14 / 4, 21 / 4)\npred.df$grbf1 &lt;- exp(-1 * ((pred.df$calpro_time - centers[1])^2) / (2 * l^2))\npred.df$grbf2 &lt;- exp(-1 * ((pred.df$calpro_time - centers[2])^2) / (2 * l^2))\npred.df$grbf3 &lt;- exp(-1 * ((pred.df$calpro_time - centers[3])^2) / (2 * l^2))\n\nNCS.pred &lt;- predictY(models.fcal[[6]], pred.df, \"calpro_time\", draws = TRUE)$pred\nGRBF.pred &lt;- predictY(models.grbf[[6]], pred.df, \"calpro_time\", draws = TRUE)$pred\n\nNCS.switch &lt;- c(4, 1, 6, 2, 5, 3)\n\nfor (g in 1:6) {\n  plot.df &lt;- data.frame(\n    time = pred.df$calpro_time,\n    pred = NCS.pred[, NCS.switch[g]],\n    upper = NCS.pred[, NCS.switch[g] + 6],\n    lower = NCS.pred[, NCS.switch[g] + 12],\n    Model = \"NCS\"\n  )\n  plot.df &lt;- rbind(\n    plot.df,\n    data.frame(\n      time = pred.df$calpro_time,\n      pred = GRBF.pred[, g],\n      upper = GRBF.pred[, g + 6],\n      lower = GRBF.pred[, g + 12],\n      Model = \"GRBF\"\n    )\n  )\n\n  p &lt;- plot.df %&gt;%\n    ggplot(aes(x = time, color = Model)) +\n    geom_line(aes(y = pred)) +\n    geom_line(aes(y = upper), lty = 2) +\n    geom_line(aes(y = lower), lty = 2) +\n    xlab(\"Time\") +\n    ylab(\"Predicted cluster mean\") +\n    ylim(3, 8) +\n    theme_minimal() +\n    scale_color_manual(values = c(\"#0E6BA8\", \"#EF6461\"))\n  p.list[[g]] &lt;- p\n}\n\nfinal.plot &lt;- (p.list[[1]] + p.list[[2]]) /\n  (p.list[[3]] + p.list[[4]]) /\n  (p.list[[5]] + p.list[[6]]) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(guides = \"collect\") & theme(legend.position = \"bottom\")\n\n\nggsave(\"paper/comparison.pdf\",\n  final.plot,\n  width = 8.3,\n  height = 11.7,\n  units = \"in\"\n)\nggsave(\"paper/comparison.png\",\n  final.plot,\n  width = 8.3,\n  height = 11.7,\n  units = \"in\"\n)\nprint(final.plot)"
  },
  {
    "objectID": "source/selection/fcal.html#acknowledgments",
    "href": "source/selection/fcal.html#acknowledgments",
    "title": "Model selection",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nThis work is funded by the Medical Research Council & University of Edinburgh via a Precision Medicine PhD studentship (MR/N013166/1, to NC-C).\nThis work has made use of the resources provided by the Edinburgh Compute and Data Facility (ECDF)."
  },
  {
    "objectID": "source/selection/fcal.html#author-contributions",
    "href": "source/selection/fcal.html#author-contributions",
    "title": "Model selection",
    "section": "Author contributions",
    "text": "Author contributions"
  },
  {
    "objectID": "source/selection/fcal.html#references",
    "href": "source/selection/fcal.html#references",
    "title": "Model selection",
    "section": "References",
    "text": "References\n\n\nConstantine-Cooke, Nathan, Karla Monterrubio-Gómez, Nikolas Plevris, Lauranne A. A. P. Derikx, Beatriz Gros, Gareth-Rhys Jones, Riccardo E. Marioni, Charlie W. Lees, and Catalina A. Vallejos. 2023. “Longitudinal Fecal Calprotectin Profiles Characterize Disease Course Heterogeneity in Crohn’s Disease.” Clinical Gastroenterology and Hepatology, March, S1542356523002343. https://doi.org/10.1016/j.cgh.2023.03.026.\n\n\nElhakeem, Ahmed, Rachael A. Hughes, Kate Tilling, Diana L. Cousminer, Stefan A. Jackowski, Tim J. Cole, Alex S. F. Kwong, et al. 2022. “Using Linear and Natural Cubic Splines, SITAR, and Latent Trajectory Models to Characterise Nonlinear Longitudinal Growth Trajectories in Cohort Studies.” BMC Medical Research Methodology 22 (1): 68. https://doi.org/10.1186/s12874-022-01542-8.\n\n\nHarrell, Frank E. 2015. “General Aspects of Fitting Regression Models.” In Regression Modeling Strategies: With Applications to Linear Models, Logistic and Ordinal Regression, and Survival Analysis, edited by Jr. Harrell Frank E., 13–44. Springer Series in Statistics. Cham: Springer International Publishing. https://doi.org/10.1007/978-3-319-19425-7_2.\n\n\nProust-Lima, Cécile, Viviane Philipps, and Benoit Liquet. 2017. “Estimation of Extended Mixed Models Using Latent Classes and Latent Processes: The R Package lcmm.” Journal of Statistical Software 78 (2): 1–56. https://doi.org/10.18637/jss.v078.i02."
  },
  {
    "objectID": "source/selection/fcal.html#reuse",
    "href": "source/selection/fcal.html#reuse",
    "title": "Model selection",
    "section": "Reuse",
    "text": "Reuse\nLicensed by CC BY unless otherwise stated."
  },
  {
    "objectID": "source/selection/fcal.html#session-info",
    "href": "source/selection/fcal.html#session-info",
    "title": "Model selection",
    "section": "Session info",
    "text": "Session info\n\nCodepander(sessionInfo())\n\nR version 4.4.3 (2025-02-28)\nPlatform: aarch64-apple-darwin20\nlocale: en_GB.UTF-8||en_GB.UTF-8||en_GB.UTF-8||C||en_GB.UTF-8||en_GB.UTF-8\nattached base packages: splines, stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: qqplotr(v.0.0.6), pander(v.0.6.6), ggalluvial(v.0.12.5), ggdist(v.3.3.2), kml(v.2.5.0), longitudinalData(v.2.4.7), misc3d(v.0.9-1), rgl(v.1.3.17), clv(v.0.3-2.4), class(v.7.3-23), cluster(v.2.1.8), lcmm(v.2.2.1), libdr(v.1.0.1), magrittr(v.2.0.3), patchwork(v.1.3.0), lubridate(v.1.9.4), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.4), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): tidyselect(v.1.2.1), viridisLite(v.0.4.2), farver(v.2.1.2), viridis(v.0.6.5), bitops(v.1.0-9), fastmap(v.1.2.0), pracma(v.2.4.4), digest(v.0.6.37), timechange(v.0.3.0), lifecycle(v.1.0.4), survival(v.3.8-3), compiler(v.4.4.3), rlang(v.1.1.5), tools(v.4.4.3), yaml(v.2.3.10), knitr(v.1.49), spacefillr(v.0.4.0), labeling(v.0.4.3), htmlwidgets(v.1.6.4), plyr(v.1.8.9), withr(v.3.0.2), numDeriv(v.2016.8-1.1), grid(v.4.4.3), opdisDownsampling(v.1.0.1), caTools(v.1.18.3), colorspace(v.2.1-1), extrafontdb(v.1.0), scales(v.1.3.0), iterators(v.1.0.14), MASS(v.7.3-64), cli(v.3.6.4), mvtnorm(v.1.3-3), rmarkdown(v.2.29), ragg(v.1.3.3), marqLevAlg(v.2.0.8), generics(v.0.1.3), twosamples(v.2.0.1), robustbase(v.0.99-4-1), reshape2(v.1.4.4), tzdb(v.0.4.0), parallel(v.4.4.3), base64enc(v.0.1-3), vctrs(v.0.6.5), Matrix(v.1.7-2), jsonlite(v.1.9.1), hms(v.1.1.3), pbmcapply(v.1.5.1), systemfonts(v.1.2.1), foreach(v.1.5.2), glue(v.1.8.0), DEoptimR(v.1.1-3-1), codetools(v.0.2-20), distributional(v.0.5.0), stringi(v.1.8.4), gtable(v.0.3.6), quadprog(v.1.5-8), extrafont(v.0.19), munsell(v.0.5.1), pillar(v.1.10.1), htmltools(v.0.5.8.1), R6(v.2.6.1), textshaping(v.1.0.0), tcltk(v.4.4.3), doParallel(v.1.0.17), evaluate(v.1.0.3), lattice(v.0.22-6), qqconf(v.1.3.2), Rcpp(v.1.0.14), gridExtra(v.2.3), nlme(v.3.1-167), Rttf2pt1(v.1.3.12), xfun(v.0.51) and pkgconfig(v.2.0.3)"
  },
  {
    "objectID": "source/pre/preprocessing.html",
    "href": "source/pre/preprocessing.html",
    "title": "Preprocessing",
    "section": "",
    "text": "Codeset.seed(123)\n### Required packages\nlibrary(tidyverse) # ggplot2, dplyr, and magrittr\nlibrary(knitr) # Markdown utilities\nlibrary(pander) # Pretty markdown rendering\nlibrary(datefixR) # Standardising dates\nlibrary(lubridate) # Date handling\nlibrary(patchwork) # Arranging plots\n\n\nThis page details preprocessing steps undertaken prior to model fitting. These steps include examining data quality, performing data cleaning, and deriving the study cohort.\nThe biomarker (FC and CRP) data used in this pipeline have been primarily obtained from TRAK, a system used by NHS Lothian for the electronic ordering of laboratory tests. However, we also use phenotyping data manually curated by the Lees group for previous studies (see Jenkinson et al. (2020)).\nPrior to this report, all subject CHI (community health index) numbers, which uniquely identifies a patient when they interact with NHS Scotland services, were pseudoanonymised. Each CHI has been replaced with a unique random number.\n\nThe inclusion criteria for this study can broadly be categorised into two classifications: baseline and longitudinal. Baseline criteria can be applied using information known at diagnosis whilst longitudinal criteria are based on biomarker measurements taken over time.\nThe longitudinal criteria for each biomarker (FC and CRP) are considered independently. If a subject meets the below criteria for FC but not CRP, then only the FC for the subject will be modelled and vice versa.\n\n\nBaseline\nLongitudinal\n\n\n\n\nAs inflammatory bowel disease (IBD) is the disease of interest for this study, subjects are required to have a confirmed diagnosis of either Crohn’s disease, ulcerative colitis, or inflammatory bowel disease unclassified.\n\nStudy subjects are required to have been diagnosed with IBD between January 2008 and December 2017. The lower bound is required as FC tests were not typically used for disease monitoring prior to this period and were instead used only for diagnostic purposes. The upper bound is required to ensure subjects have the opportunity to have at least five years of follow-up. The most recent FC observation in this dataset is January 2023 which informed when deciding upon this cut-off.\n\n\n\n\nWe require study subjects to have a biomarker measurement taken ±90 days of reported date of diagnosis.\n\nTo ensure stability and interpretability, study subjects are also required to have at three non-censored biomarker measurements taken across follow-up. Like most biomarkers, the biomarkers used in this study are subject to censoring. However, these censored observations make it impossible to detect changes over time and we therefore do not wish to be reliant on censored observations.\n\n\n\n\n\n\nCodeif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/Vallejo-predict/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\nfcal.pheno &lt;- read.csv(file.path(prefix, \"2024-10-03/fcal-cleaned.csv\"))\n\n# Extract from TRAK which also now introduces CRP.\nlabs &lt;- read.csv(file.path(prefix, \"2024-10-03/markers-cleaned.csv\"))\nfcal &lt;- subset(labs, TEST == \"f-Calprotectin-ALP\")\n\n# Add sex and diagnosis type from fcal.pheno\nfcal &lt;- fcal.pheno %&gt;%\n  distinct(ids, .keep_all = TRUE) %&gt;%\n  select(ids, sex, diagnosis, diagnosis_date) %&gt;%\n  merge(x = fcal, by = \"ids\", all.x = TRUE, all.y = FALSE)\n\ncrp &lt;- subset(labs, TEST == \"C-Reactive Prot\")\nupdated &lt;- read.csv(file.path(prefix, \"2024-10-03/allPatientsNathanCleaned.csv\"))\noutcomes &lt;- read.csv(file.path(prefix, \"2024-10-03/cd-cleaned.csv\"))\n\nnon.ibd &lt;- read.csv(file.path (prefix, \"2024-10-24/non-ibd.csv\"))\n\n\nMultiple datasets are used in this report with varying degrees of previous curation.\n\n\nmarkers.csv is a 2024 extraction from TRAKcare describing 286294 test results (FC: 60866; CRP: 225428). Each row represents a test result with columns indicating the corresponding subject ID, the test type (FC or CRP), the time of the test, and the test result. This dataset contains the most recent data out of the other datasets. However, there has been no manual curation of these data, and no information about the patient’s characteristics are available (other than their ID).\n\nfcal-cleaned.csv does not describe CRP data. However, these data have been curated by the Lees group. In addition to 60866 FC test results, each row also provides the sex, IBD type, date of diagnosis, and date of death (if applicable) for the corresponding subject.\n\nallPatientsNathanCleaned.csv provides sex, IBD type, and diagnosis date for most (but not all) subjects in labs.csv not described by fcal-cleaned.csv.\n\ncd-cleaned.csv describes CD patient data (n = 1753). In addition to the same basic patient characteristic variables in other datasets, this dataset also describes surgical outcomes and biologic treatments prescribed to the subject.\n\nnon-ibd.csv describes subjects who were found to not have IBD during the phenotyping process. This dataset is used to remove subjects who do not have IBD from the analysis.\n\n\n\n\n\n\n\nNote\n\n\n\nThe “cleaned” in the above file names refers to the CHI numbers having been replaced. No further processing of the data has been undertaken for this study prior to the steps outlined in this report."
  },
  {
    "objectID": "source/pre/preprocessing.html#introduction",
    "href": "source/pre/preprocessing.html#introduction",
    "title": "Preprocessing",
    "section": "",
    "text": "Codeset.seed(123)\n### Required packages\nlibrary(tidyverse) # ggplot2, dplyr, and magrittr\nlibrary(knitr) # Markdown utilities\nlibrary(pander) # Pretty markdown rendering\nlibrary(datefixR) # Standardising dates\nlibrary(lubridate) # Date handling\nlibrary(patchwork) # Arranging plots\n\n\nThis page details preprocessing steps undertaken prior to model fitting. These steps include examining data quality, performing data cleaning, and deriving the study cohort.\nThe biomarker (FC and CRP) data used in this pipeline have been primarily obtained from TRAK, a system used by NHS Lothian for the electronic ordering of laboratory tests. However, we also use phenotyping data manually curated by the Lees group for previous studies (see Jenkinson et al. (2020)).\nPrior to this report, all subject CHI (community health index) numbers, which uniquely identifies a patient when they interact with NHS Scotland services, were pseudoanonymised. Each CHI has been replaced with a unique random number.\n\nThe inclusion criteria for this study can broadly be categorised into two classifications: baseline and longitudinal. Baseline criteria can be applied using information known at diagnosis whilst longitudinal criteria are based on biomarker measurements taken over time.\nThe longitudinal criteria for each biomarker (FC and CRP) are considered independently. If a subject meets the below criteria for FC but not CRP, then only the FC for the subject will be modelled and vice versa.\n\n\nBaseline\nLongitudinal\n\n\n\n\nAs inflammatory bowel disease (IBD) is the disease of interest for this study, subjects are required to have a confirmed diagnosis of either Crohn’s disease, ulcerative colitis, or inflammatory bowel disease unclassified.\n\nStudy subjects are required to have been diagnosed with IBD between January 2008 and December 2017. The lower bound is required as FC tests were not typically used for disease monitoring prior to this period and were instead used only for diagnostic purposes. The upper bound is required to ensure subjects have the opportunity to have at least five years of follow-up. The most recent FC observation in this dataset is January 2023 which informed when deciding upon this cut-off.\n\n\n\n\nWe require study subjects to have a biomarker measurement taken ±90 days of reported date of diagnosis.\n\nTo ensure stability and interpretability, study subjects are also required to have at three non-censored biomarker measurements taken across follow-up. Like most biomarkers, the biomarkers used in this study are subject to censoring. However, these censored observations make it impossible to detect changes over time and we therefore do not wish to be reliant on censored observations.\n\n\n\n\n\n\nCodeif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/Vallejo-predict/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\nfcal.pheno &lt;- read.csv(file.path(prefix, \"2024-10-03/fcal-cleaned.csv\"))\n\n# Extract from TRAK which also now introduces CRP.\nlabs &lt;- read.csv(file.path(prefix, \"2024-10-03/markers-cleaned.csv\"))\nfcal &lt;- subset(labs, TEST == \"f-Calprotectin-ALP\")\n\n# Add sex and diagnosis type from fcal.pheno\nfcal &lt;- fcal.pheno %&gt;%\n  distinct(ids, .keep_all = TRUE) %&gt;%\n  select(ids, sex, diagnosis, diagnosis_date) %&gt;%\n  merge(x = fcal, by = \"ids\", all.x = TRUE, all.y = FALSE)\n\ncrp &lt;- subset(labs, TEST == \"C-Reactive Prot\")\nupdated &lt;- read.csv(file.path(prefix, \"2024-10-03/allPatientsNathanCleaned.csv\"))\noutcomes &lt;- read.csv(file.path(prefix, \"2024-10-03/cd-cleaned.csv\"))\n\nnon.ibd &lt;- read.csv(file.path (prefix, \"2024-10-24/non-ibd.csv\"))\n\n\nMultiple datasets are used in this report with varying degrees of previous curation.\n\n\nmarkers.csv is a 2024 extraction from TRAKcare describing 286294 test results (FC: 60866; CRP: 225428). Each row represents a test result with columns indicating the corresponding subject ID, the test type (FC or CRP), the time of the test, and the test result. This dataset contains the most recent data out of the other datasets. However, there has been no manual curation of these data, and no information about the patient’s characteristics are available (other than their ID).\n\nfcal-cleaned.csv does not describe CRP data. However, these data have been curated by the Lees group. In addition to 60866 FC test results, each row also provides the sex, IBD type, date of diagnosis, and date of death (if applicable) for the corresponding subject.\n\nallPatientsNathanCleaned.csv provides sex, IBD type, and diagnosis date for most (but not all) subjects in labs.csv not described by fcal-cleaned.csv.\n\ncd-cleaned.csv describes CD patient data (n = 1753). In addition to the same basic patient characteristic variables in other datasets, this dataset also describes surgical outcomes and biologic treatments prescribed to the subject.\n\nnon-ibd.csv describes subjects who were found to not have IBD during the phenotyping process. This dataset is used to remove subjects who do not have IBD from the analysis.\n\n\n\n\n\n\n\nNote\n\n\n\nThe “cleaned” in the above file names refers to the CHI numbers having been replaced. No further processing of the data has been undertaken for this study prior to the steps outlined in this report."
  },
  {
    "objectID": "source/pre/preprocessing.html#subject-data",
    "href": "source/pre/preprocessing.html#subject-data",
    "title": "Preprocessing",
    "section": "Subject data",
    "text": "Subject data\nWe will create a “dictionary” which, for each subject, lists their subject ID, their IBD type, and their date of diagnosis. In addition to ensuring inclusion criteria are met, date of diagnosis will be used to retime all biomarker measurements of a subject such that t=0 corresponds to their diagnosis date. IBD types are used to test if clusters are enriched by IBD type and may be used to adjust the clustering.\nThere are multiple potential sources for date of diagnosis and IBD type: the CD outcomes dataset, a demographics dataset maintained by the Lees group, and a raw TRAK extraction. For every subject listed in at least one of these datasets, we have tried to extract their date of diagnosis and diagnosis type. We have assumed a hierarchy of datasets where manually curated datasets are preferred for extracting data over a dataset generated with minimal human involvement.\nDiagnosis and diagnosis date\n\nCodeids &lt;- unique(c(outcomes$ids, fcal$ids, updated$ids))\ndiagnosis &lt;- character()\ndate.of.diag &lt;- character()\nfor (id in ids) {\n  if (id %in% outcomes$ids) {\n    # Outcomes data only contains CD subjects\n    diagnosis &lt;- c(diagnosis, \"Crohn's Disease\")\n    date.of.diag &lt;- c(\n      date.of.diag,\n      subset(outcomes, ids == id)$diagnosisDate\n    )\n  } else if (id %in% updated$ids) {\n    diagnosis &lt;- c(diagnosis, subset(updated, ids == id)[1, \"diagnosis\"])\n    date.of.diag &lt;- c(\n      date.of.diag,\n      subset(updated, ids == id)[1, \"diagnosisDate\"]\n    )\n  } else if (id %in% fcal$ids) {\n    diagnosis &lt;- c(diagnosis, subset(fcal, ids == id)[1, \"diagnosis\"])\n    date.of.diag &lt;- c(\n      date.of.diag,\n      subset(fcal, ids == id)[1, \"diagnosis_date\"]\n    )\n  } else {\n    diagnosis &lt;- c(diagnosis, \"Unknown\")\n    date.of.diag &lt;- c(\n      date.of.diag,\n      \"Unknown\"\n    )\n  }\n}\n\ndict &lt;- data.frame(\n  ids = ids,\n  diagnosis = diagnosis,\n  date.of.diag = fix_date_char(date.of.diag)\n)\n\n\nrm(id, ids, diagnosis, date.of.diag) # clean up\ndict &lt;- fix_date_df(dict, \"date.of.diag\")\n\n\nBefore filtering by inclusion/exclusion criteria, there are 7 individuals for which a diagnostic date is missing. However, 0 missing values are observed for diagnosis (IBD type).\nAs can be seen in the below table, two spellings of Crohn’s disease (with and without an apostrophe (’)) and three names for IBDU are used. There are also subjects reported to not have IBD. These will be removed, leaving 10153 subjects included in the subsequent analyses.\n\nCodekable(unique(dict$diagnosis),\n  col.names = c(\"Diagnosis\")\n)\ndict &lt;- dict %&gt;%\n  subset(diagnosis != \"Not IBD\") %&gt;%\n  subset(!(ids %in% non.ibd$ids))\n\n\nTable 1: Reported IBD types\n\n\n\n\nDiagnosis\n\n\n\nCrohn’s Disease\n\n\nInflamatory Bowel Disease - Unknown Subtype\n\n\nCrohns Disease\n\n\nUlcerative Colitis\n\n\nInflamatory Bowel Disease\n\n\nIBDU\n\n\nNot IBD\n\n\n\n\n\n\n\n\nThe Crohn’s disease and IBDU names have been standardised (IBDU, Inflammatory Bowel Disease, Inflammatory Bowel Disease - Unknown Subtype are assumed to be equivalent). The subject reported to not have IBD has been removed.\n\nCodedict$old &lt;- dict$diagnosis\ndict$diagnosis &lt;- plyr::mapvalues(\n  dict$diagnosis,\n  from = c(\n    \"Crohns Disease\",\n    \"Inflamatory Bowel Disease\",\n    \"Inflamatory Bowel Disease - Unknown Subtype\"\n  ),\n  to = c(\n    \"Crohn's Disease\",\n    \"IBDU\",\n    \"IBDU\"\n  )\n)\n\nkable(addmargins(table(dict$diagnosis, dict$old), margin = 2))\ndict$old &lt;- NULL\n\n\nTable 2: Contingency table showing mapping of IBD types to a standardised format\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCrohn’s Disease\nCrohns Disease\nIBDU\nInflamatory Bowel Disease\nInflamatory Bowel Disease - Unknown Subtype\nUlcerative Colitis\nSum\n\n\n\nCrohn’s Disease\n2471\n1328\n0\n0\n0\n0\n3799\n\n\nIBDU\n0\n0\n1\n242\n841\n0\n1084\n\n\nUlcerative Colitis\n0\n0\n0\n0\n0\n5270\n5270\n\n\n\n\n\n\n\n\nAge and sex\n\nCode# Merge with fcal to add sex information\ndict &lt;- fcal.pheno[, c(\"ids\", \"sex\")] %&gt;%\n  distinct(ids,\n    .keep_all = TRUE\n  ) %&gt;%\n  merge(x = dict, by = \"ids\", all.x = TRUE, all.y = FALSE)\n\n# Update NA sex if sex available from updated\ndict &lt;- merge(dict,\n  updated[, c(\"ids\", \"sex\")],\n  by = \"ids\",\n  all.x = TRUE,\n  all.y = FALSE\n)\n\nfor (i in seq_len(nrow(dict))) {\n  if (is.na(dict[i, \"sex.x\"]) && !is.na(dict[i, \"sex.y\"])) {\n    dict[i, \"sex.x\"] &lt;- dict[i, \"sex.y\"]\n  }\n}\n\ndict$sex &lt;- dict$sex.x\ndict$sex.x &lt;- dict$sex.y &lt;- NULL\n\n# Add age at IBD diagnosis\nupdated &lt;- fix_date_df(updated, \"diagnosisDate\")\nupdated$age &lt;- with(updated, year(diagnosisDate) - dateOfBirth)\ndict &lt;- merge(dict,\n  updated[, c(\"ids\", \"age\")],\n  by = \"ids\",\n  all.x = TRUE,\n  all.y = FALSE\n)\n\n\nNote that there 7 individuals for which age at diagnosis is missing (this is due to missing diagnostic dates). However, there are 0 individuals for which sex is missing.\nDate of death\n\nCodedict &lt;- merge(dict,\n  updated[, c(\"ids\", \"death\")],\n  by = \"ids\",\n  all.x = TRUE,\n  all.y = FALSE\n) %&gt;%\n  rename(date.of.death = death)\n\ndict &lt;- fix_date_df(dict, \"date.of.death\")\n\n\nDate of death information is available for 1136 individuals. We assume that all remaining individuals have not died by the date of data extraction."
  },
  {
    "objectID": "source/pre/preprocessing.html#exclusion-criteria-according-to-diagnosis-and-date-of-diagnosis",
    "href": "source/pre/preprocessing.html#exclusion-criteria-according-to-diagnosis-and-date-of-diagnosis",
    "title": "Preprocessing",
    "section": "Exclusion criteria according to diagnosis and date of diagnosis",
    "text": "Exclusion criteria according to diagnosis and date of diagnosis\nDate of diagnosis in an integral aspect of the inclusion criteria and also used to retime biomarker measurements.\nFirstly, we remove 7 individuals with a missing date of diagnosis.\n\nCodedict &lt;- dict[!is.na(dict$date.of.diag), ]\n\n\nThis leaves 10146 for subsequent analyses.\n\nCode# no. subjects over upper bound\nmax_fup &lt;- max(labs$COLLECTION_DATE)\nmax_fup &lt;- as.Date(max_fup)\nn.upper &lt;- nrow(subset(dict, max_fup - date.of.diag &lt; 5 * 365.25))\n\n# no. subjects under lower bound\nn.lower &lt;- nrow(subset(dict, year(date.of.diag) &lt; 2008))\n\n# subset to subjects meeting the criteria.\ndict &lt;- subset(dict, max_fup - date.of.diag &gt;= 5 * 365.25)\ndict &lt;- subset(dict, year(date.of.diag) &gt;= 2008)\n\n\nAs described in the inclusion/exclusion criteria section, the inclusion criteria considers upper and lower bounds for the diagnostic dates. In this case, we only consider subjects diagnosed from 1 January 2008 and before 13 August 2019 (this ensures individuals can be followed up by at least 5 year by the time of the last longitudinal measument obtained for the cohort; 2024-08-13). As such, subjects who do not meet this criteria will be excluded. 77 subjects were diagnosed on 13 August 2019 or later and were removed, and 5588 subjects were diagnosed prior to 2008 and were likewise removed. This results in a cohort size of 4481 subjects."
  },
  {
    "objectID": "source/pre/preprocessing.html#exploration",
    "href": "source/pre/preprocessing.html#exploration",
    "title": "Preprocessing",
    "section": "Exploration",
    "text": "Exploration\n\nWe now explore date of diagnosis to ensure data quality is at a suitable standard.\nYear of diagnosis\nFrom Figure 1, we can see the number of IBD diagnoses each year is relatively static with the exception of 2004 and 2005. The former describes only three months of the year, and incidence was likely still increasing across both of these two years. Jones et al. (2019) found IBD incidence from 2008 onwards to be consistent over time for patients diagnosed by NHS Lothian which is in agreement with our findings.\n\nCodedict %&gt;%\n  ggplot(aes(x = year(date.of.diag))) +\n  geom_histogram(fill = \"#B8F2E6\", color = \"black\", binwidth = 1) +\n  theme_minimal() +\n  xlab(\"Year of IBD diagnosis\") +\n  ylab(\"Frequency\")\n\n\n\n\n\n\nFigure 1: Distribution of year of diagnosis\n\n\n\n\nMonth of diagnosis\nIt appears there are subjects for whom only year of diagnosis was available. This has resulted in the 1st of January for that year being recorded as the date of diagnosis for that subject. As such, far more diagnoses are reported in January than in other months (Figure 3). There are 707 subjects reported to have been diagnosed on New Year’s day .\nIf a subject’s exact date of diagnosis is not known, then this is most likely because the subject was not diagnosed by NHS Lothian. Instead, the date of diagnosis would have needed to be recalled by the subject which introduces the inaccuracy observed.\nAs subjects are require a diagnostic biomarker measurement to be available within 90 days of reported date of diagnosis to be included in this study and patients diagnosed outside of NHS Lothian will not have a biomarker test result available within this period, the effect on our study should be minimal. However, we will revisit month of diagnosis after filtering by existence of diagnostic biomarker measurements to confirm our assumption.\n\nCodedict %&gt;%\n  ggplot(aes(x = as.factor(year(date.of.diag)))) +\n  geom_bar(color = \"black\", fill = \"#FEC601\", linewidth = 0.3) +\n  theme_minimal() +\n  ylab(\"Frequency\") +\n  xlab(\"Year of IBD Diagnosis\")\n\n\n\n\n\n\nFigure 2: Bar plot of year of diagnosis\n\n\n\n\n\nCodedict %&gt;%\n  ggplot(aes(x = as.factor(month(date.of.diag, label = TRUE)))) +\n  geom_bar(color = \"black\", fill = \"#FEC601\", linewidth = 0.3) +\n  theme_minimal() +\n  ylab(\"Frequency\") +\n  xlab(\"Month of IBD Diagnosis\")\n\n\n\n\n\n\nFigure 3: Bar plot of month of diagnosis\n\n\n\n\n\nCodediag.ts &lt;- dict %&gt;%\n  mutate(\n    date.of.diag.month =\n      as.Date(paste0(format(date.of.diag, \"%Y-%m\"), \"-01\"), format = \"%Y-%m-%d\")\n  ) %&gt;%\n  group_by(date.of.diag.month) %&gt;%\n  summarise(count = n()) %&gt;%\n  ungroup()\n\ndiag.ts %&gt;%\n  ggplot(aes(x = as.Date(date.of.diag.month, \"%Y-%m\"), y = count, group = 1)) +\n  geom_line() +\n  xlab(\"Diagnosis date\") +\n  ylab(\"Number of diagnosis\") +\n  scale_x_date(date_labels = \"%Y-%m\") +\n  theme_minimal()"
  },
  {
    "objectID": "source/pre/preprocessing.html#faecal-calprotectin",
    "href": "source/pre/preprocessing.html#faecal-calprotectin",
    "title": "Preprocessing",
    "section": "Faecal calprotectin",
    "text": "Faecal calprotectin\nFaecal calprotectin (FC), a marker of intestinal inflammation, has been obtained from two datasets. The first dataset has been curated by members of the Lees group whilst the second dataset is a direct extract from TRAK, a patient monitoring system used by NHS Lothian.\nIncorporating later extract\nData from these datasets has been merged and duplicates of data (same subject ID, measurement date, and recorded value) were removed. We also reduced the FC dataset to only describe subjects for whom IBD type and date of diagnosis are available for.\nFor the TRAK extract, times for test results are given in datetime format (where both date and time of the day are provided). The times have been dropped as this degree of granularity is not required. Duplicate tests (same id, date and test value) are removed here.\n\nCodefcal &lt;- fcal[, c(\n  \"ids\",\n  \"COLLECTION_DATE\",\n  \"TEST_DATA\",\n  \"sex\",\n  \"diagnosis\",\n  \"diagnosis_date\"\n)]\n\n# Subset to only include those that passed the earlier inclusion/exclusion\nfcal &lt;- subset(fcal, ids %in% dict$ids)\n\n# Collection dates include collection times which are not required. Discarding.\n\nfcal$COLLECTION_DATE &lt;- readr::parse_date(\n  stringr::str_split_fixed(fcal$COLLECTION_DATE, \" \", n = 2)[, 1],\n  format = \"%Y-%m-%d\"\n)\n\ncolnames(fcal)[1:3] &lt;- c(\"ids\", \"calpro_date\", \"calpro_result\")\n\nfcal &lt;- subset(fcal, ids %in% dict$ids)\nfcal &lt;- fcal %&gt;%\n  select(-diagnosis)\n\nfcal &lt;- merge(fcal,\n  dict[, c(\"ids\", \"diagnosis\", \"date.of.diag\")],\n  by = \"ids\",\n  all.x = TRUE\n)\n\n\nPre-processing of test results\n\nCode## Some values cannot be directly coerced as numeric\n\nfcal$calpro_result &lt;- plyr::mapvalues(\n  fcal$calpro_result,\n  from = c(\n    \"&lt;20\",\n    \"&lt;25\",\n    \"&lt;50\",\n    \"&gt;1250\",\n    \"&gt;2500\",\n    \"&gt;3000\",\n    \"&gt;6000\"\n  ),\n  to = c(\n    \"20\",\n    \"25\",\n    \"50\",\n    \"1250\",\n    \"2500\",\n    \"3000\",\n    \"6000\"\n  )\n)\n\n# Here, values that cannot be converted into a numeric value will be excluded\n# (they are converted to NA)\nfcal$calpro_result &lt;- as.numeric(fcal$calpro_result) # Remove error codes\nfcal &lt;- fcal[!is.na(fcal[, \"calpro_result\"]), ]\n\n# Apply limits of detection\nfcal[fcal[, \"calpro_result\"] &lt; 20, \"calpro_result\"] &lt;- 20\nfcal[fcal[, \"calpro_result\"] &gt; 1250, \"calpro_result\"] &lt;- 1250\n\n\nFC data can be both left and right censored. FC recorded as “&lt;20” were mapped to “20”. FC recorded as “&gt;1250”, “&gt;2500”, or “&gt;6000” were all mapped to “1250”. Any FC tests given an error code (e.g. marked as an insufficient sample by the laboratory) have been removed.\n\n\n\n\n\n\nMore information on FC censoring\n\n\n\n\n\nThe lower limit of detection is &lt;20 \\mu g/g (20 \\mu g of calprotectin per g of stool). By reducing the upper limit, it is possible to run more tests in parallel. As a higher throughput has been required over time, the upper threshold for tests has become lower. Initially test results over 6000 \\mu g/g were censored, then 2500 \\mu g/g and now 1250 \\mu g /g is the upper limit for FC tests. This change has resulted in minimal impact in clinics as 1250 \\mu g/g is still considered a high result. However, this change has potential implications for research.\n\n\n\n\nCodefcal %&gt;%\n  ggplot(aes(x = calpro_result)) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#9FD8CB\",\n    color = \"#517664\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"FCAL (µg/g)\") +\n  ylab(\"Density\") +\n  geom_vline(xintercept = 250, colour = \"red\")\n\n\n\n\n\n\nFigure 4: Density plot of FCAL measurements by observed value\n\n\n\n\nFC test results on the original measurement scale are heavily right-skewed towards 100 \\mu g/g. These data will be log transformed- resulting in the multi-modal distribution seen in Figure 5.\n\nCodefcal %&gt;%\n  ggplot(aes(x = log(calpro_result))) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#9FD8CB\",\n    color = \"#517664\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"log(FCAL (µg/g))\") +\n  ylab(\"Density\") +\n  geom_vline(xintercept = log(250), colour = \"red\")\n\n\n\n\n\n\nFigure 5: Density plot of logged FCAL test results\n\n\n\n\nRemoval of duplicate FCAL measurements\n\nCodeduplicated.ids &lt;- c()\n\nfor (id in unique(fcal$ids)) {\n  sub.fcal &lt;- subset(fcal, ids == id) # Get FC data for a subject\n  sub.fcal &lt;- sub.fcal[order(sub.fcal$calpro_date), ] # Order by dates\n  time.diff &lt;- diff(sub.fcal$calpro_date) # Find time between ordered dates\n  value.diff &lt;- diff(sub.fcal$calpro_result) # Find difference in observed values\n  # If two measurements are within 10 days of each other and have the same value\n  if (any(time.diff &lt;= 10 & value.diff == 0)) {\n    duplicated.ids &lt;- c(duplicated.ids, id)\n    # Remove suspected duplicates (taking into account difference is lagged)\n    sub.fcal &lt;- sub.fcal[c(TRUE, !(time.diff &lt;= 10 & value.diff == 0)), ]\n    # Remove data for subject with duplicates\n    fcal &lt;- subset(fcal, ids != id)\n    # Add non duplicated data back\n    fcal &lt;- rbind(fcal, sub.fcal)\n  }\n}\n\n\nGiven FC was retrospectively collected from observational data, it is possible duplicate tests have been recorded in the extract. As it is NHS Lothian policy to not test FC days apart, we can assume that any tests with the same observation within a small time frame are likely to be duplicates. This may occur when collection dates and testing dates have been used interchangeably.\nIf a subsequent FC test for a subject was dated within 10 days of a previous test and has the same observed value, this observation was dropped.\n\nCodehtmltools::p(paste(\n  \"There are\",\n  length(duplicated.ids),\n  \"subjects who appear to have duplicated FC measurements\"\n))\n\nThere are 22 subjects who appear to have duplicated FC measurements\n\n\nRetiming - part 1\nTime of FC measurements were retimed and scaled to be the number of years since IBD diagnosis.\n\nCode# Dates have already been converted to Date class by fix_date_char() for dict\nfcal$calpro_time &lt;- as.numeric(fcal$calpro_date - fcal$date.of.diag) / 365.25\n\nfcal %&gt;%\n  ggplot(aes(x = calpro_time, y = log(calpro_result), color = factor(ids))) +\n  geom_line(alpha = 0.2) +\n  geom_point(alpha = 0.6) +\n  theme_minimal() +\n  scale_color_manual(values = viridis::viridis(length(unique(fcal$ids)))) +\n  guides(color = \"none\") +\n  xlab(\"Time (years)\") +\n  ylab(\"Log(FCAL (µg/g))\") +\n  ggtitle(\"\")\n\n\n\n\n\n\nFigure 6: Spaghetti plot of FC trajectories (preprocessed)\n\n\n\n\nAfter retiming, it is clear some FC observations are earlier than diagnosis and in some cases substantially earlier (Figure 6). Tests taken close to the reported date of diagnosis are likely “early” as a result of diagnostic delay whereas tests from much earlier were likely requested due to other conditions.\nAs such, FC results earlier than 90 days prior to diagnosis will be discarded. If a subject has an FC within 90 days before diagnosis, then all of their FC tests will be retimed such that their earliest FC within this period is equal to 0 and all later measurements are shifted accordingly to maintain the same differences between measurement times.\n\nCodefcal &lt;- subset(fcal, calpro_time &gt;= -0.25)\n\n\nInclusion/exclusion: removal of subjects without a diagnostic FC test\nAs indicated in our inclusion/exclusion criteria, we reduce the dataset to only subjects with a diagnostic FC. This equates to subjects with at least one FCAL measurement within 3 months of diagnosis t \\leq 0.25.\n\nCodediagnostic &lt;- fcal %&gt;%\n  group_by(ids) %&gt;%\n  summarise(n = sum(calpro_time &lt; 0.25)) %&gt;%\n  subset(n &gt; 0)\n\nfcal &lt;- subset(fcal, ids %in% diagnostic$ids)\n\n\nAfter this exclusion, 1554 subjects remain in the data.\n\nCodedict.no.diag.fc &lt;- subset(dict, !(ids %in% diagnostic$ids))\n\n\n659 subjects which were excluded due to not having a diagnostic FC had a reported date of diagnosis of 1st January. Only year of diagnosis was likely available for these subjects.\n\nCode##The following code is used to save the cleaned data generated so far. \n\ndiag.time &lt;- c()\nfc.ids &lt;-  unique(fcal$ids)\n\nfor (id in fc.ids) {\n  temp &lt;- subset(fcal, ids == id)\n  temp &lt;- temp[order(temp$calpro_time), ]\n  diag.time &lt;- c(diag.time, temp[1, \"calpro_time\"])\n}\n\n\nfc.dist &lt;- data.frame(ids = fc.ids, diagnostic = diag.time)\n\nif (!dir.exists(paste0(prefix, \"processed\"))) {\n  dir.create(paste0(prefix, \"processed\"))\n}\n\nsaveRDS(fc.dist, paste0(prefix, \"processed/fc-diag-dist.RDS\"))\n\n\nRetiming - part 2\nHere, we show the distribution of the diagnostic FCAL measurements with respect to diagnosis date (in days).\n\nCodep &lt;- fcal %&gt;%\n  group_by(ids) %&gt;%\n  filter(calpro_time == min(calpro_time)) %&gt;%\n  ggplot(aes(x = calpro_time * 365.25)) +\n  geom_density(fill = \"#20A39E\", color = \"#187370\") +\n  theme_minimal() +\n  labs(\n    y = \"Density\",\n    x = \"Time from diagnosis to first faecal calprotectin (days)\"\n  ) +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nggsave(\"plots/fc-diagnostic-dist.png\",\n  p,\n  width = 16 * 2 / 3,\n  height = 6,\n  units = \"in\"\n)\n\n\nAlthough most diagnostic measurements were observed around the recorded diagnosis time (near zero), this is not always the case. As such, we decided to retime measurements/diagnosis time as described above (i.e. time = 0 matches the time of first available FCAL measurement). This is only applied to individuals for which the first available CRP is prior to the recorded diagnosis time.\n\nCode# Retime so that t_0 = 0.\nfor (id in unique(fcal$ids)) {\n  temp &lt;- subset(fcal, ids == id)\n  if (any(temp$calpro_time &lt; 0)) {\n    add &lt;- sort(temp$calpro_time)[1]\n    fcal[fcal[, \"ids\"] == id, \"calpro_time\"] &lt;-\n      fcal[fcal[, \"ids\"] == id, \"calpro_time\"] + abs(add)\n  }\n}\n\nlength(unique(fcal$ids))\n\n[1] 1554\n\nCodefcal %&gt;%\n  ggplot(aes(x = calpro_time, y = log(calpro_result), color = factor(ids))) +\n  geom_line(alpha = 0.2) +\n  geom_point(alpha = 0.6) +\n  theme_minimal() +\n  scale_color_manual(values = viridis::viridis(length(unique(fcal$ids)))) +\n  guides(color = \"none\") +\n  xlab(\"Time (years)\") +\n  ylab(\"Log(FCAL (µg/g))\") +\n  ggtitle(\"\")\n\n\n\n\n\n\nFigure 7: Spaghetti plot of FC trajectories (processed)\n\n\n\n\nAt this stage, we also exclude FCAL measurements recorded beyond 7 years post diagnosis.\n\nCodefcal &lt;- subset(fcal, calpro_time &lt;= 7)\nlength(unique(fcal$ids))\n\n[1] 1554\n\n\nAt this point, the data contains 11582 FCAL measurements across all 1554 individuals.\nInclusion/exclusion: a minimum number of FCAL measurements\nHere, we summarise the number of observations per individual (with and without considering censored values) as well as length of follow-up. The latter is defined as the difference (in years) between diagnosis time and the time of the latest FCAL measurement.\n\nCodecountsDF &lt;- fcal %&gt;%\n  group_by(ids) %&gt;%\n  summarise(\n    n.total = n(),\n    censored.left = sum(calpro_result == 20),\n    censored.right = sum(calpro_result == 1250),\n    n.noncensored = n.total - censored.left - censored.right,\n    n.negtime.nondiag = sum(calpro_time != 0 & calpro_date - date.of.diag &lt; 0),\n    followup = max(calpro_time)\n  )\n\n\n\nCodep1 &lt;- countsDF %&gt;%\n  ggplot(aes(x = n.total)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Measurements per subject\")\np2 &lt;- countsDF %&gt;%\n  ggplot(aes(x = followup)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Follow-up (years)\")\np3 &lt;- countsDF %&gt;%\n  ggplot(aes(y = n.total, x = followup)) +\n  geom_hex() +\n  xlab(\"Follow-up (years since diagnosis)\") +\n  ylab(\"Number of FC measurements\") +\n  theme_minimal() +\n  labs(fill = \"Count\")\n\np1 + p2 + p3 + plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\nFigure 8: (A) Histogram of the number of FCAL measurements per subject. (B) Histogram of FCAL follow-up per subject (before exclusions). (C) Scatterplot with number of FCAL measurements vs follow-up.\n\n\n\n\nSummary observations:\n\nThe number of FC measurements per subject is skewed towards low values. However, there are also subjects with many FC observations. These subjects were investigated and found to often have a complex disease course, such as acute severe ulcerative colitis, and required close monitoring as a result.\nWe do not directly require a minimum follow-up for a subject as this may bias our findings. For example, UC patients who undergo a proctocolectomy (surgical removal of the colon and rectum) are less likely to have FC measurements after their surgery than patients who did not require surgery. By applying criteria based on follow-up, we could indirectly exclude subjects based on disease outcomes.\nHowever, the requirement of at least 3 FCAL measurements (within 7 years from diagnosis) will indirectly remove individuals with a very short follow-up time.\n\nNote that our inclusion criteria requires at least 3 non-censored FCAL measurements per individual. As such, censoring needs to be taken into account before applying filtering out individuals.\n\nCodep1 &lt;- countsDF %&gt;%\n  ggplot(aes(x = n.noncensored)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Number of non-censored measurements per subject\")\n\np2 &lt;- countsDF %&gt;%\n  ggplot(aes(y = n.noncensored, x = followup)) +\n  geom_point(color = \"#FF4F79\", size = 2) +\n  xlab(\"Follow-up (years since diagnosis)\") +\n  ylab(\"Number of non-censored FCAL measurements\") +\n  theme_minimal() +\n  geom_hline(yintercept = 3)\n\np1 + p2 + plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\n\n\nCode# Number of individuals with at least 3 FCAL measurements\nsum(countsDF$n.total &gt;= 3)\n\n[1] 1155\n\nCode# Number of individuals with at least 3 non-censored FCAL measurements\nsum(countsDF$n.noncensored &gt;= 3)\n\n[1] 1036\n\nCode# Number of individuals with at least 3 non-censored FCAL measurements after\n# discarding non-diagnostic values with negative calpro_time\nsum(countsDF$n.noncensored - countsDF$n.negtime.nondiag &gt;= 3)\n\n[1] 1028\n\n\nThe following is used to select individuals with at least 3 non-censored FCAL measurements.\n\nCodefcal &lt;- fcal %&gt;%\n  subset(ids %in% countsDF$ids[countsDF$n.noncensored &gt;= 3])\n\nlength(unique(fcal$ids))\n\n[1] 1036\n\n\nThis leaves a cohort with 1036 individuals.\n\nCodep1 &lt;- countsDF %&gt;%\n  subset(n.noncensored &gt;= 3) %&gt;%\n  ggplot(aes(x = n.total)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Measurements per subject\")\np2 &lt;- countsDF %&gt;%\n  subset(n.noncensored &gt;= 3) %&gt;%\n  ggplot(aes(x = followup)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Follow-up (years)\")\np3 &lt;- countsDF %&gt;%\n  subset(n.noncensored &gt;= 3) %&gt;%\n  ggplot(aes(y = n.total, x = followup)) +\n  geom_hex() +\n  xlab(\"Follow-up (years since diagnosis)\") +\n  ylab(\"Number of FC measurements\") +\n  theme_minimal() +\n  labs(fill = \"Count\")\n\np1 + p2 + p3 + plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\nFigure 9: (A) Histogram of the number of FCAL measurements per subject. (B) Histogram of FCAL follow-up per subject (before exclusions). (C) Scatterplot with number of FCAL measurements vs follow-up. In all cases, only individuals with at least 3 non-censored measurements are included.\n\n\n\n\n\n\nCodefcal %&gt;%\n  select(ids) %&gt;%\n  table() %&gt;%\n  quantile(probs = c(0.25, 0.5, 0.75))\n\n  25%   50%   75% \n 5.75  9.00 13.00 \n\n\nRevisiting month of diagnosis\nAfter filtering by subjects who have a diagnostic FC available, January is no longer over-represented for month of diagnosis as we hypothesised (Figure 10)\n\nCodedict.temp &lt;- subset(dict, ids %in% unique(fcal$ids))\ndict.temp %&gt;%\n  ggplot(aes(x = as.factor(month(date.of.diag, label = TRUE)))) +\n  geom_bar(color = \"black\", fill = \"#FEC601\", linewidth = 0.3) +\n  theme_minimal() +\n  ylab(\"Frequency\") +\n  xlab(\"Month of IBD Diagnosis\")\n\n\n\n\n\n\nFigure 10: Bar plot of month of diagnosis"
  },
  {
    "objectID": "source/pre/preprocessing.html#c-reactive-protein",
    "href": "source/pre/preprocessing.html#c-reactive-protein",
    "title": "Preprocessing",
    "section": "C-reactive protein",
    "text": "C-reactive protein\n\nCodecrp &lt;- crp[, c(\"ids\", \"COLLECTION_DATE\", \"TEST_DATA\")] %&gt;%\n  subset(ids %in% dict$ids)\n\n# Collection dates include collection times which are not required. Discarding.\ncrp$COLLECTION_DATE &lt;- readr::parse_date(\n  stringr::str_split_fixed(crp$COLLECTION_DATE, \" \", n = 2)[, 1],\n  format = \"%Y-%m-%d\"\n)\n\ncolnames(crp) &lt;- c(\"ids\", \"crp_date\", \"crp_result\")\n\ncrp &lt;- merge(crp,\n  dict[, c(\"ids\", \"diagnosis\")],\n  by = \"ids\",\n  all.x = TRUE\n)\n\n\nC-reactive protein (CRP) is a blood-based marker of inflammation. Unlike FCAL, which is highly specific to gastrointestinal inflammation, CRP levels are indicative of overall inflammation and are more likely to be affected by extra-intestinal factors such as infections. However, patient adherence to CRP testing is very strong, and CRP has seen historic usage in the field of IBD. Although CRP has been used for many years, we unfortunately only have test results from as early as 2008 due to the transition towards using TRAK for storing CRP results instead of the previous system.\nAs there is only one extract for CRP data (obtained from TRAK), merging multiple datasets is not required. As with the FCAL data, the recorded time of day for each test has been discarded in favour of the date. Any potential duplicate results have been removed.\nPre-processing of test results\n\nCodecrp$crp_result &lt;- as.numeric(\n  plyr::mapvalues(\n    crp$crp_result,\n    from = c(\n      \"&lt;0.2\", \"&lt;1\", \"&lt;1.\", \"&lt;1.0\", \"&lt;2\", \"&lt;3\", \"&lt;3.0\", \"&lt;5\",\n      \"&gt;90\", \"&gt;320\"\n    ),\n    to = c(1, 1, 1, 1, 2, 3, 3, 5, 90, 320)\n  )\n)\n\n# Lower-bound censoring\ncrp &lt;- crp %&gt;%\n  mutate(crp_result = if_else(crp_result &lt; 1, 1, crp_result))\n\n# Remove error test results\ncrp &lt;- crp[!is.na(crp[, \"crp_result\"]), ]\n# Map numerical &lt;1 test results (e.g 0.2) to 1.\n\n\nCRP is left-censored, but does not appear to be right-censored. Multiple cut-offs are reported (1.1, 1.6, 2, 3, 3.5, 4, 5) with there also being variations for how &lt; 1mg/L is reported (1.6, 2, 3). We map every observation &lt; 1 to 1 and map &lt;2, &lt;3, and &lt; 5 to 2, 3, and 5 respectively. Any failed tests (e.g due to contamination or an insufficient sample being provided) are discarded. As such, 1mg/L is used as a left censoring value for CRP.\nAs can be seen in Figure 11, extremely elevated CRP has been observed in some cases. These observations are physiologically valid. However, these data may skew our models and may be candidates for removal.\n\nCodecrp %&gt;%\n  ggplot(aes(x = crp_result)) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#FFC800\",\n    color = \"#FF8427\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"CRP (mg/L)\") +\n  ylab(\"Density\")\n\n\n\n\n\n\nFigure 11: Density plot of FC measurements by observed value\n\n\n\n\nAs with the FC data, the CRP data is also log transformed (Figure 12).\n\nCodecrp %&gt;%\n  ggplot(aes(x = log(crp_result))) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#FFC800\",\n    color = \"#FF8427\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"log(CRP (mg/L))\") +\n  ylab(\"Density\")\n\n\n\n\n\n\nFigure 12: Density plot of logged CRP test results\n\n\n\n\nObserving Figure 12, it would appear the influence of extremely elevated CRP results will be minimal.\nRemoval of duplicates\n\nCodecrp &lt;- crp %&gt;% distinct(ids,\n  crp_date,\n  crp_result,\n  .keep_all = TRUE\n)\n\n\nAs multiple CRP measurements are possible within a short time-frame, we only consider as duplicates those with an exact match by ids, crp_date and crp_result.\nRetiming - part 1\nAs with the FCAL data, the times of CRP measurements are retimed and scaled to be the number of years since IBD diagnosis.\n\nCodecrp &lt;- merge(crp, dict[, c(\"ids\", \"date.of.diag\")],\n  by = \"ids\", all.x = TRUE, all.y = FALSE\n)\n\n# Dates have already been converted to Date class by fix_date_char() for dict\ncrp$crp_time &lt;- as.numeric(crp$crp_date - crp$date.of.diag) / 365.25\n\ncrp %&gt;%\n  ggplot(aes(x = crp_time, y = log(crp_result), color = factor(ids))) +\n  geom_line(alpha = 0.2) +\n  geom_point(alpha = 0.3) +\n  theme_minimal() +\n  scale_color_manual(values = viridis::viridis(length(unique(crp$ids)))) +\n  guides(color = \"none\") +\n  xlab(\"Time (years)\") +\n  ylab(\"Log(CRP (mg/L))\") +\n  ggtitle(\"\")\n\n\n\n\n\n\nFigure 13: Spaghetti plot of CRP trajectories (preprocessed)\n\n\n\n\nAs should be expected given the ubiquitous nature of CRP testing, many CRP observations are earlier than diagnosis (Figure 13). Tests taken close to reported date of diagnosis are likely “early” as a result of diagnostic delay whereas tests from much earlier were likely requested due to other conditions.\nAs with FCAL, CRP results earlier than 90 days prior to diagnosis will be discarded. If a subject has a CRP within 90 days before diagnosis, then all of their CRP tests will be retimed such that their earliest CRP within this period is equal to 0 and all later measurements are shifted accordingly to maintain the same differences between measurement times.\n\n\n\n\n\n\nNote\n\n\n\nThis may mean t_0 corresponds to slightly different dates across FCAL and CRP for the same subject.\n\n\nWe also reduce the dataset to only subjects with a diagnostic CRP which equates to subjects with a CRP measurement within 3 months of diagnosis t \\leq 0.25\n\nCodecrp &lt;- subset(crp, crp_time &gt;= -0.25)\n\n\nInclusion/exclusion: removal of subjects without a diagnostic CRP test\nAs indicated in our inclusion/exclusion criteria, we reduce the dataset to only subjects with a diagnostic FC. This equates to subjects with at least one FCAL measurement within 3 months of diagnosis t \\leq 0.25.\n\nCodediagnostic &lt;- crp %&gt;%\n  group_by(ids) %&gt;%\n  summarise(n = sum(crp_time &lt; 0.25)) %&gt;%\n  subset(n &gt; 0)\n\ncrp &lt;- subset(crp, ids %in% diagnostic$ids)\n\n\nAfter this exclusion, 2406 remain in the data.\n\nCodediag.time &lt;- c()\ncrp.ids &lt;-  unique(crp$ids)\n\nfor (id in crp.ids) {\n  temp &lt;- subset(crp, ids == id)\n  temp &lt;- temp[order(temp$crp_time), ]\n  diag.time &lt;- c(diag.time, temp[1, \"crp_time\"])\n}\n\n\ncrp.dist &lt;- data.frame(ids = crp.ids, diagnostic = diag.time)\n\nsaveRDS(crp.dist, paste0(prefix, \"processed/crp-diag-dist.RDS\"))\n\n\n\nCodedict.no.diag.crp &lt;- subset(dict, !(ids %in% diagnostic$ids))\n\n\n606 subjects which were excluded due to not having a diagnostic crp had a reported date of diagnosis of 1st January.\nRetiming - part 2\nHere, we show the distribution of the diagnostic CRP measurements with respect to diagnosis date (in days).\n\nCodep &lt;- crp %&gt;%\n  group_by(ids) %&gt;%\n  filter(crp_time == min(crp_time)) %&gt;%\n  ggplot(aes(x = crp_time * 365.25)) +\n  geom_density(fill = \"#415A77\", color = \"#1B263B\") +\n  theme_minimal() +\n  labs(\n    y = \"Density\",\n    x = \"Time from diagnosis to first CRP (days)\"\n  ) +\n  geom_vline(xintercept = 0, linetype = \"dashed\", color = \"red\")\n\nggsave(\"plots/crp-diagnostic-dist.png\",\n  p,\n  width = 16 * 2 / 3,\n  height = 6,\n  units = \"in\"\n)\n\n\nSimilar to what was observed for FC, most diagnostic measurements were around the recorded diagnosis time (near zero). Here, we also retime measurements/diagnosis time as described above (i.e. time = 0 matches the time of first available CRP measurement). This is only applied to individuals for which the first available CRP is prior to the recorded diagnosis time.\n\nCode# Retime so that t_0 = 0.\nfor (id in unique(crp$ids)) {\n  temp &lt;- subset(crp, ids == id)\n  if (any(temp$crp_time &lt; 0)) {\n    add &lt;- sort(temp$crp_time)[1]\n    crp[crp[, \"ids\"] == id, \"crp_time\"] &lt;-\n      crp[crp[, \"ids\"] == id, \"crp_time\"] + abs(add)\n  }\n}\n\nlength(unique(crp$ids))\n\n[1] 2406\n\nCodecrp %&gt;%\n  ggplot(aes(x = crp_time, y = log(crp_result), color = factor(ids))) +\n  geom_line(alpha = 0.2) +\n  geom_point(alpha = 0.3) +\n  theme_minimal() +\n  scale_color_manual(values = viridis::viridis(length(unique(crp$ids)))) +\n  guides(color = \"none\") +\n  xlab(\"Time (years)\") +\n  ylab(\"Log(CRP (mg/L))\") +\n  ggtitle(\"\")\n\n\n\n\n\n\n\nAt this stage, we also exclude CRP measurements recorded beyond 7-years post diagnosis.\n\nCodecrp &lt;- subset(crp, crp_time &lt;= 7)\nlength(unique(crp$ids))\n\n[1] 2406\n\n\nAt this point, the data contains 10545 FCAL measurements across all 1036 individuals.\nAdditional pre-processing\nHere, we summarise the number of observations per individual (with and without considering censored values) as well as length of follow-up. The latter is defined as the difference (in years) between diagnosis time and the time of the latest CRP measurement.\n\nCodecountsDF &lt;- crp %&gt;%\n  group_by(ids) %&gt;%\n  summarise(\n    n.total = n(),\n    censored.left = sum(crp_result == 1),\n    n.noncensored = n.total - censored.left,\n    n.negtime.nondiag = sum(crp_time != 0 & crp_date - date.of.diag &lt; 0),\n    followup = max(crp_time)\n  )\n\np1 &lt;- countsDF %&gt;%\n  ggplot(aes(x = n.total)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Measurements per subject\")\np2 &lt;- countsDF %&gt;%\n  ggplot(aes(x = followup)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Follow-up (years)\")\np3 &lt;- countsDF %&gt;%\n  ggplot(aes(y = n.total, x = followup)) +\n  geom_hex() +\n  xlab(\"Follow-up (years since diagnosis)\") +\n  ylab(\"Number of CRP measurements\") +\n  theme_minimal() +\n  labs(fill = \"Count\")\n\np1 + p2 + p3 + plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\nFigure 14: (A) Histogram of the number of CRP measurements per subject. (B) Histogram of CRP follow-up per subject (before exclusions). (C) Scatterplot with number of CRP measurements vs follow-up.\n\n\n\n\nOur observations are very similar to what we had for FCAL. However, as CRP measurement frequency is higher, we find a lower proportion of individuals with a low follow-up time.\nAs CRP is not specific to gastrointestinal inflammation, a variety of factors (e.g. infection) can affect the measurements. To focus on long-term trends, further processing was applied to smooth out short-term fluctuations. Measurements were grouped into intervals of t: [0, 0.5), [0.5, 1.5), [1.5, 2.5), [2.5, 3.5), [3.5, 4.5), [4.5, 5.5), [5.5, 7], where t = 0 (years) is the time of diagnosis. The median CRP for each interval was calculated for each subject and used as input for subsequent analyses. The centre of each interval was used as the corresponding observation time.\n\nCodeid.list &lt;- unique(crp$ids)\ncrp.ma &lt;- matrix(NA, nrow = length(id.list), ncol = 7)\n\nfor (i in seq_along(id.list)) {\n  subject_data &lt;- subset(crp, ids == id.list[i])\n  for (j in seq(0, 6)) {\n    if (j == 6) {\n      sub.obs &lt;- subset(\n        subject_data,\n        crp_time &gt;= j - 0.5 & crp_time &lt;= j + 1\n      )\n    } else {\n      sub.obs &lt;- subset(\n        subject_data,\n        crp_time &gt;= j - 0.5 & crp_time &lt; j + 0.5\n      )\n    }\n    if (nrow(sub.obs) &gt; 0) {\n      crp.ma[i, j + 1] &lt;- median(sub.obs$crp_result)\n    }\n  }\n}\nrownames(crp.ma) &lt;- id.list\n\n# Convert back to a long-format dataset and rename columns\ncrp.ma &lt;- reshape2::melt(t(crp.ma), id.vars = row.names(crp.ma), na.rm = TRUE)\ncolnames(crp.ma) &lt;- c(\"crp_time\", \"ids\", \"crp_result\")\ncrp.ma &lt;- crp.ma[, c(2, 3, 1)]\n\n# Reset the time to start at zero\ncrp.ma$crp_time &lt;- crp.ma$crp_time - 1\n\n# Take into account uneven spacing at start and end\ncrp.ma$crp_time &lt;- plyr::mapvalues(crp.ma$crp_time,\n  from = c(0, 6),\n  to = c(0.25, 6.25)\n)\n\n# Add diagnosis type back\ncrp.ma &lt;- merge(crp.ma, dict[, -3], by = \"ids\", all.x = TRUE, all.y = FALSE)\n\n\nInclusion/exclusion: a minimum number of CRP measurements\nNote that our inclusion criteria requires at least 3 CRP measurements per individual. This is applied after the additional pre-processing applied in the previous section. Here, we re-calculate relevant summary statistics.\n\nCodecountsDF &lt;- crp.ma %&gt;%\n  group_by(ids) %&gt;%\n  summarise(\n    n.total = n(),\n    censored.left = sum(crp_result == 0), # 0 because it was log transformed\n    n.noncensored = n.total - censored.left,\n    followup = max(crp_time),\n    crp.var = var(crp_result, na.rm = TRUE)\n  )\n\np1 &lt;- countsDF %&gt;%\n  ggplot(aes(x = n.total)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Measurements per subject\")\np2 &lt;- countsDF %&gt;%\n  ggplot(aes(x = followup)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Follow-up (years)\")\np3 &lt;- countsDF %&gt;%\n  ggplot(aes(y = n.total, x = followup)) +\n  geom_hex() +\n  xlab(\"Follow-up (years since diagnosis)\") +\n  ylab(\"Number of CRP measurements\") +\n  theme_minimal() +\n  labs(fill = \"Count\")\n\np1 + p2 + p3 + plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\nFigure 15: (A) Histogram of the number of CRP measurements per subject. (B) Histogram of CRP follow-up per subject (before exclusions). (C) Scatterplot with number of CRP measurements vs follow-up.\n\n\n\n\n\nCode# Number of individuals with at least 3 CRP measurements\nsum(countsDF$n.total &gt;= 3)\n\n[1] 1939\n\nCode# Number of individuals with at least 3 CRP measurements and non zero variance\nsum(countsDF$n.total &gt;= 3 & countsDF$crp.var != 0)\n\n[1] 1838\n\nCode# Number of individuals with at least 3 non-censored FCAL measurements\nsum(countsDF$n.noncensored &gt;= 3)\n\n[1] 1939\n\n\nThe following is used to select individuals with at least 3 CRP measurements and non-zero variance.\n\nCodecrp.ma.0 &lt;- crp.ma %&gt;%\n  subset(ids %in% countsDF$ids[countsDF$n.total &gt;= 3 & countsDF$crp.var == 0])\nsaveRDS(crp.ma.0, paste0(prefix, \"processed/crp-ma-0.RDS\"))\n\ncrp.ma &lt;- crp.ma %&gt;%\n  subset(ids %in% countsDF$ids[countsDF$n.total &gt;= 3 & countsDF$crp.var != 0])\n\n\nThis leaves a cohort with 1838 individuals.\n\n\nCodep1 &lt;- countsDF %&gt;%\n  subset(n.total &gt;= 3 & crp.var != 0) %&gt;%\n  ggplot(aes(x = n.total)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Measurements per subject\")\np2 &lt;- countsDF %&gt;%\n  subset(n.total &gt;= 3 & crp.var != 0) %&gt;%\n  ggplot(aes(x = followup)) +\n  geom_histogram(color = \"black\", fill = \"#5BBA6F\", binwidth = 1) +\n  theme_minimal() +\n  ylab(\"Count\") +\n  xlab(\"Follow-up (years)\")\np3 &lt;- countsDF %&gt;%\n  subset(n.total &gt;= 3 & crp.var != 0) %&gt;%\n  ggplot(aes(y = n.total, x = followup)) +\n  geom_point(color = \"#FF4F79\", size = 2) +\n  xlab(\"Follow-up (years since diagnosis)\") +\n  ylab(\"Number of FCAL measurements\") +\n  theme_minimal() +\n  geom_hline(yintercept = 3)\n\np1 + p2 + p3 + plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\nFigure 16: (A) Histogram of the number of CRP measurements per subject. (B) Histogram of FCAL follow-up per subject (before exclusions). (C) Scatterplot with number of CRP measurements vs follow-up. In all cases, only individuals with at least 3 measurements and non-zero variance are included.\n\n\n\n\nAdditional pre-processing\nSome subjects have the same median log-transformed CRP across all of their observations, effectively having a variance of 0. These subjects will be extracted and considered as their own cluster, as they may cause numerical issues when model fitting but remain of note.\n\nCodep1 &lt;- crp.ma %&gt;%\n  ggplot(aes(x = crp_result)) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#EE92C2\",\n    color = \"#7B5D6F\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"CRP (mg/L)\") +\n  ylab(\"Density\")\n\np2 &lt;- crp.ma %&gt;%\n  ggplot(aes(x = log(crp_result))) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#ADF1D2\",\n    color = \"#50635A\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"log(CRP (mg/L))\") +\n  ylab(\"Density\")\n\nprint(p1 + p2)\n\n\n\n\n\n\nCodeggsave(\"plots/crp-dist-ma.pdf\", p1 + p2, width = 8, height = 4.5, units = \"in\")\n\n\nThere are 9898 total data points after the additional preprocessing describing 1838 subjects.\nCodecrp.ma %&gt;%\n  select(ids) %&gt;%\n  table() %&gt;%\n  quantile(probs = c(0.25, 0.5, 0.75))\n\n\nTable 3: Quantiles for number of CRP observations per subject after additional preprocessing.\n\n\n25% 50% 75% \n  4   6   7 \n\n\n\n\nRevisiting month of diagnosis\nAfter filtering by subjects who have a diagnostic CRP available, January is no longer over-represented for month of diagnosis. This is a comparable finding to FC (Figure 10).\n\nCodedict.temp &lt;- subset(dict, ids %in% unique(fcal$ids))\ndict.temp %&gt;%\n  ggplot(aes(x = as.factor(month(date.of.diag, label = TRUE)))) +\n  geom_bar(color = \"black\", fill = \"#FEC601\", linewidth = 0.3) +\n  theme_minimal() +\n  ylab(\"Frequency\") +\n  xlab(\"Month of IBD Diagnosis\")\n\n\n\n\n\n\nFigure 17: Bar plot of month of diagnosis"
  },
  {
    "objectID": "source/pre/preprocessing.html#updated-density-plots",
    "href": "source/pre/preprocessing.html#updated-density-plots",
    "title": "Preprocessing",
    "section": "Updated density plots",
    "text": "Updated density plots\nThe following plots are updated versions of previous density plots (Figure 4, Figure 5, Figure 11 and Figure 12). These plots only include subjects who have met the inclusion criteria.\n\nCodep1 &lt;- fcal %&gt;%\n  ggplot(aes(x = calpro_result)) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#2E86AB\",\n    color = \"#07004D\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"FC (µg/g)\") +\n  ylab(\"Density\")\nprint(p1)\n\n\n\n\n\n\nFigure 18: Updated density plot of FC measurements by observed value\n\n\n\n\n\nCodep2 &lt;- fcal %&gt;%\n  ggplot(aes(x = log(calpro_result))) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#F7A072\",\n    color = \"#936136\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"log(FC (µg/g))\") +\n  ylab(\"Density\")\nprint(p2)\n\nggsave(\"plots/fcal-dist.pdf\", p1 + p2, width = 8, height = 4.5, units = \"in\")\n\n\n\n\n\n\nFigure 19: Updated density plot of logged FC test results\n\n\n\n\n\nCodep3 &lt;- crp %&gt;%\n  ggplot(aes(x = crp_result)) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#EE92C2\",\n    color = \"#7B5D6F\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"CRP (mg/L)\") +\n  ylab(\"Density\")\nprint(p3)\n\n\n\n\n\n\nFigure 20: Updated density plot of CRP measurements by observed value\n\n\n\n\n\nCodep4 &lt;- crp %&gt;%\n  ggplot(aes(x = log(crp_result))) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#ADF1D2\",\n    color = \"#50635A\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"log(CRP (mg/L))\") +\n  ylab(\"Density\")\nprint(p4)\nggsave(\"plots/crp-dist.pdf\", p3 + p4, width = 8, height = 4.5, units = \"in\")\n\n\n\n\n\n\nFigure 21: Updated density plot of logged CRP test results\n\n\n\n\n\nCodep5 &lt;- crp.ma %&gt;%\n  ggplot(aes(x = crp_result)) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#EE92C2\",\n    color = \"#7B5D6F\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"Processed CRP (mg/L)\") +\n  ylab(\"Density\")\nprint(p5)\n\n\n\n\n\n\nFigure 22: Updated density plot of CRP after additional preprocessing\n\n\n\n\n\nCodep6 &lt;- crp.ma %&gt;%\n  ggplot(aes(x = log(crp_result))) +\n  geom_density(\n    linewidth = 0.8,\n    alpha = 0.5,\n    fill = \"#ADF1D2\",\n    color = \"#50635A\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.y = element_blank()) +\n  xlab(\"log(processed CRP (mg/L))\") +\n  ylab(\"Density\")\nprint(p6)\nggsave(\"plots/crp-processed-dist.pdf\",\n  p5 + p6,\n  width = 8,\n  height = 4.5,\n  units = \"in\"\n)\n\n\np &lt;- (p1 + p2) / (p5 + p6) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(size = 18, face = \"bold\"))\n\n\nggsave(\"plots/Sup-Figure-1.pdf\",\n  p,\n  width = 8,\n  height = 8,\n  units = \"in\"\n)\n\n\n\n\n\n\nFigure 23: Updated density plot of logged CRP after additional preprocessing\n\n\n\n\n\nCode# Number of CRP observations (unprocessed) per subject\ncrp %&gt;%\n  filter(ids %in% unique(crp.ma$ids)) %&gt;%\n  select(ids) %&gt;%\n  table() %&gt;%\n  quantile(probs = c(0.25, 0.5, 0.75))\n\n25% 50% 75% \n 10  20  36 \n\n\n\nCodecrp %&gt;%\n  filter(ids %in% unique(crp.ma$ids)) %&gt;%\n  select(ids) %&gt;%\n  nrow()\n\n[1] 49364\n\n\n\nCode# Number of CRP observations (unprocessed) per subject for the overlap cohort\ncrp %&gt;%\n  filter(ids %in% unique(crp.ma$ids) & ids %in% unique(fcal$ids)  ) %&gt;%\n  select(ids) %&gt;%\n  table() %&gt;%\n  quantile(probs = c(0.25, 0.5, 0.75))\n\n25% 50% 75% \n 14  26  43"
  },
  {
    "objectID": "source/pre/preprocessing.html#data-saving",
    "href": "source/pre/preprocessing.html#data-saving",
    "title": "Preprocessing",
    "section": "Data saving",
    "text": "Data saving\nThe processed subject dictionary and FC and CRP datasets have been saved to files, so they can be used for the primary analysis.\n\nCodeif (!dir.exists(paste0(prefix, \"processed\"))) {\n  dir.create(paste0(prefix, \"processed\"))\n}\n\nfcal$calpro_result &lt;- log(fcal$calpro_result)\ncrp.ma$crp_result &lt;- log(crp.ma$crp_result)\n\n\nsaveRDS(dict, paste0(prefix, \"processed/dict-initial.RDS\"))\nsaveRDS(fcal, paste0(prefix, \"processed/fcal.RDS\"))\nsaveRDS(crp, paste0(prefix, \"processed/crp.RDS\"))\nsaveRDS(crp.ma, paste0(prefix, \"processed/median-crp.RDS\"))\n\n\n\nCodefcal %&gt;%\n  filter(ids %in% crp.ma$ids) %&gt;%\n  select(ids) %&gt;%\n  table() %&gt;%\n  quantile(probs = c(0.25, 0.5, 0.75))\n\n25% 50% 75% \n  6   9  14 \n\n\n\nCodecrp.ma %&gt;%\n  filter(ids %in% fcal$ids) %&gt;%\n  select(ids) %&gt;%\n  table() %&gt;%\n  quantile(probs = c(0.25, 0.5, 0.75))\n\n25% 50% 75% \n  5   6   7"
  },
  {
    "objectID": "source/pre/preprocessing.html#acknowledgments",
    "href": "source/pre/preprocessing.html#acknowledgments",
    "title": "Preprocessing",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nThis work is funded by the Medical Research Council & University of Edinburgh via a Precision Medicine PhD studentship (MR/N013166/1, to NC-C)."
  },
  {
    "objectID": "source/pre/preprocessing.html#author-contributions",
    "href": "source/pre/preprocessing.html#author-contributions",
    "title": "Preprocessing",
    "section": "Author contributions",
    "text": "Author contributions\nNC-C performed the processing and wrote the text. NP, ML, curated and provided datasets. KM-G, CWL, and CAV provided supervisory support and assisted with revisions."
  },
  {
    "objectID": "source/pre/preprocessing.html#references",
    "href": "source/pre/preprocessing.html#references",
    "title": "Preprocessing",
    "section": "References",
    "text": "References\n\n\nJenkinson, P W, N Plevris, S Siakavellas, M Lyons, I D Arnott, D Wilson, A J M Watson, G-R Jones, and C W Lees. 2020. “Temporal Trends in Surgical Resection Rates and Biologic Prescribing in Crohn’s Disease: A Population-Based Cohort Study.” Journal of Crohns and Colitis 14 (9): 1241–47. https://doi.org/10.1093/ecco-jcc/jjaa044.\n\n\nJones, Gareth-Rhys, Mathew Lyons, Nikolas Plevris, Philip W Jenkinson, Cathy Bisset, Christopher Burgess, Shahida Din, et al. 2019. “IBD Prevalence in Lothian, Scotland, Derived by Capture-Recapture Methodology.” Gut 68 (11): 1953–60. https://doi.org/10.1136/gutjnl-2019-318936."
  },
  {
    "objectID": "source/pre/preprocessing.html#reuse",
    "href": "source/pre/preprocessing.html#reuse",
    "title": "Preprocessing",
    "section": "Reuse",
    "text": "Reuse\nLicensed by CC BY unless otherwise stated."
  },
  {
    "objectID": "source/pre/preprocessing.html#session-info",
    "href": "source/pre/preprocessing.html#session-info",
    "title": "Preprocessing",
    "section": "Session info",
    "text": "Session info\n\nCodepander(sessionInfo())\n\nR version 4.4.3 (2025-02-28)\nPlatform: aarch64-apple-darwin20\nlocale: en_GB.UTF-8||en_GB.UTF-8||en_GB.UTF-8||C||en_GB.UTF-8||en_GB.UTF-8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: patchwork(v.1.3.0), datefixR(v.1.7.0), pander(v.0.6.6), knitr(v.1.49), lubridate(v.1.9.4), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.4), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): viridis(v.0.6.5), generics(v.0.1.3), lattice(v.0.22-6), stringi(v.1.8.4), hms(v.1.1.3), digest(v.0.6.37), magrittr(v.2.0.3), evaluate(v.1.0.3), grid(v.4.4.3), timechange(v.0.3.0), fastmap(v.1.2.0), plyr(v.1.8.9), jsonlite(v.1.9.1), gridExtra(v.2.3), viridisLite(v.0.4.2), scales(v.1.3.0), textshaping(v.1.0.0), cli(v.3.6.4), rlang(v.1.1.5), munsell(v.0.5.1), withr(v.3.0.2), yaml(v.2.3.10), tools(v.4.4.3), parallel(v.4.4.3), reshape2(v.1.4.4), tzdb(v.0.4.0), colorspace(v.2.1-1), vctrs(v.0.6.5), R6(v.2.6.1), lifecycle(v.1.0.4), htmlwidgets(v.1.6.4), ragg(v.1.3.3), pkgconfig(v.2.0.3), hexbin(v.1.28.5), pillar(v.1.10.1), gtable(v.0.3.6), glue(v.1.8.0), Rcpp(v.1.0.14), systemfonts(v.1.2.1), xfun(v.0.51), tidyselect(v.1.2.1), farver(v.2.1.2), htmltools(v.0.5.8.1), rmarkdown(v.2.29), labeling(v.0.4.3) and compiler(v.4.4.3)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Analysis for Large-scale clustering of longitudinal faecal calprotectin and C-reactive protein profiles in inflammatory bowel disease",
    "section": "",
    "text": "This website presents the analyses carried out for Large-scale clustering of longitudinal faecal calprotectin and C-reactive protein profiles in inflammatory bowel disease by Constantine-Cooke et al. In this work, we expand upon our previous research which clustered faecal calprotectin (FC) profiles for a subset of Crohn’s disease patients (Constantine-Cooke et al. 2023) by clustering FC and C-reactive protein (CRP) profiles. Moreover, we extend our modelling to include subjects with Crohn’s disease, ulcerative colitis, and inflammatory bowel disease unclassified identified via the Lothian IBD Registry.\nThe analysis pipeline for this project can be categorised into three stages:\n\n\nBefore model fitting, where data obtained from the NHS are reformatted and any data quality issues are dealt with. Baseline data (i.e data available at diagnosis) were also explored in descriptive analyses as part of this stage.\n\nModel fitting, where latent class mixed models are fitted with differing numbers of assumed clusters and the most appropriate models are chosen for FC and CRP.\n\nAfter model fitting, where post hoc associations between baseline data and cluster membership are explored. The relationship between FC and CRP clustering is also analysed."
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "Analysis for Large-scale clustering of longitudinal faecal calprotectin and C-reactive protein profiles in inflammatory bowel disease",
    "section": "",
    "text": "This website presents the analyses carried out for Large-scale clustering of longitudinal faecal calprotectin and C-reactive protein profiles in inflammatory bowel disease by Constantine-Cooke et al. In this work, we expand upon our previous research which clustered faecal calprotectin (FC) profiles for a subset of Crohn’s disease patients (Constantine-Cooke et al. 2023) by clustering FC and C-reactive protein (CRP) profiles. Moreover, we extend our modelling to include subjects with Crohn’s disease, ulcerative colitis, and inflammatory bowel disease unclassified identified via the Lothian IBD Registry.\nThe analysis pipeline for this project can be categorised into three stages:\n\n\nBefore model fitting, where data obtained from the NHS are reformatted and any data quality issues are dealt with. Baseline data (i.e data available at diagnosis) were also explored in descriptive analyses as part of this stage.\n\nModel fitting, where latent class mixed models are fitted with differing numbers of assumed clusters and the most appropriate models are chosen for FC and CRP.\n\nAfter model fitting, where post hoc associations between baseline data and cluster membership are explored. The relationship between FC and CRP clustering is also analysed."
  },
  {
    "objectID": "index.html#using-this-website",
    "href": "index.html#using-this-website",
    "title": "Analysis for Large-scale clustering of longitudinal faecal calprotectin and C-reactive protein profiles in inflammatory bowel disease",
    "section": "Using this website",
    "text": "Using this website\nThe navigation menu at the top of the page will allow you to navigate through the steps of the analysis pipeline. The code button at the top of each page can be used to show all code blocks instead of clicking on the code buttons for each individual block of code. Moving the mouse pointer over any citations will produce a pop up box with reference details. Clicking on the citation will link to the bibliography at the bottom of the page."
  },
  {
    "objectID": "index.html#software",
    "href": "index.html#software",
    "title": "Analysis for Large-scale clustering of longitudinal faecal calprotectin and C-reactive protein profiles in inflammatory bowel disease",
    "section": "Software",
    "text": "Software\nAll analyses have been generated using R version 4.4.3.\nPlease see the Session Information sections at the end of each page for the R packages and the respective versions used.\nThis website has been generated using the Quarto scientific publishing system built on top of pandoc. A list of major components used by Quarto can be found here"
  },
  {
    "objectID": "source/pre/baseline.html",
    "href": "source/pre/baseline.html",
    "title": "Baseline data",
    "section": "",
    "text": "Codeset.seed(123)\nif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\nlibrary(tidyverse)\nsuppressPackageStartupMessages(library(patchwork))\nlibrary(gt)\nsuppressPackageStartupMessages(library(datefixR))\nsuppressPackageStartupMessages(library(table1))\nlibrary(readxl)\n\nlibrary(survival)\nlibrary(survminer)\nlibrary(pander)\n\n\nThis page provides descriptive analyses of the cohort at baseline, the time of IBD diagnosis. Following clustering based on FC or CRP trajectories, associations will be explored between cluster membership and these data.\nAs FC and CRP are analysed independently, the data is split into subjects who met the criteria for FC and CRP analyses. The colours used in the plot are specific to either the FC or the CRP cohorts which are also under separate tabs."
  },
  {
    "objectID": "source/pre/baseline.html#introduction",
    "href": "source/pre/baseline.html#introduction",
    "title": "Baseline data",
    "section": "",
    "text": "Codeset.seed(123)\nif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\nlibrary(tidyverse)\nsuppressPackageStartupMessages(library(patchwork))\nlibrary(gt)\nsuppressPackageStartupMessages(library(datefixR))\nsuppressPackageStartupMessages(library(table1))\nlibrary(readxl)\n\nlibrary(survival)\nlibrary(survminer)\nlibrary(pander)\n\n\nThis page provides descriptive analyses of the cohort at baseline, the time of IBD diagnosis. Following clustering based on FC or CRP trajectories, associations will be explored between cluster membership and these data.\nAs FC and CRP are analysed independently, the data is split into subjects who met the criteria for FC and CRP analyses. The colours used in the plot are specific to either the FC or the CRP cohorts which are also under separate tabs."
  },
  {
    "objectID": "source/pre/baseline.html#descriptive-analyses",
    "href": "source/pre/baseline.html#descriptive-analyses",
    "title": "Baseline data",
    "section": "Descriptive analyses",
    "text": "Descriptive analyses\n\nCodefcal &lt;- readRDS(paste0(prefix, \"processed/fcal.RDS\"))\nfcal.all &lt;- read.csv(paste0(prefix, \"2024-10-03/fcal-cleaned.csv\"))\ncrp &lt;- readRDS(paste0(prefix, \"processed/median-crp.RDS\"))\ndict &lt;- readRDS(paste0(prefix, \"processed/dict-initial.RDS\"))\ndict &lt;- dict %&gt;%\n  filter(ids %in% c(fcal$ids, crp$ids))\nupdated &lt;- read.csv(paste0(prefix, \"2024-10-03/allPatientsNathanCleaned.csv\"))\n\n\nCategorical data is presented via barcharts and frequency tables whilst continuous data are presented via density plots and quantile tables. Missingness is not reported if there are no missing data.\nAge at diagnosis\nFor subjects in the LIBDR, only the year of birth was extracted (not the whole date) from NHS records to reduce the identifiability of subjects. This also follows the GDPR practice of only requesting data which are strictly required.\nThe age at time of diagnosis has been calculated by subtracting the year of birth from year of IBD diagnosis and is therefore not entirely accurate. However, an error of within one year for age is reasonable for this study and is expected to have a minimal impact on findings.\nDetails for how time of diagnosis was obtained is described in a following section.\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.fc &lt;- subset(dict, ids %in% fcal$ids)\n\nquants &lt;- quantile(dict.fc$age, na.rm = TRUE, probs = c(0.25, 0.5, 0.75)) %&gt;%\n  data.frame()\n\nquants &lt;- cbind(rownames(quants), quants)\ncolnames(quants) &lt;- c(\"Quantile\", \"Age at diagnosis\")\n\n\nIn Figure 1, we see IBD incidence by age similar to characterisations by Lewis et al. (2023), A bimodal distribution with a a large peak in the mid-20s and a smaller peak in middle age.\nAge at diagnosis is missing for 0 (0%) subjects in the FC analysis.\n\nCodedict.fc %&gt;%\n  filter(!is.na(age)) %&gt;%\n  ggplot(aes(x = age)) +\n  geom_density(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  ylab(\"Density\") +\n  xlab(\"Age at diagnosis\") +\n  wrap_table(gt(quants), space = \"free_y\")\n\n\n\n\n\n\nFigure 1: Distribution of age at diagnosis for subjects in the FC analysis.\n\n\n\n\n\n\n\nCodedict.crp &lt;- subset(dict, ids %in% crp$ids)\n\nquants &lt;- quantile(dict.crp$age, na.rm = TRUE, probs = c(0.25, 0.5, 0.75)) %&gt;%\n  data.frame()\n\nquants &lt;- cbind(rownames(quants), quants)\ncolnames(quants) &lt;- c(\"Quantile\", \"Age at diagnosis\")\n\n\nAge at diagnosis is missing for 0 (0%) subjects\n\nCodedict.crp %&gt;%\n  ggplot(aes(x = age)) +\n  geom_density(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  ylab(\"Density\") +\n  xlab(\"Age at diagnosis\") +\n  wrap_table(gt(quants), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.both &lt;- subset(dict, ids %in% fcal$ids & ids %in% crp$ids)\n\nquants &lt;- quantile(dict.both$age, na.rm = TRUE, probs = c(0.25, 0.5, 0.75)) %&gt;%\n  data.frame()\n\nquants &lt;- cbind(rownames(quants), quants)\ncolnames(quants) &lt;- c(\"Quantile\", \"Age at diagnosis\")\n\n\nAge at diagnosis is missing for 0 (0%) subjects\n\nCodedict.both %&gt;%\n  ggplot(aes(x = age)) +\n  geom_density(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  ylab(\"Density\") +\n  xlab(\"Age at diagnosis\") +\n  wrap_table(gt(quants), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nSex\n\nCodedict &lt;- fcal.all[, c(\"ids\", \"sex\")] %&gt;%\n  distinct(ids,\n    .keep_all = TRUE\n  ) %&gt;%\n  merge(x = dict, by = \"ids\", all.x = TRUE, all.y = FALSE)\n\n\n# Update NA sex if sex available from updated\ndict &lt;- merge(dict,\n  updated[, c(\"ids\", \"sex\")],\n  by = \"ids\",\n  all.x = TRUE,\n  all.y = FALSE\n)\n\nfor (i in 1:nrow(dict)) {\n  if (is.na(dict[i, \"sex.x\"]) & !is.na(dict[i, \"sex.y\"])) {\n    dict[i, \"sex.x\"] &lt;- dict[i, \"sex.y\"]\n  }\n}\n\ndict$sex &lt;- dict$sex.x\ndict$sex.x &lt;- dict$sex.y &lt;- NULL\n\ndict$sex &lt;- plyr::mapvalues(dict$sex,\n  from = c(\"F\", \"M\"),\n  to = c(\"Female\", \"Male\")\n)\n\n\nSimilar to age, sex was obtained directly from health records.\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\nSex appears to be distributed evenly between females and males in the FC cohort.\n\nCodedict.fc &lt;- subset(dict, ids %in% fcal$ids)\ncounts &lt;- data.frame(table(dict.fc$sex))\ncolnames(counts) &lt;- c(\"Sex\", \"Frequency\")\n\ndict.fc %&gt;%\n  ggplot(aes(x = sex)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Sex\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.crp &lt;- subset(dict, ids %in% crp$ids)\ncounts &lt;- data.frame(table(dict.crp$sex))\ncolnames(counts) &lt;- c(\"Sex\", \"Frequency\")\n\ndict.crp %&gt;%\n  ggplot(aes(x = sex)) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Sex\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.both &lt;- subset(dict, ids %in% fcal$ids & ids %in% crp$ids)\ncounts &lt;- data.frame(table(dict.both$sex))\ncolnames(counts) &lt;- c(\"Sex\", \"Frequency\")\n\ndict.both %&gt;%\n  ggplot(aes(x = sex)) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"Sex\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nIBD type\n\nCodedict$diagnosis &lt;- factor(dict$diagnosis,\n  levels = c(\n    \"Crohn's Disease\",\n    \"Ulcerative Colitis\",\n    \"IBDU\"\n  )\n)\n\n\nIBD type, defined as either either Crohn’s disease, ulcerative colitis, or inflammatory bowel disease unclassified (IBDU), was identified using a methodology previously described for the Lothian IBD Registry (Jones et al. 2019).\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\nThe majority of subjects in the FC analysis were diagnosed with Crohn’s disease.\n\nCodedict.fc &lt;- subset(dict, ids %in% fcal$ids)\n\ncounts &lt;- data.frame(table(dict.fc$diagnosis))\ncolnames(counts) &lt;- c(\"IBD type\", \"Frequency\")\n\ndict.fc %&gt;%\n  ggplot(aes(x = diagnosis)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"IBD type\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.crp &lt;- subset(dict, ids %in% crp$ids)\n\ncounts &lt;- data.frame(table(dict.crp$diagnosis))\ncolnames(counts) &lt;- c(\"IBD type\", \"Frequency\")\n\ndict.crp %&gt;%\n  ggplot(aes(x = diagnosis)) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"IBD type\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.both &lt;- subset(dict, ids %in% fcal$ids & ids %in% crp$ids)\ncounts &lt;- data.frame(table(dict.both$diagnosis))\ncolnames(counts) &lt;- c(\"IBD type\", \"Frequency\")\n\ndict.both %&gt;%\n  ggplot(aes(x = diagnosis)) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"IBD type\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nYear of diagnosis\n\nCode# Define eras\n# 2005-2009, 2010-2014, 2015-2017\ndict$era &lt;- NA\ndict &lt;-\n  dict %&gt;%\n  mutate(era = if_else(year(date.of.diag) &lt; 2010, \"2005-2009\", era)) %&gt;%\n  mutate(era = if_else(year(date.of.diag) &gt; 2009 & year(date.of.diag) &lt; 2015, \"2010-2014\", era)) %&gt;%\n  mutate(era = if_else(year(date.of.diag) &gt; 2014, \"2015-2017\", era))\n\n\nWhere possible, full dates for IBD diagnosis were extracted which were used to determine if there were biomarker observations within ± 90 days of diagnosis for each subject in the LIBDR. Exact dates for some subjects were unavailable in which case either the first day of the month, if month was available, or middle of the year, if only year was available, was used.\nIn addition to exploring individual years, we have also grouped years of diagnosis into ‘eras’ to explore potential era effects. This will allow us to explore if changes in clinical practice over time could have influenced cluster trajectories. The following ‘eras’ are considered:\n\n2005–2009\n2010–2014\n2015–2017\n\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.fc &lt;- subset(dict, ids %in% fcal$ids)\ndict.fc %&gt;%\n  ggplot(aes(x = year(date.of.diag))) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Year of diagnosis\") +\n  ylab(\"Frequency\")\n\n\n\n\n\n\n\nWe can observe the majority of subjects in the FC analysis were diagnosed 2010–2014 with relatively few subjects diagnosed 2005–2009. This may limit our statistical power to detect era effects and is likely driven by there being relatively few FC tests in this time. Indeed, this finding may reflect changes in how FC has been used in clinical practice over time, transitioning from being strictly used as a diagnostic tool to having a role in both diagnosis and disease monitoring.\n\nCodecounts &lt;- data.frame(table(dict.fc$era))\ncolnames(counts) &lt;- c(\"Diagnosis era\", \"Frequency\")\n\ndict.fc %&gt;%\n  ggplot(aes(x = era)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Diagnosis era\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.crp &lt;- subset(dict, ids %in% crp$ids)\ndict.crp %&gt;%\n  ggplot(aes(x = year(date.of.diag))) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Year of diagnosis\") +\n  ylab(\"Frequency\")\n\n\n\n\n\n\n\n\nCodecounts &lt;- data.frame(table(dict.crp$era))\ncolnames(counts) &lt;- c(\"Diagnosis era\", \"Frequency\")\n\ndict.crp %&gt;%\n  ggplot(aes(x = era)) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Diagnosis era\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.both &lt;- subset(dict, ids %in% fcal$ids & ids %in% crp$ids)\ndict.both %&gt;%\n  ggplot(aes(x = year(date.of.diag))) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"Year of diagnosis\") +\n  ylab(\"Frequency\")\n\n\n\n\n\n\n\n\nCodecounts &lt;- data.frame(table(dict.both$era))\ncolnames(counts) &lt;- c(\"Diagnosis era\", \"Frequency\")\n\ndict.both %&gt;%\n  ggplot(aes(x = era)) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"Diagnosis era\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nBiomarker at baseline\nAs a diagnostic observation was required for inclusion in the study, all study subjects have a baseline biomarker observation available. After reducing the biomarkers to only those meeting the study criteria, the first observation with respect to time was used. Ties in first observation times, which may arise from high-intensity monitoring in an inpatient setting, are not explicitly handled.\n\nCodetemp &lt;- fcal\ntemp &lt;- temp[order(temp$calpro_time), ]\n\nfc.ids &lt;- unique(temp$ids)\nfc.result &lt;- c()\n\nfor (id in fc.ids) {\n  fc.result &lt;- c(fc.result, subset(temp, ids == id)[1, \"calpro_result\"])\n}\n\ndict &lt;- merge(dict,\n  data.frame(ids = fc.ids, baseline_fc = fc.result),\n  all.x = TRUE,\n  all.y = FALSE,\n  by = \"ids\"\n)\n\n\ntemp &lt;- crp\ntemp &lt;- temp[order(temp$crp_time), ]\n\ncrp.ids &lt;- unique(temp$ids)\ncrp.result &lt;- c()\n\nfor (id in crp.ids) {\n  crp.result &lt;- c(crp.result, subset(temp, ids == id)[1, \"crp_result\"])\n}\n\ndict &lt;- merge(dict,\n  data.frame(ids = crp.ids, baseline_crp = crp.result),\n  all.x = TRUE,\n  all.y = FALSE,\n  by = \"ids\"\n)\n\n\n\n\nFaecal calprotectin\nCRP\n\n\n\n\nCodequants &lt;- quantile(dict$baseline_fc,\n  na.rm = TRUE,\n  probs = c(0.25, 0.5, 0.75)\n) %&gt;%\n  data.frame()\nquants &lt;- cbind(rownames(quants), round(quants, 2))\ncolnames(quants) &lt;- c(\"Quantile\", \"Baseline FC\")\n\ndict %&gt;%\n  filter(!is.na(baseline_fc)) %&gt;%\n  ggplot(aes(x = baseline_fc)) +\n  geom_density(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Baseline FC\") +\n  ylab(\"Density\") +\n  wrap_table(gt(quants), space = \"free_y\")\n\n\n\n\n\n\n\nWe will now consider baseline FC for the subset of subjects included in both the FC and CRP analyses.\n\nCodequants &lt;- dict %&gt;%\n  filter(!is.na(baseline_crp)) %&gt;%\n  filter(!is.na(baseline_fc)) %&gt;%\n  select(baseline_fc) %&gt;%\n  quantile(\n    na.rm = TRUE,\n    probs = c(0.25, 0.5, 0.75)\n  ) %&gt;%\n  data.frame()\nquants &lt;- cbind(rownames(quants), round(quants, 2))\ncolnames(quants) &lt;- c(\"Quantile\", \"Baseline FC\")\n\ndict %&gt;%\n  filter(!is.na(baseline_crp)) %&gt;%\n  filter(!is.na(baseline_fc)) %&gt;%\n  ggplot(aes(x = baseline_fc)) +\n  geom_density(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Baseline FC\") +\n  ylab(\"Density\") +\n  wrap_table(gt(quants), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodequants &lt;- quantile(dict$baseline_crp,\n  na.rm = TRUE,\n  probs = c(0.25, 0.5, 0.75)\n) %&gt;%\n  data.frame()\n\nquants &lt;- cbind(rownames(quants), round(quants, 2))\ncolnames(quants) &lt;- c(\"Quantile\", \"Baseline CRP\")\n\ndict %&gt;%\n  filter(!is.na(baseline_crp)) %&gt;%\n  ggplot(aes(x = baseline_crp)) +\n  geom_density(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Baseline CRP\") +\n  ylab(\"Density\") +\n  wrap_table(gt(quants), space = \"free_y\")\n\n\n\n\n\n\n\nWe will now consider baseline CRP for the subset of subjects included in both the FC and CRP analyses.\n\nCodequants &lt;- dict %&gt;%\n  filter(!is.na(baseline_crp)) %&gt;%\n  filter(!is.na(baseline_fc)) %&gt;%\n  select(baseline_crp) %&gt;%\n  quantile(na.rm = TRUE, probs = c(0.25, 0.5, 0.75)) %&gt;%\n  data.frame()\n\nquants &lt;- cbind(rownames(quants), round(quants, 2))\ncolnames(quants) &lt;- c(\"Quantile\", \"Baseline CRP\")\n\n\ndict %&gt;%\n  filter(!is.na(baseline_crp)) %&gt;%\n  filter(!is.na(baseline_fc)) %&gt;%\n  ggplot(aes(x = baseline_crp)) +\n  geom_density(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Baseline CRP\") +\n  ylab(\"Density\") +\n  wrap_table(gt(quants), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCrohn’s disease only data\n\nCode# Subjects in the FC analysis\ncd.pheno1 &lt;- read_xlsx(paste0(prefix, \"2024-10-10/CD-pheno.xlsx\")) %&gt;%\n  select(-Alex, -Comments)\n\ncolnames(cd.pheno1)[c(3, 4)] &lt;- c(\"sex\", \"Smoke\")\n\n# Subjects in the CRP analysis\ncd.pheno2 &lt;- read_xlsx(paste0(prefix, \"2024-10-24/CD-pheno-crp.xlsx\")) %&gt;%\n  select(-Alex, -...10)\n\ncd.pheno &lt;- rbind(cd.pheno1, cd.pheno2)\ncd.pheno &lt;- cd.pheno %&gt;%\n  select(-diagnosis, -sex) %&gt;%\n  distinct(ids, .keep_all = TRUE)\n\ndict &lt;- merge(x = dict, y = cd.pheno, all.x = TRUE, all.y = FALSE, by = \"ids\")\n\n\nMontreal location\n\nCodedict$Location &lt;-\n  plyr::mapvalues(dict$Location,\n    from = c(\n      \"1\",\n      \"2\",\n      \"3\",\n      \"isolated vulval disease\",\n      \"L1/L4\",\n      \"L1+4\",\n      \"L2/L4\",\n      \"L3/L4\",\n      \"L3+4\",\n      \"NA\",\n      \"L4\",\n      \"No luminal\"\n    ),\n    to = c(\n      \"L1\",\n      \"L2\",\n      \"L3\",\n      NA,\n      \"L1\",\n      \"L1\",\n      \"L2\",\n      \"L3\",\n      \"L3\",\n      NA,\n      NA,\n      NA\n    )\n  )\n\n\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.cd.fc &lt;- subset(dict, ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.fc$Location, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal location\", \"Frequency\")\n\ndict.cd.fc %&gt;%\n  ggplot(aes(x = Location)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Montreal location\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.crp &lt;- subset(dict, ids %in% crp$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.crp$Location, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal location\", \"Frequency\")\n\ndict.cd.crp %&gt;%\n  ggplot(aes(x = Location)) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Montreal location\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.both &lt;- subset(dict, (ids %in% crp$ids) & (ids %in% fcal$ids) & (diagnosis == \"Crohn's Disease\"))\n\ncounts &lt;- data.frame(table(dict.cd.both$Location, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal location\", \"Frequency\")\n\ndict.cd.both %&gt;%\n  ggplot(aes(x = Location)) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"Montreal location\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nUpper GI inflammation\n\nCodedict$L4 &lt;- plyr::mapvalues(dict$L4,\n  from = c(\"0\", \"1\", \"N\"),\n  to = c(\"No\", \"Yes\", \"No\")\n)\n\n\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.cd.fc &lt;- subset(dict, ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.fc$L4, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"L4 present\", \"Frequency\")\n\ndict.cd.fc %&gt;%\n  ggplot(aes(x = L4)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"L4 present\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.crp &lt;- subset(dict, ids %in% crp$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.crp$L4, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"L4 present\", \"Frequency\")\n\ndict.cd.crp %&gt;%\n  ggplot(aes(x = L4)) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"L4 present\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.both &lt;- subset(dict, ids %in% crp$ids & ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.both$L4, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"L4 present\", \"Frequency\")\n\ndict.cd.both %&gt;%\n  ggplot(aes(x = L4)) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"L4 present\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nMontreal behaviour\n\nCodedict$Behaviour &lt;- plyr::mapvalues(dict$Behaviour,\n  from = c(\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"B0\",\n    \"C1\",\n    \"L2\",\n    \"L3\",\n    \"NA\",\n    \"No luminal\",\n    \"No luminal disease\"\n  ),\n  to = c(\n    NA,\n    \"B1\",\n    \"B2\",\n    \"B3\",\n    NA,\n    NA,\n    NA,\n    NA,\n    NA,\n    NA,\n    NA\n  )\n)\n\n\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.cd.fc &lt;- subset(dict, ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.fc$Behaviour, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal behaviour\", \"Frequency\")\n\ndict.cd.fc %&gt;%\n  ggplot(aes(x = Behaviour)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Montreal behaviour\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.crp &lt;- subset(dict, ids %in% crp$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.crp$Behaviour, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal behaviour\", \"Frequency\")\n\ndict.cd.crp %&gt;%\n  ggplot(aes(x = Behaviour)) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Montreal behaviour\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.both &lt;- subset(dict, ids %in% crp$ids & ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.both$Behaviour, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal behaviour\", \"Frequency\")\n\ndict.cd.both %&gt;%\n  ggplot(aes(x = Behaviour)) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"Montreal behaviour\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nPerianal disease\n\nCodedict$Perianal &lt;- plyr::mapvalues(dict$Perianal,\n  from = c(\"0\", \"1\", \"n\", \"N\", \"NA\", \"Y\"),\n  to = c(\"No\", \"Yes\", \"No\", \"No\", NA, \"Yes\")\n)\n\n\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.cd.fc &lt;- subset(dict, ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.fc$Perianal, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Perianal disease present\", \"Frequency\")\n\ndict.cd.fc %&gt;%\n  ggplot(aes(x = Perianal)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Perianal disease present\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.crp &lt;- subset(dict, ids %in% crp$ids & diagnosis == \"Crohn's Disease\")\n\ncounts &lt;- data.frame(table(dict.cd.crp$Perianal, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Perianal disease present\", \"Frequency\")\n\ndict.cd.crp %&gt;%\n  ggplot(aes(x = Perianal)) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Perianal disease present\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.both &lt;- subset(dict, ids %in% crp$ids & ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\ncounts &lt;- data.frame(table(dict.cd.both$Perianal, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Perianal disease present\", \"Frequency\")\n\ndict.cd.both %&gt;%\n  ggplot(aes(x = Perianal)) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"Perianal disease present\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nSmoking status\n\nCodedict$Smoke &lt;-\n  plyr::mapvalues(dict$Smoke,\n    from = c(\n      \"?\",\n      \"0\",\n      \"1\",\n      \"1`\",\n      \"2\",\n      \"current\",\n      \"Current\",\n      \"Curent\",\n      \"ex\",\n      \"Ex\",\n      \"EX\",\n      \"N\",\n      \"never\",\n      \"Never\",\n      \"NEVER\",\n      \"Unknown\",\n      \"NA\"\n    ),\n    to = c(\n      NA,\n      \"No\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\",\n      \"No\",\n      \"No\",\n      \"No\",\n      \"No\",\n      NA,\n      NA\n    )\n  )\n\n\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.cd.fc &lt;- subset(dict, ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\ncounts &lt;- data.frame(table(dict.cd.fc$Smoke, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Previously smoked\", \"Frequency\")\n\ndict.cd.fc %&gt;%\n  ggplot(aes(x = Smoke)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Previously smoked\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.crp &lt;- subset(dict, ids %in% crp$ids & diagnosis == \"Crohn's Disease\")\ncounts &lt;- data.frame(table(dict.cd.crp$Smoke, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Previously smoked\", \"Frequency\")\n\ndict.cd.crp %&gt;%\n  ggplot(aes(x = Smoke)) +\n  geom_bar(fill = \"#EF2D56\", color = \"#BE2544\") +\n  theme_minimal() +\n  xlab(\"Previously smoked\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.cd.both &lt;- subset(dict, ids %in% crp$ids & ids %in% fcal$ids & diagnosis == \"Crohn's Disease\")\ncounts &lt;- data.frame(table(dict.cd.both$Smoke, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Previously smoked\", \"Frequency\")\n\ndict.cd.both %&gt;%\n  ggplot(aes(x = Smoke)) +\n  geom_bar(fill = \"#42D9C8\", color = \"#15AB9D\") +\n  theme_minimal() +\n  xlab(\"Previously smoked\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nAdvanced therapies in CD\nEarly advanced therapy in CD is particularly noteworthy given there is considerable evidence an early commencement of an advanced therapy in CD is associated with better disease outcomes (Noor et al. 2024; D’Haens et al. 2008).\n\nCodecd.bio1 &lt;- read.csv(paste0(\n  prefix,\n  \"2024-10-29/cd-bio_to-do Master Copy (NathanNoID)\",\n  \".csv\"\n))\n\nbad.dates &lt;- c(\n  \"na\",\n  \"2017  00:00:00\",\n  \"?2018\",\n  \"01/10/2019 (induction course), restarted 01/06/2020\",\n  \"?2018-2023\",\n  \"?2022\",\n  \"UNKNOWN\",\n  \"No Follow up\"\n)\n\nineligble &lt;- c(\n  \"(Single agent Rituximab and RCHOP therapy post liver transplant- 2014)\",\n  \"(Toculizamab for RA?)\"\n)\n\ncd.bio1 &lt;- cd.bio1 %&gt;%\n  select(\n    ids,\n    Date.started...7,\n    Date.started...10,\n    Date.started...13,\n    Date.started...16,\n    Date.started...19,\n    Date.started...22,\n    Date.started...25\n  )\n\ncolnames(cd.bio1) &lt;- c(\n  \"ids\",\n  \"X1ST.LINE.START\",\n  \"X2ND.LINE.START\",\n  \"X3RD.LINE.START\",\n  \"X4TH.LINE.START\",\n  \"X5TH.LINE.START\",\n  \"X6th.line.start\",\n  \"X7TH.LINE.START\"\n)\ncd.bio1$X8TH.LINE.START &lt;- NA\n\ntemp &lt;- function(x) {\n  x[x %in% bad.dates] &lt;- NA\n  x\n}\n\ncd.bio1 &lt;- as.data.frame(lapply(cd.bio1, temp))\n\ncd.bio1 &lt;- fix_date_df(cd.bio1, colnames(cd.bio1)[-1], excel = TRUE)\n\ncd.bio2 &lt;- read.csv(paste0(\n  prefix,\n  \"2024-10-29/cd-bio_general\",\n  \".csv\"\n))\n\ncd.bio2 &lt;- cd.bio2 %&gt;%\n  select(\n    ids,\n    Date.1st.biologic,\n    X2ND.LINE.START,\n    X3RD.LINE.START,\n    X4TH.LINE.START,\n    X5TH.LINE.START,\n    X6th.line.start,\n    X7th.line.start,\n    X8th.line.start\n  )\n\ncolnames(cd.bio2) &lt;- c(\n  \"ids\",\n  \"X1ST.LINE.START\",\n  \"X2ND.LINE.START\",\n  \"X3RD.LINE.START\",\n  \"X4TH.LINE.START\",\n  \"X5TH.LINE.START\",\n  \"X6th.line.start\",\n  \"X7TH.LINE.START\",\n  \"X8TH.LINE.START\"\n)\n\ncd.bio2 &lt;- as.data.frame(lapply(cd.bio2, temp))\n\ncd.bio2 &lt;- fix_date_df(cd.bio2, colnames(cd.bio2)[-1], excel = TRUE)\n\ncd.bio &lt;- rbind(cd.bio1, cd.bio2) %&gt;%\n  distinct(ids, .keep_all = TRUE)\n\n\ncd.bio &lt;- cd.bio %&gt;%\n  drop_na(X1ST.LINE.START) %&gt;% # Require at least one bio\n  filter(ids %in% dict$ids) %&gt;% # Only subjects included in study\n  mutate(AT = 1) # All subjects have an AT\n\n# Subtract date of diagnosis and scale to years\ncd.bio &lt;- merge(cd.bio,\n  dict[, c(\"ids\", \"date.of.diag\")],\n  by = \"ids\",\n  all.x = FALSE,\n  all.y = FALSE\n) %&gt;%\n  mutate(\n    X1ST.LINE.START = as.numeric(X1ST.LINE.START - date.of.diag) / 365.25,\n    X2ND.LINE.START = as.numeric(X2ND.LINE.START - date.of.diag) / 365.25,\n    X3RD.LINE.START = as.numeric(X3RD.LINE.START - date.of.diag) / 365.25,\n    X4TH.LINE.START = as.numeric(X4TH.LINE.START - date.of.diag) / 365.25,\n    X5TH.LINE.START = as.numeric(X5TH.LINE.START - date.of.diag) / 365.25,\n    X6th.line.start = as.numeric(X6th.line.start - date.of.diag) / 365.25,\n    X7TH.LINE.START = as.numeric(X7TH.LINE.START - date.of.diag) / 365.25,\n    X8TH.LINE.START = as.numeric(X8TH.LINE.START - date.of.diag) / 365.25\n  )\n\n\n# Set negative times to 0\ncd.bio[cd.bio &lt; 0] &lt;- 0\n\nnames(cd.bio) &lt;- c(\n  \"ids\",\n  paste0(\"AT_line_\", 1:8),\n  \"AT\",\n  \"date.of.diag\"\n)\n\ndict &lt;- cd.bio %&gt;%\n  select(-date.of.diag) %&gt;%\n  merge(x = dict, all.x = TRUE, all.y = TRUE, by = \"ids\") %&gt;%\n  mutate(AT = if_else(diagnosis == \"Crohn's Disease\" & is.na(AT), 0, AT))\n\n\n\n\nFaecal calprotectin\nCRP\n\n\n\n\nCodedict.fc.cd &lt;- subset(dict, diagnosis == \"Crohn's Disease\" & ids %in% fcal$ids)\n\n# Apply censoring\ndict.fc.cd &lt;- dict.fc.cd %&gt;%\n  mutate(AT_line_1 = if_else(AT == 0, 7, as.numeric(AT_line_1))) %&gt;%\n  mutate(AT = if_else(AT_line_1 &gt; 7, 0, 1)) %&gt;%\n  mutate(\n    AT_line_1 = if_else(AT_line_1 &gt; 7, 7, AT_line_1),\n    AT = if_else(AT_line_1 == 7, 0, AT)\n  )\n\n\nsurvfit(Surv(AT_line_1, AT) ~ 1, data = dict.fc.cd) %&gt;%\n  ggsurvplot()\n\n\n\n\n\n\n\n\n\n\nCodedict.crp.cd &lt;- subset(dict, diagnosis == \"Crohn's Disease\" & ids %in% crp$ids)\n\n# Apply censoring\ndict.crp.cd &lt;- dict.crp.cd %&gt;%\n  mutate(AT_line_1 = if_else(AT == 0, 7, as.numeric(AT_line_1))) %&gt;%\n  mutate(AT = if_else(AT_line_1 &gt; 7, 0, 1)) %&gt;%\n  mutate(AT_line_1 = if_else(AT_line_1 &gt; 7, 7, AT_line_1))\n\ndict.crp.cd &lt;- dict.crp.cd %&gt;%\n  mutate(\n    AT_line_1 = if_else(AT_line_1 &lt; 0, 0, AT_line_1),\n    AT = if_else(AT_line_1 == 7, 0, AT)\n  )\n\nsurvfit(Surv(AT_line_1, AT) ~ 1, data = dict.crp.cd) %&gt;%\n  ggsurvplot()\n\n\n\n\n\n\n\n\n\n\nUlcerative colitis only data\n\nCodeuc.pheno.1 &lt;- read_xlsx(paste0(prefix, \"2024-10-23/UC-pheno.xlsx\"),\n  range = cell_cols(1:4)\n)\n\nuc.pheno.2 &lt;- read_xlsx(paste0(prefix, \"2024-12-11/UC-pheno-crp.xlsx\"),\n  range = cell_cols(1:4)\n)\nuc.pheno &lt;- rbind(uc.pheno.1, uc.pheno.2) %&gt;%\n  distinct(ids, .keep_all = TRUE)\n\n\nuc.pheno &lt;- select(uc.pheno, -diagnosis)\ndict &lt;- merge(dict, uc.pheno, by = \"ids\", all.x = TRUE, all.y = FALSE) %&gt;%\n  mutate(Smoke = if_else(is.na(Smoke.x), Smoke.y, Smoke.x)) %&gt;%\n  select(-Smoke.x, -Smoke.y)\n\n\nMontreal extent\n\nCodedict &lt;- dict %&gt;%\n  mutate(Extent = if_else(!is.na(Extent) & !str_detect(Extent, \"E\"),\n    paste0(\"E\", Extent),\n    NA\n  ))\n\n\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.uc.fc &lt;- subset(\n  dict,\n  diagnosis == \"Ulcerative Colitis\" & (ids %in% unique(fcal$ids))\n)\n\n\ncounts &lt;- data.frame(table(dict.uc.fc$Extent, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal extent\", \"Frequency\")\n\ndict.uc.fc %&gt;%\n  ggplot(aes(x = Extent)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Montreal location\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.uc.crp &lt;- subset(\n  dict,\n  diagnosis == \"Ulcerative Colitis\" & (ids %in% unique(crp$ids))\n)\n\n\ncounts &lt;- data.frame(table(dict.uc.crp$Extent, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal extent\", \"Frequency\")\n\ndict.uc.crp %&gt;%\n  ggplot(aes(x = Extent)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Montreal extent\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.uc.both &lt;- subset(\n  dict,\n  diagnosis == \"Ulcerative Colitis\" & (ids %in% unique(fcal$ids)) & (ids %in% unique(crp$ids))\n)\n\ncounts &lt;- data.frame(table(dict.uc.both$Extent, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Montreal extent\", \"Frequency\")\n\ndict.uc.both %&gt;%\n  ggplot(aes(x = Extent)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Montreal location\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nSmoking status\n\nCodedict$Smoke &lt;-\n  plyr::mapvalues(dict$Smoke,\n    from = c(\n      \"0\",\n      \"0.01\",\n      \"never\",\n      \"1\",\n      \"2\",\n      \"ex\",\n      \"former\"\n    ),\n    to = c(\n      \"No\",\n      \"No\",\n      \"No\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\",\n      \"Yes\"\n    )\n  )\n\n\n\n\nFaecal calprotectin\nCRP\nOverlap\n\n\n\n\nCodedict.uc.fc &lt;- subset(\n  dict,\n  diagnosis == \"Ulcerative Colitis\" & (ids %in% unique(fcal$ids))\n)\n\ncounts &lt;- data.frame(table(dict.uc.fc$Smoke, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Previously smoked\", \"Frequency\")\n\ndict.uc.fc %&gt;%\n  ggplot(aes(x = Smoke)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Previously smoked\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.uc.crp &lt;- subset(\n  dict,\n  diagnosis == \"Ulcerative Colitis\" & (ids %in% unique(crp$ids))\n)\n\ncounts &lt;- data.frame(table(dict.uc.crp$Smoke, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Previously smoked\", \"Frequency\")\n\ndict.uc.crp %&gt;%\n  ggplot(aes(x = Smoke)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Previously smoked\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nCodedict.uc.both &lt;- subset(\n  dict,\n  diagnosis == \"Ulcerative Colitis\" & (ids %in% unique(fcal$ids)) & (ids %in% unique(crp$ids))\n)\n\ncounts &lt;- data.frame(table(dict.uc.both$Smoke, useNA = \"ifany\"))\ncolnames(counts) &lt;- c(\"Previously smoked\", \"Frequency\")\n\ndict.uc.both %&gt;%\n  ggplot(aes(x = Smoke)) +\n  geom_bar(fill = \"#541388\", color = \"#2E294E\") +\n  theme_minimal() +\n  xlab(\"Previously smoked\") +\n  ylab(\"Frequency\") +\n  wrap_table(gt(counts), space = \"free_y\")\n\n\n\n\n\n\n\n\n\n\nAdvanced therapies in UC\n\nCodeuc.bio.all &lt;- read.csv(paste0(prefix, \"2024-10-17/UC-cleaned.csv\"), na.strings = c(\"na\", \"NA\"))\n\n\n\nCodeuc.bio.dates &lt;- uc.bio.all %&gt;%\n  select(\n    ids,\n    X1ST.LINE.START,\n    X2ND.LINE.START,\n    X3RD.LINE.START,\n    X4TH.LINE.START,\n    X5TH.LINE.START,\n    X6th.line.start,\n    X7TH.LINE.START,\n    X8TH.LINE.START\n  )\nuc.bio.dates &lt;- fix_date_df(uc.bio.dates,\n  names(uc.bio.dates)[-1],\n  excel = TRUE\n)\nuc.bio.dates &lt;- subset(uc.bio.dates, ids %in% unique(fcal$ids))\nuc.bio.dates &lt;- merge(uc.bio.dates,\n  dict[, c(\"ids\", \"date.of.diag\")],\n  by = \"ids\",\n  all.x = FALSE,\n  all.y = FALSE\n) %&gt;%\n  mutate(\n    X1ST.LINE.START = as.numeric(X1ST.LINE.START - date.of.diag) / 365.25,\n    X2ND.LINE.START = as.numeric(X2ND.LINE.START - date.of.diag) / 365.25,\n    X3RD.LINE.START = as.numeric(X3RD.LINE.START - date.of.diag) / 365.25,\n    X4TH.LINE.START = as.numeric(X4TH.LINE.START - date.of.diag) / 365.25,\n    X5TH.LINE.START = as.numeric(X5TH.LINE.START - date.of.diag) / 365.25,\n    X6th.line.start = as.numeric(X6th.line.start - date.of.diag) / 365.25,\n    X7TH.LINE.START = as.numeric(X7TH.LINE.START - date.of.diag) / 365.25,\n    X8TH.LINE.START = as.numeric(X8TH.LINE.START - date.of.diag) / 365.25\n  )\n\n\nuc.bio.dates[uc.bio.dates &lt; 0] &lt;- 0\nnames(uc.bio.dates) &lt;- c(\n  \"ids\",\n  paste0(\"AT_line_\", 1:8),\n  \"date.of.diag\"\n)\n\n\n\n\n\ndict &lt;- uc.bio.dates %&gt;%\n  select(-date.of.diag) %&gt;%\n  merge(x = dict, all.x = TRUE, all.y = TRUE, by = \"ids\")\n\ndict &lt;- dict %&gt;%\n  mutate(\n    AT_line_1 = if_else(!is.na(AT_line_1.x), AT_line_1.x, AT_line_1.y),\n    AT_line_2 = if_else(!is.na(AT_line_2.x), AT_line_2.x, AT_line_2.y),\n    AT_line_3 = if_else(!is.na(AT_line_3.x), AT_line_3.x, AT_line_3.y),\n    AT_line_4 = if_else(!is.na(AT_line_4.x), AT_line_4.x, AT_line_4.y),\n    AT_line_5 = if_else(!is.na(AT_line_5.x), AT_line_5.x, AT_line_5.y),\n    AT_line_6 = if_else(!is.na(AT_line_6.x), AT_line_6.x, AT_line_6.y),\n    AT_line_7 = if_else(!is.na(AT_line_7.x), AT_line_7.x, AT_line_7.y),\n    AT_line_8 = if_else(!is.na(AT_line_8.x), AT_line_8.x, AT_line_8.y)\n  ) %&gt;%\n  select(\n    -AT_line_1.x,\n    -AT_line_2.x,\n    -AT_line_3.x,\n    -AT_line_4.x,\n    -AT_line_5.x,\n    -AT_line_6.x,\n    -AT_line_7.x,\n    -AT_line_8.x,\n    -AT_line_1.y,\n    -AT_line_2.y,\n    -AT_line_3.y,\n    -AT_line_4.y,\n    -AT_line_5.y,\n    -AT_line_6.y,\n    -AT_line_7.y,\n    -AT_line_8.y\n  ) %&gt;%\n  mutate(AT = if_else(!is.na(AT_line_1), 1, 0))\n\n\n\n\nFaecal calprotectin\nCRP\n\n\n\n\nCodedict.fc.uc &lt;- dict %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\" & ids %in% fcal$ids) %&gt;%\n  mutate(AT_line_1 = if_else(AT == 0, 7, AT_line_1)) %&gt;%\n  mutate(\n    AT = if_else(AT_line_1 &gt; 7, 0, 1),\n    AT_line_1 = if_else(AT_line_1 &gt; 7, 7, AT_line_1)\n  ) %&gt;%\n  mutate(AT = if_else(AT_line_1 == 7, 0, AT))\n\nsurvfit(Surv(AT_line_1, AT) ~ 1, data = dict.fc.uc) %&gt;%\n  ggsurvplot()\n\n\n\n\n\n\n\n\n\n\nCodedict.crp.uc &lt;- dict %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\" & ids %in% crp$ids) %&gt;%\n  mutate(AT_line_1 = if_else(AT == 0, 7, AT_line_1)) %&gt;%\n  mutate(\n    AT = if_else(AT_line_1 &gt; 7, 0, 1),\n    AT_line_1 = if_else(AT_line_1 &gt; 7, 7, AT_line_1)\n  ) %&gt;%\n  mutate(AT = if_else(AT_line_1 == 7, 0, AT))\n\nsurvfit(Surv(AT_line_1, AT) ~ 1, data = dict.crp.uc) %&gt;%\n  ggsurvplot()"
  },
  {
    "objectID": "source/pre/baseline.html#demographics-table",
    "href": "source/pre/baseline.html#demographics-table",
    "title": "Baseline data",
    "section": "Demographics table",
    "text": "Demographics table\nThe following table compares the demographic data (“table 1”) for the FC and CRP analysis and the overlap between the two (subjects included in both the FC and CRP analyses).\n\nCodedict.fc$model &lt;- \"FC\"\ndict.crp$model &lt;- \"CRP\"\ncombined &lt;- rbind(dict.fc, dict.crp)\n\nboth &lt;- subset(dict.fc, ids %in% dict.crp$ids)\nboth$model &lt;- \"Overlap\"\ncombined &lt;- rbind(combined, both)\nlabel(combined$age) &lt;- \"Age at diagnosis\"\nlabel(combined$sex) &lt;- \"Sex\"\nlabel(combined$diagnosis) &lt;- \"IBD type\"\n\ncombined$model &lt;- factor(combined$model, levels = c(\"FC\", \"CRP\", \"Overlap\"))\n\nmy.render.cont &lt;- function(x) {\n  with(\n    stats.apply.rounding(stats.default(x),\n      digits = 3,\n      round.integers = FALSE\n    ),\n    c(\"\", \"Median (IQR)\" = sprintf(\"%s (%s - %s)\", MEDIAN, Q1, Q3))\n  )\n}\ntable1(~ age + sex + diagnosis | model,\n  data = combined,\n  overall = FALSE,\n  render.continuous = my.render.cont\n)\n\n\n\n\n\n\n\n\n\n\n\nFC(N=1036)\nCRP(N=1838)\nOverlap(N=808)\n\n\n\nAge at diagnosis\n\n\n\n\n\nMedian (IQR)\n33.0 (20.0 - 51.0)\n37.0 (24.0 - 55.0)\n32.0 (20.0 - 50.0)\n\n\nSex\n\n\n\n\n\nFemale\n533 (51.4%)\n882 (48.0%)\n411 (50.9%)\n\n\nMale\n503 (48.6%)\n956 (52.0%)\n397 (49.1%)\n\n\nIBD type\n\n\n\n\n\nCrohn's Disease\n544 (52.5%)\n805 (43.8%)\n451 (55.8%)\n\n\nUlcerative Colitis\n380 (36.7%)\n847 (46.1%)\n276 (34.2%)\n\n\nIBDU\n112 (10.8%)\n186 (10.1%)\n81 (10.0%)"
  },
  {
    "objectID": "source/pre/baseline.html#data-saving",
    "href": "source/pre/baseline.html#data-saving",
    "title": "Baseline data",
    "section": "Data saving",
    "text": "Data saving\n\nCodesaveRDS(dict, paste0(prefix, \"processed/dict.RDS\"))"
  },
  {
    "objectID": "source/pre/baseline.html#acknowledgments",
    "href": "source/pre/baseline.html#acknowledgments",
    "title": "Baseline data",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nThis work is funded by the Medical Research Council & University of Edinburgh via a Precision Medicine PhD studentship (MR/N013166/1, to NC-C)."
  },
  {
    "objectID": "source/pre/baseline.html#author-contributions",
    "href": "source/pre/baseline.html#author-contributions",
    "title": "Baseline data",
    "section": "Author contributions",
    "text": "Author contributions\nNC-C performed the processing and wrote the text. NP, ML, curated and provided datasets. KM-G, CWL, and CAV provided supervisory support and assisted with revisions."
  },
  {
    "objectID": "source/pre/baseline.html#references",
    "href": "source/pre/baseline.html#references",
    "title": "Baseline data",
    "section": "References",
    "text": "References\n\n\nD’Haens, Geert, Filip Baert, Gert van Assche, Philip Caenepeel, Philippe Vergauwe, Hans Tuynman, Martine De Vos, et al. 2008. “Early Combined Immunosuppression or Conventional Management in Patients with Newly Diagnosed Crohn’s Disease: An Open Randomised Trial.” The Lancet 371 (9613): 660–67. https://doi.org/https://doi.org/10.1016/S0140-6736(08)60304-9.\n\n\nJones, Gareth-Rhys, Mathew Lyons, Nikolas Plevris, Philip W Jenkinson, Cathy Bisset, Christopher Burgess, Shahida Din, et al. 2019. “IBD Prevalence in Lothian, Scotland, Derived by Capture-Recapture Methodology.” Gut 68 (11): 1953–60. https://doi.org/10.1136/gutjnl-2019-318936.\n\n\nLewis, James D., Lauren E. Parlett, Michele L. Jonsson Funk, Colleen Brensinger, Virginia Pate, Qufei Wu, Ghadeer K. Dawwas, et al. 2023. “Incidence, Prevalence, and Racial and Ethnic Distribution of Inflammatory Bowel Disease in the United States.” Gastroenterology 165 (5): 1197–1205.e2. https://doi.org/10.1053/j.gastro.2023.07.003.\n\n\nNoor, Nurulamin M, James C Lee, Simon Bond, Francis Dowling, Biljana Brezina, Kamal V Patel, Tariq Ahmad, et al. 2024. “A Biomarker-Stratified Comparison of Top-down Versus Accelerated Step-up Treatment Strategies for Patients with Newly Diagnosed Crohn’s Disease (PROFILE): A Multicentre, Open-Label Randomised Controlled Trial.” The Lancet Gastroenterology & Hepatology 9 (5): 415–27. https://doi.org/https://doi.org/10.1016/S2468-1253(24)00034-7."
  },
  {
    "objectID": "source/pre/baseline.html#reuse",
    "href": "source/pre/baseline.html#reuse",
    "title": "Baseline data",
    "section": "Reuse",
    "text": "Reuse\nLicensed by CC BY unless otherwise stated."
  },
  {
    "objectID": "source/pre/baseline.html#session-info",
    "href": "source/pre/baseline.html#session-info",
    "title": "Baseline data",
    "section": "Session info",
    "text": "Session info\n\nCodepander(sessionInfo())\n\nR version 4.4.3 (2025-02-28)\nPlatform: aarch64-apple-darwin20\nlocale: en_GB.UTF-8||en_GB.UTF-8||en_GB.UTF-8||C||en_GB.UTF-8||en_GB.UTF-8\nattached base packages: stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: pander(v.0.6.6), survminer(v.0.5.0), ggpubr(v.0.6.0), survival(v.3.8-3), readxl(v.1.4.5), table1(v.1.4.3), datefixR(v.1.7.0), gt(v.0.11.1), patchwork(v.1.3.0), lubridate(v.1.9.4), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.4), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): gtable(v.0.3.6), xfun(v.0.51), htmlwidgets(v.1.6.4), rstatix(v.0.7.2), lattice(v.0.22-6), tzdb(v.0.4.0), vctrs(v.0.6.5), tools(v.4.4.3), generics(v.0.1.3), parallel(v.4.4.3), pkgconfig(v.2.0.3), Matrix(v.1.7-2), data.table(v.1.17.0), lifecycle(v.1.0.4), compiler(v.4.4.3), farver(v.2.1.2), munsell(v.0.5.1), carData(v.3.0-5), sass(v.0.4.9), htmltools(v.0.5.8.1), yaml(v.2.3.10), Formula(v.1.2-5), pillar(v.1.10.1), car(v.3.1-3), abind(v.1.4-8), km.ci(v.0.5-6), tidyselect(v.1.2.1), digest(v.0.6.37), stringi(v.1.8.4), labeling(v.0.4.3), splines(v.4.4.3), fastmap(v.1.2.0), grid(v.4.4.3), colorspace(v.2.1-1), cli(v.3.6.4), magrittr(v.2.0.3), broom(v.1.0.7), withr(v.3.0.2), scales(v.1.3.0), backports(v.1.5.0), timechange(v.0.3.0), rmarkdown(v.2.29), gridExtra(v.2.3), ggsignif(v.0.6.4), cellranger(v.1.1.0), zoo(v.1.8-13), hms(v.1.1.3), evaluate(v.1.0.3), KMsurv(v.0.1-5), knitr(v.1.49), survMisc(v.0.5.6), rlang(v.1.1.5), Rcpp(v.1.0.14), xtable(v.1.8-4), glue(v.1.8.0), xml2(v.1.3.7), jsonlite(v.1.9.1), plyr(v.1.8.9) and R6(v.2.6.1)"
  },
  {
    "objectID": "source/selection/crp.html",
    "href": "source/selection/crp.html",
    "title": "Model selection",
    "section": "",
    "text": "Codeset.seed(123)\nif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\n\n##########################\n#--     Packages       --#\n##########################\n\nlibrary(tidyverse)\n# Support package (source found in libdr/)\nlibrary(libdr)\n## Modelling ##\nlibrary(lcmm)\nlibrary(kml) # K-means\n## Presentation ##\nlibrary(patchwork)\nlibrary(ggdist)\nlibrary(ggalluvial)\nlibrary(pander)\nlibrary(qqplotr)\n\n\n##########################\n#--     Data read      --#\n#########################\n\ndict &lt;- readRDS(paste0(prefix, \"processed/dict.RDS\"))\ncrp_median &lt;- readRDS(paste0(prefix, \"processed/median-crp.RDS\"))\ncrp &lt;- readRDS(paste0(prefix, \"processed/crp.RDS\"))\n\ndk.crp &lt;- read.csv(paste0(prefix, \"Denmark/2024-11-29/crp_8_models.csv\"),\n                    sep = \";\")"
  },
  {
    "objectID": "source/selection/crp.html#introduction",
    "href": "source/selection/crp.html#introduction",
    "title": "Model selection",
    "section": "",
    "text": "Codeset.seed(123)\nif (file.exists(\"/.dockerenv\")) { # Check if running in Docker\n  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume\n  prefix &lt;- \"data/\"\n} else {\n  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is\n  # mounted at /Volumes\n  prefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n}\n\n\n##########################\n#--     Packages       --#\n##########################\n\nlibrary(tidyverse)\n# Support package (source found in libdr/)\nlibrary(libdr)\n## Modelling ##\nlibrary(lcmm)\nlibrary(kml) # K-means\n## Presentation ##\nlibrary(patchwork)\nlibrary(ggdist)\nlibrary(ggalluvial)\nlibrary(pander)\nlibrary(qqplotr)\n\n\n##########################\n#--     Data read      --#\n#########################\n\ndict &lt;- readRDS(paste0(prefix, \"processed/dict.RDS\"))\ncrp_median &lt;- readRDS(paste0(prefix, \"processed/median-crp.RDS\"))\ncrp &lt;- readRDS(paste0(prefix, \"processed/crp.RDS\"))\n\ndk.crp &lt;- read.csv(paste0(prefix, \"Denmark/2024-11-29/crp_8_models.csv\"),\n                    sep = \";\")"
  },
  {
    "objectID": "source/selection/crp.html#model-selection",
    "href": "source/selection/crp.html#model-selection",
    "title": "Model selection",
    "section": "Model selection",
    "text": "Model selection\n\nCode# set the number of groups\nG.crp &lt;- numeric()\nmodels.crp.ma &lt;- list()\nG.cands &lt;- seq(2, 10)\nfor (G.cand in G.cands) {\n  file.name &lt;- paste0(prefix, \"/cache/crp-ma/crp-\", G.cand, \".RDS\")\n  if (file.exists(file.name)) {\n    G.crp &lt;- c(G.crp, G.cand)\n    models.crp.ma[[G.cand]] &lt;- readRDS(file.name)\n  }\n}\nrm(G.cand)\n\n\n\nCodealluvial.df &lt;- matrix(nrow = 0, ncol = 3)\ncolnames(alluvial.df) &lt;- c(\"ids\", \"class\", \"G\")\n\nfor (G in G.crp) {\n  alluvial.df &lt;- rbind(alluvial.df, cbind(models.crp.ma[[G]]$pprob[, 1:2],\n    G = G\n  ))\n}\nalluvial.df &lt;- as.data.frame(alluvial.df)\n\nalluvial.df$ids &lt;- as.character(alluvial.df$ids)\nalluvial.df$class &lt;- as.factor(alluvial.df$class)\n\nalluvial.df[alluvial.df[, \"G\"] == 3, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 3, \"class\"],\n    from = c(seq(1, 3)),\n    to = c(1, 2, 3)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 4, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 4, \"class\"],\n    from = c(seq(1, 4)),\n    to = c(3, 1, 2, 4)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 5, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 5, \"class\"],\n    from = c(seq(1, 5)),\n    to = c(3, 5, 2, 1, 4)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 6, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 6, \"class\"],\n    from = c(seq(1, 6)),\n    to = c(2, 1, 3, 6, 4, 5)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 7, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 7, \"class\"],\n    from = c(seq(1, 7)),\n    to = c(2, 1, 7, 3, 5, 4, 6)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 8, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 8, \"class\"],\n    from = c(seq(1, 8)),\n    to = c(2, 6, 1, 7, 5, 4, 3, 8)\n  )\n\n\nalluvial.df[alluvial.df[, \"G\"] == 9, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 9, \"class\"],\n    from = c(seq(1, 9)),\n    to = c(8, 2, 4, 1, 5, 9, 3, 6, 7)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 10, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 10, \"class\"],\n    from = c(seq(1, 10)),\n    to = c(9, 7, 1, 5, 3, 4, 2, 10, 6, 8)\n  )\n\n# eliminate label switching\n\np &lt;- ggplot(\n  alluvial.df,\n  aes(\n    x = G,\n    stratum = class,\n    alluvium = ids,\n    fill = class,\n    label = class\n  )\n) +\n  scale_x_discrete(expand = c(.1, .1)) +\n  geom_flow() +\n  geom_stratum(alpha = 0.5) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = rainbow(10)) +\n  xlab(\"Assumed number of clusters\") +\n  ylab(\"Frequency\")\nprint(p)\n\n\nfor (format in c(\"png\", \"pdf\")) {\n  ggsave(paste0(\"plots/ma-nocor/alluvial.\", format),\n    p,\n    width = 12,\n    height = 6.75,\n    units = \"in\"\n  )\n}\n\n\n\n\n\n\nFigure 1: Alluvial plot of cluster membership across G for CRP\n\n\n\n\n\nCodealluvial.df &lt;- matrix(nrow = 0, ncol = 3)\ncolnames(alluvial.df) &lt;- c(\"ids\", \"class\", \"G\")\n\nfor (G in G.crp) {\n  alluvial.df &lt;- rbind(alluvial.df, cbind(models.crp.ma[[G]]$pprob[, 1:2],\n    G = G\n  ))\n}\nalluvial.df &lt;- as.data.frame(alluvial.df)\n\nalluvial.df$ids &lt;- as.character(alluvial.df$ids)\nalluvial.df$class &lt;- as.factor(alluvial.df$class)\n\np &lt;- ggplot(\n  alluvial.df,\n  aes(\n    x = G,\n    stratum = class,\n    alluvium = ids,\n    fill = class,\n    label = class\n  )\n) +\n  scale_x_discrete(expand = c(.1, .1)) +\n  geom_flow() +\n  geom_stratum(alpha = 0.5) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = rainbow(10)) +\n  xlab(\"Assumed number of clusters\") +\n  ylab(\"Frequency\")\nprint(p)\n\n\n\n\n\n\nFigure 2: Alluvial plot of cluster membership across G for CRP without label switching"
  },
  {
    "objectID": "source/selection/crp.html#posterior-classifications",
    "href": "source/selection/crp.html#posterior-classifications",
    "title": "Model selection",
    "section": "Posterior classifications",
    "text": "Posterior classifications\nFrom the below data, we can see how posterior probabilities change as the number of assumed clusters increase\n\n\n\nG = 2\nG = 3\nG = 4\nG = 5\nG = 6\nG = 7\nG = 8\nG = 9\nG = 10\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\n\n\n\nN\n1453\n385\n\n\n%\n79.05\n20.95\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\n\n\n\nclass1\n0.9027\n0.0973\n\n\nclass2\n0.1982\n0.8018\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\n\n\n\nprob&gt;0.7\n90.78\n69.61\n\n\nprob&gt;0.8\n82.66\n54.55\n\n\nprob&gt;0.9\n68.27\n37.14\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\n\n\n\nN\n893\n359\n586\n\n\n%\n48.59\n19.53\n31.88\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\n\n\n\nclass1\n0.8537\n0.0778\n0.0685\n\n\nclass2\n0.1336\n0.7989\n0.0676\n\n\nclass3\n0.1016\n0.0572\n0.8412\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\n\n\n\nprob&gt;0.7\n79.73\n68.25\n77.47\n\n\nprob&gt;0.8\n70.66\n55.71\n68.26\n\n\nprob&gt;0.9\n56.66\n38.72\n52.56\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\n\n\n\nN\n499\n886\n341\n112\n\n\n%\n27.15\n48.2\n18.55\n6.09\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\n\n\n\nclass1\n0.8014\n0.0807\n0.057\n0.0609\n\n\nclass2\n0.0562\n0.8502\n0.0702\n0.0233\n\n\nclass3\n0.0684\n0.1304\n0.7961\n0.005\n\n\nclass4\n0.1601\n0.086\n0.0038\n0.7501\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\n\n\n\nprob&gt;0.7\n68.54\n78.56\n66.86\n60.71\n\n\nprob&gt;0.8\n58.72\n70.2\n58.06\n45.54\n\n\nprob&gt;0.9\n42.48\n55.3\n39.3\n26.79\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\n\n\n\nN\n507\n98\n274\n856\n103\n\n\n%\n27.58\n5.33\n14.91\n46.57\n5.6\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\n\n\n\nclass1\n0.7923\n0.0304\n0.0384\n0.0842\n0.0547\n\n\nclass2\n0.0892\n0.7494\n0.1004\n0.0608\n2e-04\n\n\nclass3\n0.0417\n0.0662\n0.7612\n0.1265\n0.0044\n\n\nclass4\n0.0531\n0.0137\n0.0649\n0.8494\n0.0189\n\n\nclass5\n0.1526\n5e-04\n0.0029\n0.0896\n0.7545\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\n\n\n\nprob&gt;0.7\n67.26\n63.27\n63.14\n78.39\n59.22\n\n\nprob&gt;0.8\n56.02\n44.9\n46.35\n69.39\n49.51\n\n\nprob&gt;0.9\n41.22\n27.55\n29.93\n55.37\n26.21\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\n\n\n\nN\n280\n823\n477\n54\n104\n100\n\n\n%\n15.23\n44.78\n25.95\n2.94\n5.66\n5.44\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\n\n\n\nclass1\n0.7611\n0.1161\n0.0397\n0.0106\n0.005\n0.0675\n\n\nclass2\n0.0649\n0.8252\n0.0515\n0.0277\n0.0181\n0.0126\n\n\nclass3\n0.0374\n0.0808\n0.7844\n0.0179\n0.0528\n0.0267\n\n\nclass4\n0.0299\n0.1145\n0.0655\n0.7707\n0.0194\n1e-04\n\n\nclass5\n0.0046\n0.0669\n0.1413\n0.0188\n0.7682\n3e-04\n\n\nclass6\n0.0939\n0.0584\n0.0883\n0.0019\n2e-04\n0.7573\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\n\n\n\nprob&gt;0.7\n63.93\n74.85\n67.51\n62.96\n62.5\n63\n\n\nprob&gt;0.8\n47.86\n65.98\n54.51\n53.7\n51.92\n47\n\n\nprob&gt;0.9\n31.79\n47.75\n40.88\n38.89\n28.85\n31\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nN\n281\n783\n57\n457\n106\n97\n57\n\n\n%\n15.29\n42.6\n3.1\n24.86\n5.77\n5.28\n3.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\n\n\n\nclass1\n0.7627\n0.1136\n9e-04\n0.0368\n0.0675\n0.009\n0.0094\n\n\nclass2\n0.0625\n0.8184\n0.018\n0.0441\n0.0107\n0.0139\n0.0324\n\n\nclass3\n0.0069\n0.1064\n0.7244\n0.0964\n0.0146\n0.0462\n0.0051\n\n\nclass4\n0.0345\n0.0744\n0.0157\n0.7807\n0.0277\n0.0497\n0.0173\n\n\nclass5\n0.0917\n0.0647\n0.002\n0.0747\n0.765\n4e-04\n0.0015\n\n\nclass6\n0.0112\n0.0595\n0.023\n0.1333\n5e-04\n0.7533\n0.0193\n\n\nclass7\n0.0203\n0.1127\n0.0011\n0.0643\n0\n0.0314\n0.7701\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nprob&gt;0.7\n63.7\n74.71\n57.89\n66.74\n62.26\n62.89\n63.16\n\n\nprob&gt;0.8\n47.69\n64.5\n42.11\n53.83\n50\n48.45\n52.63\n\n\nprob&gt;0.9\n32.74\n45.34\n22.81\n39.82\n33.02\n30.93\n43.86\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nN\n225\n51\n702\n60\n110\n84\n434\n172\n\n\n%\n12.24\n2.77\n38.19\n3.26\n5.98\n4.57\n23.61\n9.36\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\nprob8\n\n\n\nclass1\n0.7803\n0.0068\n0.0921\n0.0013\n0.0633\n0.0026\n0.0534\n3e-04\n\n\nclass2\n0.013\n0.7735\n0.0897\n0.0017\n2e-04\n0.0278\n0.0845\n0.0096\n\n\nclass3\n0.0512\n0.029\n0.8324\n0.0208\n0.0096\n0.0113\n0.0451\n6e-04\n\n\nclass4\n0.0036\n0.0032\n0.0684\n0.7425\n0.0162\n0.0314\n0.0883\n0.0463\n\n\nclass5\n0.0735\n0.002\n0.0397\n0.0037\n0.7708\n2e-04\n0.0822\n0.0279\n\n\nclass6\n7e-04\n0.0237\n0.0384\n0.0278\n1e-04\n0.7563\n0.0997\n0.0534\n\n\nclass7\n0.0407\n0.0195\n0.0731\n0.0222\n0.0292\n0.0406\n0.6896\n0.0851\n\n\nclass8\n6e-04\n0.0015\n4e-04\n0.007\n0.0208\n0.0231\n0.1606\n0.786\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nprob&gt;0.7\n68.44\n64.71\n78.49\n55\n64.55\n61.9\n48.85\n71.51\n\n\nprob&gt;0.8\n51.56\n52.94\n67.52\n46.67\n53.64\n48.81\n31.34\n52.33\n\n\nprob&gt;0.9\n34.22\n39.22\n49.72\n23.33\n37.27\n33.33\n11.06\n31.98\n\n\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nN\n172\n223\n86\n601\n113\n102\n432\n50\n\n\n%\n9.36\n12.13\n4.68\n32.7\n6.15\n5.55\n23.5\n2.72\n\n\n\n\n\n\n\n\n\n \nclass9\n\n\n\nN\n59\n\n\n%\n3.21\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\n\n\n\nclass1\n0.7829\n6e-04\n0.0229\n2e-04\n0.0212\n1e-04\n0.1635\n\n\nclass2\n3e-04\n0.7827\n0.0025\n0.0856\n0.0618\n0.0073\n0.0515\n\n\nclass3\n0.0531\n7e-04\n0.7501\n0.0368\n1e-04\n8e-04\n0.1077\n\n\nclass4\n3e-04\n0.0532\n0.0113\n0.8317\n0.0083\n6e-04\n0.0471\n\n\nclass5\n0.027\n0.0752\n2e-04\n0.0293\n0.7653\n0.011\n0.0823\n\n\nclass6\n0.0015\n0.0374\n0.0107\n5e-04\n0.0152\n0.8437\n0.028\n\n\nclass7\n0.0843\n0.04\n0.0387\n0.0726\n0.0298\n0.0031\n0.6891\n\n\nclass8\n0.0098\n0.0128\n0.0286\n0.0725\n2e-04\n0.0106\n0.0853\n\n\nclass9\n0.0468\n0.0036\n0.0318\n0.0647\n0.0091\n0.0028\n0.088\n\n\n\n\n\n\n\n\n\n\n \nprob8\nprob9\n\n\n\nclass1\n0.0015\n0.0071\n\n\nclass2\n0.007\n0.0013\n\n\nclass3\n0.0232\n0.0276\n\n\nclass4\n0.0263\n0.0213\n\n\nclass5\n0.0022\n0.0075\n\n\nclass6\n0.0473\n0.0156\n\n\nclass7\n0.0196\n0.0229\n\n\nclass8\n0.7786\n0.0017\n\n\nclass9\n0.0031\n0.7501\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nprob&gt;0.7\n71.51\n69.51\n60.47\n78.37\n63.72\n83.33\n48.38\n\n\nprob&gt;0.8\n52.33\n52.02\n47.67\n68.05\n52.21\n69.61\n31.25\n\n\nprob&gt;0.9\n31.4\n33.63\n33.72\n48.75\n36.28\n53.92\n10.65\n\n\n\n\n\n\n\n\n\n\n \nclass8\nclass9\n\n\n\nprob&gt;0.7\n66\n57.63\n\n\nprob&gt;0.8\n54\n47.46\n\n\nprob&gt;0.9\n40\n27.12\n\n\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\nclass8\n\n\n\nN\n102\n59\n417\n112\n434\n85\n222\n183\n\n\n%\n5.55\n3.21\n22.69\n6.09\n23.61\n4.62\n12.08\n9.96\n\n\n\n\n\n\n\n\n\n\n \nclass9\nclass10\n\n\n\nN\n52\n172\n\n\n%\n2.83\n9.36\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nprob1\nprob2\nprob3\nprob4\nprob5\nprob6\nprob7\n\n\n\nclass1\n0.845\n0.0157\n0\n0.0152\n0.0283\n0.0103\n0.0362\n\n\nclass2\n0.0026\n0.7509\n0.0443\n0.0091\n0.0876\n0.0322\n0.0035\n\n\nclass3\n0\n0.0248\n0.8528\n0.0072\n0.0415\n0.0131\n0.0341\n\n\nclass4\n0.0111\n0.0077\n0.0108\n0.7673\n0.0825\n2e-04\n0.0746\n\n\nclass5\n0.003\n0.0231\n0.0419\n0.0297\n0.6881\n0.0396\n0.0398\n\n\nclass6\n8e-04\n0.0276\n0.0357\n1e-04\n0.1034\n0.7512\n6e-04\n\n\nclass7\n0.0074\n0.0014\n0.0183\n0.0616\n0.0523\n0.0025\n0.7769\n\n\nclass8\n4e-04\n0.0138\n0.0239\n0.0127\n0.0583\n0.0061\n0.0921\n\n\nclass9\n0.0101\n0.0017\n0.0555\n2e-04\n0.0896\n0.0276\n0.012\n\n\nclass10\n1e-04\n0.0071\n2e-04\n0.0212\n0.1603\n0.0232\n6e-04\n\n\n\n\n\n\n\n\n\n\n\n \nprob8\nprob9\nprob10\n\n\n\nclass1\n1e-04\n0.0477\n0.0015\n\n\nclass2\n0.0202\n0.0031\n0.0464\n\n\nclass3\n3e-04\n0.0259\n4e-04\n\n\nclass4\n0.0161\n0.0023\n0.0275\n\n\nclass5\n0.0305\n0.0196\n0.0847\n\n\nclass6\n0.0029\n0.0243\n0.0535\n\n\nclass7\n0.0726\n0.0069\n3e-04\n\n\nclass8\n0.7699\n0.0228\n1e-04\n\n\nclass9\n0.0292\n0.7646\n0.0094\n\n\nclass10\n0\n0.0015\n0.7857\n\n\n\n\nTable continues below\n\n\n\n\n\n\n\n\n\n\n\n \nclass1\nclass2\nclass3\nclass4\nclass5\nclass6\nclass7\n\n\n\nprob&gt;0.7\n83.33\n57.63\n82.49\n64.29\n48.85\n61.18\n68.47\n\n\nprob&gt;0.8\n70.59\n45.76\n72.9\n52.68\n30.88\n48.24\n50.9\n\n\nprob&gt;0.9\n53.92\n25.42\n53.24\n36.61\n11.29\n32.94\n32.88\n\n\n\n\n\n\n\n\n\n\n\n \nclass8\nclass9\nclass10\n\n\n\nprob&gt;0.7\n68.85\n63.46\n71.51\n\n\nprob&gt;0.8\n52.46\n51.92\n52.33\n\n\nprob&gt;0.9\n32.24\n38.46\n31.98\n\n\n\nCoderm(output)\n\n\n\n\n\n\nCodepprobs.2 &lt;- c()\ngroups.2 &lt;- models.crp.ma[[2]]\npprobs.3 &lt;- c()\ngroups.3 &lt;- models.crp.ma[[3]]\npprobs.4 &lt;- c()\ngroups.4 &lt;- models.crp.ma[[4]]\npprobs.5 &lt;- c()\ngroups.5 &lt;- models.crp.ma[[5]]\npprobs.6 &lt;- c()\ngroups.6 &lt;- models.crp.ma[[6]]\npprobs.7 &lt;- c()\ngroups.7 &lt;- models.crp.ma[[7]]\npprobs.8 &lt;- c()\ngroups.8 &lt;- models.crp.ma[[8]]\npprobs.9 &lt;- c()\ngroups.9 &lt;- models.crp.ma[[9]]\npprobs.10 &lt;- c()\ngroups.10 &lt;- models.crp.ma[[10]]\n\n\nfor (i in 1:nrow(models.crp.ma[[2]]$pprob)) {\n  class.2 &lt;- groups.2$pprob[i, 2]\n  pprobs.2 &lt;- c(pprobs.2, groups.2$pprob[i, class.2 + 2])\n  class.3 &lt;- groups.3$pprob[i, 2]\n  pprobs.3 &lt;- c(pprobs.3, groups.3$pprob[i, class.3 + 2])\n  class.4 &lt;- groups.4$pprob[i, 2]\n  pprobs.4 &lt;- c(pprobs.4, groups.4$pprob[i, class.4 + 2])\n  class.5 &lt;- groups.5$pprob[i, 2]\n  pprobs.5 &lt;- c(pprobs.5, groups.5$pprob[i, class.5 + 2])\n  class.6 &lt;- groups.6$pprob[i, 2]\n  pprobs.6 &lt;- c(pprobs.6, groups.6$pprob[i, class.6 + 2])\n  class.7 &lt;- groups.7$pprob[i, 2]\n  pprobs.7 &lt;- c(pprobs.7, groups.7$pprob[i, class.7 + 2])\n  class.8 &lt;- groups.8$pprob[i, 2]\n  pprobs.8 &lt;- c(pprobs.8, groups.8$pprob[i, class.8 + 2])\n  class.9 &lt;- groups.9$pprob[i, 2]\n  pprobs.9 &lt;- c(pprobs.9, groups.9$pprob[i, class.9 + 2])\n  class.10 &lt;- groups.10$pprob[i, 2]\n  pprobs.10 &lt;- c(pprobs.10, groups.10$pprob[i, class.10 + 2])\n}\npprobs.2 &lt;- tibble(prob = pprobs.2)\npprobs.3 &lt;- tibble(prob = pprobs.3)\npprobs.4 &lt;- tibble(prob = pprobs.4)\npprobs.5 &lt;- tibble(prob = pprobs.5)\npprobs.6 &lt;- tibble(prob = pprobs.6)\npprobs.7 &lt;- tibble(prob = pprobs.7)\npprobs.8 &lt;- tibble(prob = pprobs.8)\npprobs.9 &lt;- tibble(prob = pprobs.9)\npprobs.10 &lt;- tibble(prob = pprobs.10)\n\npprobs.2$Model &lt;- as.factor(rep(\"Two clusters\", nrow(pprobs.2)))\npprobs.3$Model &lt;- as.factor(rep(\"Three clusters\", nrow(pprobs.3)))\npprobs.4$Model &lt;- as.factor(rep(\"Four clusters\", nrow(pprobs.4)))\npprobs.5$Model &lt;- as.factor(rep(\"Five clusters\", nrow(pprobs.5)))\npprobs.6$Model &lt;- as.factor(rep(\"Six clusters\", nrow(pprobs.6)))\npprobs.7$Model &lt;- as.factor(rep(\"Seven clusters\", nrow(pprobs.7)))\npprobs.8$Model &lt;- as.factor(rep(\"Eight clusters\", nrow(pprobs.8)))\npprobs.9$Model &lt;- as.factor(rep(\"Nine clusters\", nrow(pprobs.9)))\npprobs.10$Model &lt;- as.factor(rep(\"Ten clusters\", nrow(pprobs.10)))\npprobs &lt;- rbind(\n  pprobs.2,\n  pprobs.3,\n  pprobs.4,\n  pprobs.5,\n  pprobs.6,\n  pprobs.7,\n  pprobs.8,\n  pprobs.9,\n  pprobs.10\n)\n\np &lt;- pprobs %&gt;%\n  ggplot(aes(x = prob, y = Model)) +\n  # geom_histogram(bins = 40, fill = NA, position=\"identity\")\n  stat_slab(\n    fill = \"#5D5179\", color = \"gray\",\n    size = 0.8,\n    alpha = 0.7\n  ) +\n  geom_dots(color = \"#4F759B\", dotsize = 1) +\n  xlab(\"Posterior probability for cluster membership\") +\n  ylab(\"\") +\n  ggtitle(\n    \"Distribution of Posterior Probabilities Across Models\",\n    \"Subject-specific posterior probabilities for assigned cluster\"\n  ) +\n  theme_minimal() +\n  scale_y_discrete(limits = rev)\nggsave(\"plots/pprob-distribution-crp-ma.png\",\n  p,\n  width = 8.5,\n  height = 8.5,\n  units = \"in\"\n)\nggsave(\"plots/pprob-distribution-crp-ma.pdf\",\n  p,\n  width = 8.5,\n  height = 8.5,\n  units = \"in\"\n)\nprint(p)\n\n\n\n\n\n\n\nResidual plots\n\nG = 2\n\n\n##### G = 3 ##### G = 4 ##### G = 5 ##### G = 6 ##### G = 7 ##### G = 8 ##### G = 9 ##### G = 10 \n\n\n\nModel metrics\n\nCodesummaryplot(models.crp.ma[[4]],\n  models.crp.ma[[5]],\n  models.crp.ma[[6]],\n  models.crp.ma[[7]],\n  models.crp.ma[[8]],\n  models.crp.ma[[9]],\n  models.crp.ma[[10]],\n  which = c(\"loglik\", \"AIC\", \"BIC\", \"entropy\", \"ICL\"),\n  mfrow = c(2, 3),\n  axis = \"Class\"\n)\n\n\n\n\n\n\nFigure 3: Model metrics for CRP MA for G = 4-10\n\n\n\n\n\nCodecrp.metrics &lt;- makeMetrics(G.crp, models.crp.ma)\nbuildDT(crp.metrics)\n\n\n\nClusters\nMaximum log-likelihood\nAIC\nBIC\n\n\n\n2\n-15451.41\n30932.82\n31015.57\n\n\n3\n-15314.76\n30675.52\n30802.40\n\n\n4\n-15240.15\n30542.29\n30713.30\n\n\n5\n-15173.04\n30424.09\n30639.23\n\n\n6\n-15106.25\n30306.50\n30565.78\n\n\n7\n-15051.43\n30212.86\n30516.27\n\n\n8\n-15016.96\n30159.91\n30507.45\n\n\n9\n-15014.76\n30171.53\n30563.20\n\n\n10\n-15014.40\n30186.81\n30622.61\n\n\n\n\n\nSpaghetti plots per cluster\n\nCodefor (G in G.crp) {\n  # Data frame to hold processed data\n  new.crp &lt;- data.frame(\n    ids = numeric(),\n    crp_result = numeric(),\n    crp_time = numeric(),\n    class = numeric()\n  )\n\n  for (clust in 1:G) {\n    ids.clust &lt;- subset(models.crp.ma[[G]]$pprob, class == clust)$ids\n    n.clust &lt;- length(ids.clust)\n    rand &lt;- sample(n.clust, n.clust) # Randomise the order of the ids\n    iters &lt;- floor(n.clust / 6) # How many groups of six are there?\n\n    # Matrix to hold the smoothed data\n    crp.ma &lt;- matrix(NA, nrow = iters, ncol = 7)\n    for (i in 0:(iters - 1)) {\n      # Find ids for group of five\n      ids.select &lt;- ids.clust[rand[((i * 6) + 1):((i * 6) + 6)]]\n      crp.subset &lt;- subset(crp_median, ids %in% ids.select)\n      # Median process as per CRP preprocessing\n      for (j in seq(0, 6)) {\n        if (j == 6) {\n          sub.obs &lt;- subset(\n            crp.subset,\n            crp_time &gt;= j - 0.5 & crp_time &lt;= j + 1\n          )\n        } else {\n          sub.obs &lt;- subset(\n            crp.subset,\n            crp_time &gt;= j - 0.5 & crp_time &lt; j + 0.5\n          )\n        }\n        if (nrow(sub.obs) &gt; 0) {\n          crp.ma[i + 1, j + 1] &lt;- median(sub.obs$crp_result)\n        }\n      }\n    }\n\n    rownames(crp.ma) &lt;- 1:iters\n    crp.ma &lt;- reshape2::melt(t(crp.ma),\n      id.vars = row.names(crp.ma),\n      na.rm = TRUE\n    )\n    colnames(crp.ma) &lt;- c(\"crp_time\", \"ids\", \"crp_result\")\n    crp.ma &lt;- crp.ma[, c(2, 3, 1)] # Make ids first column\n    crp.ma$crp_time &lt;- crp.ma$crp_time - 1\n    # Take into account uneven spacing at start and end\n    crp.ma$crp_time &lt;- plyr::mapvalues(crp.ma$crp_time,\n      from = c(0, 6),\n      to = c(0.25, 6.25)\n    )\n    crp.ma$class &lt;- clust # Identify cluster assignment\n    new.crp &lt;- rbind(new.crp, crp.ma)\n  }\n\n  cairo_pdf(paste0(\"plots/spaghetti/crp-\", G, \".pdf\"),\n    width = 10,\n    height = 17.5\n  )\n  grid::grid.newpage()\n  spaghettiPlot(new.crp,\n    models.crp.ma,\n    G,\n    clusters = TRUE,\n    tmax = 6.25,\n    sizes = TRUE,\n    var.time = \"crp_time\",\n    ylim = \"data\"\n  )\n  invisible(dev.off())\n\n  png(paste0(\"plots/spaghetti/crp-\", G, \".png\"),\n    width = 10,\n    height = 17.5,\n    units = \"in\",\n    res = 300\n  )\n  grid::grid.newpage()\n  spaghettiPlot(new.crp,\n    models.crp.ma,\n    G,\n    clusters = TRUE,\n    tmax = 6.25,\n    sizes = TRUE,\n    var.time = \"crp_time\",\n    ylim = \"data\"\n  )\n  invisible(dev.off())\n\n  grid::grid.newpage()\n  spaghettiPlot(new.crp,\n    models.crp.ma,\n    G,\n    clusters = TRUE,\n    tmax = 6.25,\n    sizes = TRUE,\n    var.time = \"crp_time\",\n    ylim = \"data\"\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChosen model\n\nCodenew.crp &lt;- data.frame(\n  ids = numeric(),\n  crp_result = numeric(),\n  crp_time = numeric(),\n  class = numeric()\n)\n\nfor (clust in 1:8) {\n  ids.clust &lt;- subset(models.crp.ma[[8]]$pprob, class == clust)$ids\n  n.clust &lt;- length(ids.clust)\n  rand &lt;- sample(n.clust, n.clust) # Randomise the order of the ids\n  iters &lt;- floor(n.clust / 6) # How many groups of six are there?\n\n  # Matrix to hold the smoothed data\n  crp.ma &lt;- matrix(NA, nrow = iters, ncol = 7)\n  for (i in 0:(iters - 1)) {\n    # Find ids for group of five\n    ids.select &lt;- ids.clust[rand[((i * 6) + 1):((i * 6) + 6)]]\n    crp.subset &lt;- subset(crp_median, ids %in% ids.select)\n    # Median process as per CRP preprocessing\n    for (j in seq(0, 6)) {\n      if (j == 6) {\n        sub.obs &lt;- subset(\n          crp.subset,\n          crp_time &gt;= j - 0.5 & crp_time &lt;= j + 1\n        )\n      } else {\n        sub.obs &lt;- subset(\n          crp.subset,\n          crp_time &gt;= j - 0.5 & crp_time &lt; j + 0.5\n        )\n      }\n      if (nrow(sub.obs) &gt; 0) {\n        crp.ma[i + 1, j + 1] &lt;- median(sub.obs$crp_result)\n      }\n    }\n  } \n\n  rownames(crp.ma) &lt;- 1:iters\n  crp.ma &lt;- reshape2::melt(t(crp.ma),\n    id.vars = row.names(crp.ma),\n    na.rm = TRUE\n  )\n  colnames(crp.ma) &lt;- c(\"crp_time\", \"ids\", \"crp_result\")\n  crp.ma &lt;- crp.ma[, c(2, 3, 1)] # Make ids first column\n  crp.ma$crp_time &lt;- crp.ma$crp_time - 1\n  # Take into account uneven spacing at start and end\n  crp.ma$crp_time &lt;- plyr::mapvalues(crp.ma$crp_time,\n    from = c(0, 6),\n    to = c(0.25, 6.25)\n  )\n  crp.ma$class &lt;- clust # Identify cluster assignment\n  new.crp &lt;- rbind(new.crp, crp.ma)\n}\n\n\nLabelling\nThe labels/order of the clusters generated above are random. To improve the readability and assist with interpretation of associations, it would be beneficial to order clusters by some analogue for disease severity. This section explores possible solutions for this task.\nCumulative inflammation across follow-up\nOne possible solution is to order clusters by cumulative inflammation which is given by the area under the curve for each mean cluster trajectory.\n\nCoderank.full &lt;- rankCumulative(models.crp.ma[[8]],\n  tmax = 6.25,\n  var.time = \"crp_time\"\n)\nrank.full %&gt;%\n  ggplot(aes(x = paste0(\"CRP\", New), y = Area)) +\n  geom_bar(stat = \"identity\", fill = \"#745C97\", color = \"#39375B\") +\n  ylab(\"Cumulative inflammation (Area)\") +\n  xlab(\"Cluster\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nCodepng(paste0(\"plots/spaghetti/crp-ncs-reordered.png\"),\n  width = 10,\n  height = 16,\n  units = \"in\",\n  res = 300\n)\ngrid::grid.newpage()\nspaghettiPlot(new.crp,\n  models.crp.ma,\n  G = 8,\n  log = TRUE,\n  tmax = 6.25,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"crp_time\",\n  clusters = TRUE,\n  ylim = \"data\",\n  mapping = rank.full$Original\n)\ninvisible(dev.off())\n\ncairo_pdf(paste0(\"plots/spaghetti/crp-ncs-reordered.pdf\"),\n  width = 10,\n  height = 16\n)\ngrid::grid.newpage()\nspaghettiPlot(new.crp,\n  models.crp.ma,\n  G = 8,\n  log = TRUE,\n  tmax = 6.25,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"crp_time\",\n  clusters = TRUE,\n  ylim = \"data\",\n  mapping = rank.full$Original\n)\ninvisible(dev.off())\n\nspaghettiPlot(new.crp,\n  models.crp.ma,\n  G = 8,\n  log = TRUE,\n  tmax = 6.25,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"crp_time\",\n  clusters = TRUE,\n  ylim = \"data\",\n  mapping = rank.full$Original\n)\n\n\n\n\n\n\n\nWith Danish predictions\n\nCodedk.crp &lt;- dk.crp %&gt;%\n  mutate(cluster = str_replace_all(cluster, \"Ypred_class\", \"\")) %&gt;%\n  filter(time &lt;= 4.25)\n\n\n\nCodedk.crp$cluster &lt;- plyr::mapvalues(dk.crp$cluster,\n                                   from = seq(1, 8),\n                                   to = c(1, 2, 8, 3, 5, 7, 6, 4))\n\n\n\nCodecairo_pdf(paste0(\"plots/spaghetti/crp-scot-dk.pdf\"),\n  width = 10,\n  height = 16\n)\ngrid::grid.newpage()\nspaghettiPlot(new.crp,\n  models.crp.ma,\n  G = 8,\n  log = TRUE,\n  tmax = 6.25,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"crp_time\",\n  clusters = TRUE,\n  ylim = \"data\",\n  external = dk.crp,\n  mapping = rank.full$Original\n)\ninvisible(dev.off())\n\npng(paste0(\"plots/spaghetti/crp-scot-dk.png\"),\n  width = 10,\n  height = 16,\n  units = \"in\",\n  res = 300\n)\ngrid::grid.newpage()\nspaghettiPlot(new.crp,\n  models.crp.ma,\n  G = 8,\n  log = TRUE,\n  tmax = 6.25,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"crp_time\",\n  clusters = TRUE,\n  ylim = \"data\",\n  external = dk.crp,\n  mapping = rank.full$Original\n)\ninvisible(dev.off())\n\ngrid::grid.newpage()\nspaghettiPlot(new.crp,\n  models.crp.ma,\n  G = 8,\n  log = TRUE,\n  tmax = 6.25,\n  sizes = TRUE,\n  knots = FALSE,\n  var.time = \"crp_time\",\n  clusters = TRUE,\n  ylim = \"data\",\n  external = dk.crp,\n  mapping = rank.full$Original\n)\n\n\n\n\n\n\n\n\nCodefor (G in c(7, 9)) {\n  new.crp &lt;- data.frame(\n    ids = numeric(),\n    crp_result = numeric(),\n    crp_time = numeric(),\n    class = numeric()\n  )\n\n  for (clust in 1:G) {\n    ids.clust &lt;- subset(models.crp.ma[[G]]$pprob, class == clust)$ids\n    n.clust &lt;- length(ids.clust)\n    rand &lt;- sample(n.clust, n.clust) # Randomise the order of the ids\n    iters &lt;- floor(n.clust / 6) # How many groups of six are there?\n\n    # Matrix to hold the smoothed data\n    crp.ma &lt;- matrix(NA, nrow = iters, ncol = 7)\n    for (i in 0:(iters - 1)) {\n      # Find ids for group of five\n      ids.select &lt;- ids.clust[rand[((i * 6) + 1):((i * 6) + 6)]]\n      crp.subset &lt;- subset(crp_median, ids %in% ids.select)\n      # Median process as per CRP preprocessing\n      for (j in seq(0, 6)) {\n        if (j == 6) {\n          sub.obs &lt;- subset(\n            crp.subset,\n            crp_time &gt;= j - 0.5 & crp_time &lt;= j + 1\n          )\n        } else {\n          sub.obs &lt;- subset(\n            crp.subset,\n            crp_time &gt;= j - 0.5 & crp_time &lt; j + 0.5\n          )\n        }\n        if (nrow(sub.obs) &gt; 0) {\n          crp.ma[i + 1, j + 1] &lt;- median(sub.obs$crp_result)\n        }\n      }\n    }\n\n    rownames(crp.ma) &lt;- 1:iters\n    crp.ma &lt;- reshape2::melt(t(crp.ma),\n      id.vars = row.names(crp.ma),\n      na.rm = TRUE\n    )\n    colnames(crp.ma) &lt;- c(\"crp_time\", \"ids\", \"crp_result\")\n    crp.ma &lt;- crp.ma[, c(2, 3, 1)] # Make ids first column\n    crp.ma$crp_time &lt;- crp.ma$crp_time - 1\n    # Take into account uneven spacing at start and end\n    crp.ma$crp_time &lt;- plyr::mapvalues(crp.ma$crp_time,\n      from = c(0, 6),\n      to = c(0.25, 6.25)\n    )\n    crp.ma$class &lt;- clust # Identify cluster assignment\n    new.crp &lt;- rbind(new.crp, crp.ma)\n  }\n\n\n  rank.full &lt;- rankCumulative(models.crp.ma[[G]],\n    tmax = 6.25,\n    var.time = \"crp_time\"\n  )\n  png(paste0(\"plots/spaghetti/crp-ncs-reordered-\", G, \".png\"),\n    width = 10,\n    height = 16,\n    units = \"in\",\n    res = 300\n  )\n\n  grid::grid.newpage()\n  spaghettiPlot(\n    new.crp,\n    models.crp.ma,\n    G = G,\n    log = TRUE,\n    tmax = 6.25,\n    sizes = TRUE,\n    knots = FALSE,\n    var.time = \"crp_time\",\n    clusters = TRUE,\n    ylim = \"data\",\n    mapping = rank.full$Original\n  )\n  invisible(dev.off())\n\n  cairo_pdf(paste0(\"plots/spaghetti/crp-ncs-reordered-\", G, \".pdf\"),\n    width = 10,\n    height = 16\n  )\n  grid::grid.newpage()\n  spaghettiPlot(\n    new.crp,\n    models.crp.ma,\n    G = G,\n    log = TRUE,\n    tmax = 6.25,\n    sizes = TRUE,\n    knots = FALSE,\n    var.time = \"crp_time\",\n    clusters = TRUE,\n    ylim = \"data\",\n    mapping = rank.full$Original\n  )\n  invisible(dev.off())\n}\n\n\nAlluvial anchored plot\n\nCodealluvial.df &lt;- matrix(nrow = 0, ncol = 3)\ncolnames(alluvial.df) &lt;- c(\"ids\", \"class\", \"G\")\n\nfor (G in G.crp) {\n  alluvial.df &lt;- rbind(alluvial.df, cbind(models.crp.ma[[G]]$pprob[, 1:2],\n    G = G\n  ))\n}\nalluvial.df &lt;- as.data.frame(alluvial.df)\n\nalluvial.df$ids &lt;- as.character(alluvial.df$ids)\nalluvial.df$class &lt;- as.factor(alluvial.df$class)\n\n\nalluvial.df[alluvial.df[, \"G\"] == 2, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 2, \"class\"],\n    from = c(1, 2),\n    to = c(1, 2)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 3, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 3, \"class\"],\n    from = c(seq(1, 3)),\n    to = c(1, 2, 6)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 4, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 4, \"class\"],\n    from = c(seq(1, 4)),\n    to = c(6, 1, 2, 7)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 5, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 5, \"class\"],\n    from = c(seq(1, 5)),\n    to = c(6, 5, 2, 1, 7)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 6, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 6, \"class\"],\n    from = c(seq(1, 6)),\n    to = c(2, 1, 6, 3, 7, 5)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 7, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 7, \"class\"],\n    from = c(seq(1, 7)),\n    to = c(2, 1, 4, 6, 5, 7, 3)\n  )\n\nalluvial.df[alluvial.df[, \"G\"] == 8, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 8, \"class\"],\n    from = rank.full$Original,\n    to = rank.full$New\n  )\n\n\nalluvial.df[alluvial.df[, \"G\"] == 9, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 9, \"class\"],\n    from = c(seq(1, 9)),\n    to = c(8, 2, 7, 1, 5, 9, 6, 3, 4)\n  )\n\n\nalluvial.df[alluvial.df[, \"G\"] == 10, \"class\"] &lt;-\n  plyr::mapvalues(alluvial.df[alluvial.df[, \"G\"] == 10, \"class\"],\n    from = c(seq(1, 10)),\n    to = c(9, 4, 1, 5, 6, 7, 2, 10, 3, 8)\n  )\n\n\n# eliminate label switching\n\np &lt;- ggplot(\n  alluvial.df,\n  aes(\n    x = G,\n    stratum = class,\n    alluvium = ids,\n    fill = class,\n    label = class\n  )\n) +\n  scale_x_discrete(expand = c(.1, .1)) +\n  geom_flow() +\n  geom_stratum(alpha = 0.5) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = c(viridis::viridis(8), \"#FFF282\", \"#F8F3C3\")) +\n  xlab(\"Assumed number of clusters\") +\n  ylab(\"Frequency\")\nprint(p)\n\n\n\n\n\n\nCodefor (format in c(\"png\", \"pdf\")) {\n  ggsave(paste0(\"plots/ma-nocor/anchored-alluvial.\", format),\n    p,\n    width = 12,\n    height = 6.75,\n    units = \"in\"\n  )\n}\n\nsaveRDS(p, paste0(prefix, \"processed/plots/crp-alluvial.RDS\"))"
  },
  {
    "objectID": "source/selection/crp.html#acknowledgments",
    "href": "source/selection/crp.html#acknowledgments",
    "title": "Model selection",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nThis work is funded by the Medical Research Council & University of Edinburgh via a Precision Medicine PhD studentship (MR/N013166/1, to NC-C).\nThis work has made use of the resources provided by the Edinburgh Compute and Data Facility (ECDF)."
  },
  {
    "objectID": "source/selection/crp.html#author-contributions",
    "href": "source/selection/crp.html#author-contributions",
    "title": "Model selection",
    "section": "Author contributions",
    "text": "Author contributions"
  },
  {
    "objectID": "source/selection/crp.html#references",
    "href": "source/selection/crp.html#references",
    "title": "Model selection",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "source/selection/crp.html#reuse",
    "href": "source/selection/crp.html#reuse",
    "title": "Model selection",
    "section": "Reuse",
    "text": "Reuse\nLicensed by CC BY unless otherwise stated."
  },
  {
    "objectID": "source/selection/crp.html#session-info",
    "href": "source/selection/crp.html#session-info",
    "title": "Model selection",
    "section": "Session info",
    "text": "Session info\n\nCodepander(sessionInfo())\n\nR version 4.4.3 (2025-02-28)\nPlatform: aarch64-apple-darwin20\nlocale: en_GB.UTF-8||en_GB.UTF-8||en_GB.UTF-8||C||en_GB.UTF-8||en_GB.UTF-8\nattached base packages: splines, stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: qqplotr(v.0.0.6), pander(v.0.6.6), ggalluvial(v.0.12.5), ggdist(v.3.3.2), kml(v.2.5.0), longitudinalData(v.2.4.7), misc3d(v.0.9-1), rgl(v.1.3.17), clv(v.0.3-2.4), class(v.7.3-23), cluster(v.2.1.8), lcmm(v.2.2.1), libdr(v.1.0.1), magrittr(v.2.0.3), patchwork(v.1.3.0), lubridate(v.1.9.4), forcats(v.1.0.0), stringr(v.1.5.1), dplyr(v.1.1.4), purrr(v.1.0.4), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1) and tidyverse(v.2.0.0)\nloaded via a namespace (and not attached): tidyselect(v.1.2.1), viridisLite(v.0.4.2), farver(v.2.1.2), viridis(v.0.6.5), bitops(v.1.0-9), fastmap(v.1.2.0), pracma(v.2.4.4), digest(v.0.6.37), timechange(v.0.3.0), lifecycle(v.1.0.4), survival(v.3.8-3), compiler(v.4.4.3), rlang(v.1.1.5), tools(v.4.4.3), yaml(v.2.3.10), knitr(v.1.49), spacefillr(v.0.4.0), labeling(v.0.4.3), htmlwidgets(v.1.6.4), plyr(v.1.8.9), withr(v.3.0.2), numDeriv(v.2016.8-1.1), grid(v.4.4.3), opdisDownsampling(v.1.0.1), caTools(v.1.18.3), colorspace(v.2.1-1), extrafontdb(v.1.0), scales(v.1.3.0), iterators(v.1.0.14), MASS(v.7.3-64), cli(v.3.6.4), mvtnorm(v.1.3-3), rmarkdown(v.2.29), ragg(v.1.3.3), marqLevAlg(v.2.0.8), generics(v.0.1.3), twosamples(v.2.0.1), robustbase(v.0.99-4-1), reshape2(v.1.4.4), tzdb(v.0.4.0), parallel(v.4.4.3), base64enc(v.0.1-3), vctrs(v.0.6.5), Matrix(v.1.7-2), jsonlite(v.1.9.1), hms(v.1.1.3), pbmcapply(v.1.5.1), systemfonts(v.1.2.1), foreach(v.1.5.2), glue(v.1.8.0), DEoptimR(v.1.1-3-1), codetools(v.0.2-20), distributional(v.0.5.0), stringi(v.1.8.4), gtable(v.0.3.6), quadprog(v.1.5-8), extrafont(v.0.19), munsell(v.0.5.1), pillar(v.1.10.1), htmltools(v.0.5.8.1), R6(v.2.6.1), textshaping(v.1.0.0), tcltk(v.4.4.3), doParallel(v.1.0.17), evaluate(v.1.0.3), lattice(v.0.22-6), qqconf(v.1.3.2), Rcpp(v.1.0.14), gridExtra(v.2.3), nlme(v.3.1-167), Rttf2pt1(v.1.3.12), xfun(v.0.51) and pkgconfig(v.2.0.3)"
  },
  {
    "objectID": "source/post/FCALvsCRP.html",
    "href": "source/post/FCALvsCRP.html",
    "title": "Comparison of FC and CRP clustering",
    "section": "",
    "text": "CodesuppressPackageStartupMessages(library(libdr))\nsuppressPackageStartupMessages(library(ComplexHeatmap))\nsuppressPackageStartupMessages(library(tidyverse))\nlibrary(ggalluvial)\nlibrary(lcmm)\nlibrary(patchwork)\nlibrary(gameR)\nlibrary(pander)\nlibrary(libdr)\nset.seed(123)\nprefix &lt;- \"/Volumes/igmm/cvallejo-predicct/libdr/\"\n\n########################\n### Load FC models ###\n########################\n# set the number of groups\nG.fcal &lt;- numeric()\nmodels.fcal &lt;- list()\nG.cands &lt;- seq(2, 10)\nfor (G.cand in G.cands) {\n  file.name &lt;- paste0(prefix, \"cache/fcal/ncs/fcal-\", G.cand, \".RDS\")\n  if (file.exists(file.name)) {\n    G.fcal &lt;- c(G.fcal, G.cand)\n    models.fcal[[G.cand]] &lt;- readRDS(file.name)\n  }\n}\nrm(G.cand, G.cands)\n\ndict &lt;- readRDS(paste0(prefix, \"processed/dict.RDS\"))\n\n####################################################################\n### Load CRP moving average (no autocorrelation structure) models ###\n####################################################################\nG.crp &lt;- numeric()\nmodels.crp &lt;- list()\nG.cands &lt;- seq(2, 10)\nfor (G.cand in G.cands) {\n  file.name &lt;- paste0(prefix, \"cache/crp-ma/crp-\", G.cand, \".RDS\")\n  if (file.exists(file.name)) {\n    G.crp &lt;- c(G.crp, G.cand)\n    models.crp[[G.cand]] &lt;- readRDS(file.name)\n  }\n}\nrm(G.cand, G.cands)\nCodefc.remapping &lt;- function(x) {\n  plyr::mapvalues(x,\n                  from = seq(1, 8),\n                  to = c(7, 6, 4, 8, 1, 5, 2, 3))\n}\n\ncrp.remapping &lt;- function(x) {\n  plyr::mapvalues(x,\n                  from = seq(1, 8),\n                  to = c(2, 3, 1, 4, 5, 7, 6, 8))\n}\n\n\ncol.vec &lt;- c(\n  viridis::viridis(8),\n  viridis::inferno(8)\n)\n\nfcal.pprob &lt;- models.fcal[[8]]$pprob\ncrp.pprob &lt;- models.crp[[8]]$pprob\n\nfcal.ids &lt;- fcal.pprob$ids\ncrp.ids &lt;- crp.pprob$ids\n\n# Only IDs in both FCAL and CRP models\nids.comb &lt;- fcal.ids[fcal.ids %in% crp.ids]\nids.comb &lt;- ids.comb[order(ids.comb)]\n\n\n\nfc.classes &lt;- data.frame(fcal.pprob[, c(1, 2)], type = \"FC\")\nfc.classes$class &lt;- fc.remapping(fc.classes$class)\nfc.classes$class &lt;- as.factor(paste0(\"FC\", fc.classes$class))\n\n\ncrp.classes &lt;- data.frame(crp.pprob[, c(1, 2)], type = \"CRP\")\ncrp.classes$class &lt;- crp.remapping(crp.classes$class)\ncrp.classes$class &lt;- as.factor(paste0(\"CRP\", crp.classes$class))\n\nfc.classes$overlap &lt;- ifelse(fc.classes$ids %in% ids.comb, TRUE, FALSE)\ncrp.classes$overlap &lt;- ifelse(crp.classes$ids %in% ids.comb, TRUE, FALSE)\n\n\np_overlap_fc &lt;- fc.classes %&gt;%\n  mutate(overlap = factor(\n    overlap, levels = c(TRUE, FALSE),\n    labels = c(\"In the overlap cohort\", \"Not in the overlap cohort\"))) %&gt;%\n  plotCat(\"overlap\", class = \"class\")\n\np_overlap_crp &lt;- crp.classes %&gt;%\n  mutate(overlap = factor(\n    overlap, levels = c(TRUE, FALSE),\n    labels = c(\"In the overlap cohort\", \"Not in the overlap cohort\"))) %&gt;%\n  plotCat(\"overlap\", class = \"class\")\n\np &lt;- wrap_elements(p_overlap_fc) + \n  wrap_elements(p_overlap_crp) + \n  plot_annotation(tag_levels = \"A\") &\n  theme(plot.tag = element_text(size = 20, face = \"bold\"))\nggsave(\"plots/overlap.pdf\", p, width = 14, height = 10)\nggsave(\"plots/overlap.png\", p, width = 14, height = 10)\np\nCodeaux &lt;- table(crp.classes$class, crp.classes$overlap)\n\n# Numbers for the text\naux[8,2] / (aux[8,1] + aux[8,2])\n\n[1] 0.2732558\n\nCodesum(aux[1:7,2]) / sum(aux[1:7,1] + aux[1:7,2])\n\n[1] 0.4567827\n\nCodeclasses &lt;- rbind(fc.classes, crp.classes)\n\nclasses$class &lt;- as.factor(classes$class)\nclasses$type &lt;- as.factor(classes$type)\nclasses$type &lt;- relevel(classes$type, \"FC\")\n\n\nclasses &lt;- merge(classes,\n                 dict[, c(\"ids\", \"diagnosis\")],\n                 by = \"ids\", all.x = TRUE,\n                 all.y = FALSE)\n\np1 &lt;- classes %&gt;%\n  subset(overlap == TRUE) %&gt;%\n  ggplot(aes(\n  x = type,\n  stratum = class,\n  alluvium = ids,\n  fill = class,\n  label = class\n)) +\n  geom_flow() +\n  geom_stratum(alpha = 1) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(axis.line = element_line(colour = \"gray\")) +\n  xlab(\"Biomarker\") +\n  scale_fill_manual(values = col.vec)\n\np2 &lt;- classes %&gt;%\n  subset(overlap == TRUE) %&gt;%\n  filter(diagnosis == \"Crohn's Disease\") %&gt;%\n  ggplot(aes(\n  x = type,\n  stratum = class,\n  alluvium = ids,\n  fill = class,\n  label = class\n)) +\n  geom_flow() +\n  geom_stratum(alpha = 1) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(axis.line = element_line(colour = \"gray\")) +\n  xlab(\"Biomarker\") +\n  scale_fill_manual(values = col.vec)\n\n\np3 &lt;- classes %&gt;%\n  subset(overlap == TRUE) %&gt;%\n  filter(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  ggplot(aes(\n  x = type,\n  stratum = class,\n  alluvium = ids,\n  fill = class,\n  label = class\n)) +\n  geom_flow() +\n  geom_stratum(alpha = 1) +\n  geom_text(stat = \"stratum\", size = 3) +\n  theme_minimal() +\n  theme(axis.line = element_line(colour = \"gray\")) +\n  xlab(\"Biomarker\") +\n  scale_fill_manual(values = col.vec)\n\n\np &lt;- p1 + (p2 / p3) +\n  plot_annotation(tag_levels = \"A\") +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"none\",\n        plot.tag = element_text(size = 20, face = \"bold\")) &\n  guides(fill = guide_legend(nrow = 1))\n\np\n\n\n\n\n\n\nCodeggsave(\"paper/big-comp.png\", p, width = 12, height = 11)\nggsave(\"paper/big-comp.pdf\", p, width = 12, height = 11)\nCalculate some numbers in the overlap\nCodetab1 &lt;- classes.wide &lt;- classes %&gt;%\n  subset(overlap == TRUE) %&gt;%\n  pivot_wider(names_from = type, values_from = class)\n\ntab2 &lt;- classes.wide %&gt;%\n  subset(FC == \"FC1\") %&gt;%\n  count(CRP) %&gt;%\n  mutate(percentage = (n / sum(n) * 100))\n\ntab3 &lt;- classes.wide %&gt;%\n  subset(CRP %in% c(\"CRP1\", \"CRP2\")) %&gt;%\n  count(FC) %&gt;%\n  mutate(percentage = (n / sum(n) * 100))\n\ntab4 &lt;- classes.wide %&gt;%\n  subset(CRP %in% c(\"CRP8\")) %&gt;%\n  count(FC) %&gt;%\n  mutate(percentage = (n / sum(n) * 100))\n\ntab5 &lt;- classes.wide %&gt;%\n  subset(diagnosis == \"Ulcerative Colitis\") %&gt;%\n  subset(FC %in% c(\"FC7\")) %&gt;%\n  count(CRP) %&gt;%\n  mutate(percentage = (n / sum(n) * 100))\nOut of subjects paired in FC, how many are also paired in CRP?\nCodepaired &lt;- 0\ndoublePaired &lt;- 0\n\nfor (i in fc.df$ids) {\n  for (j in fc.df$ids) {\n    if (i != j) {\n      if (subset(fc.df, ids == i)$FCcluster == subset(fc.df, ids == j)$FCcluster){\n        paired &lt;- paired + 1\n        if (subset(crp.df, ids == i)$CRPcluster == subset(crp.df, ids == j)$CRPcluster) {\n          doublePaired &lt;- doublePaired + 1\n        }\n      }\n    }\n  }\n}\n\ndoublePaired / paired\n\n[1] 0.2593087\nOut of subjects paired in CRP, how many are also paired in FC?\nCodepaired &lt;- 0\ndoublePaired &lt;- 0\n\nfor (i in crp.df$ids) {\n  for (j in crp.df$ids) {\n    if (i != j) {\n      if (subset(crp.df, ids == i)$CRPcluster == subset(crp.df, ids == j)$CRPcluster){\n        paired &lt;- paired + 1\n        if (subset(fc.df, ids == i)$FCcluster == subset(fc.df, ids == j)$FCcluster) {\n          doublePaired &lt;- doublePaired + 1\n        }\n      }\n    }\n  }\n}\n\ndoublePaired / paired\n\n[1] 0.1585911"
  },
  {
    "objectID": "source/post/FCALvsCRP.html#reuse",
    "href": "source/post/FCALvsCRP.html#reuse",
    "title": "Comparison of FC and CRP clustering",
    "section": "Reuse",
    "text": "Reuse\nLicensed by CC BY unless otherwise stated."
  },
  {
    "objectID": "source/post/FCALvsCRP.html#session-info",
    "href": "source/post/FCALvsCRP.html#session-info",
    "title": "Comparison of FC and CRP clustering",
    "section": "Session info",
    "text": "Session info\n\nCodepander(sessionInfo())\n\nR version 4.4.3 (2025-02-28)\nPlatform: aarch64-apple-darwin20\nlocale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8\nattached base packages: grid, splines, stats, graphics, grDevices, utils, datasets, methods and base\nother attached packages: pander(v.0.6.6), gameR(v.0.0.7), lcmm(v.2.2.1), ggalluvial(v.0.12.5), lubridate(v.1.9.4), forcats(v.1.0.0), stringr(v.1.5.1), purrr(v.1.0.4), readr(v.2.1.5), tidyr(v.1.3.1), tibble(v.3.2.1), ggplot2(v.3.5.1), tidyverse(v.2.0.0), ComplexHeatmap(v.2.22.0), libdr(v.1.0.1), dplyr(v.1.1.4), magrittr(v.2.0.3) and patchwork(v.1.3.0)\nloaded via a namespace (and not attached): gtable(v.0.3.6), circlize(v.0.4.16), shape(v.1.4.6.1), rjson(v.0.2.23), xfun(v.0.51), htmlwidgets(v.1.6.4), GlobalOptions(v.0.1.2), lattice(v.0.22-6), tzdb(v.0.4.0), numDeriv(v.2016.8-1.1), vctrs(v.0.6.5), tools(v.4.4.3), generics(v.0.1.3), stats4(v.4.4.3), parallel(v.4.4.3), cluster(v.2.1.8), pkgconfig(v.2.0.3), Matrix(v.1.7-2), RColorBrewer(v.1.1-3), S4Vectors(v.0.44.0), lifecycle(v.1.0.4), compiler(v.4.4.3), farver(v.2.1.2), textshaping(v.1.0.0), munsell(v.0.5.1), codetools(v.0.2-20), clue(v.0.3-66), htmltools(v.0.5.8.1), yaml(v.2.3.10), pillar(v.1.10.1), crayon(v.1.5.3), viridis(v.0.6.5), iterators(v.1.0.14), foreach(v.1.5.2), nlme(v.3.1-167), tidyselect(v.1.2.1), digest(v.0.6.37), mvtnorm(v.1.3-3), stringi(v.1.8.4), labeling(v.0.4.3), fastmap(v.1.2.0), colorspace(v.2.1-1), cli(v.3.6.4), survival(v.3.8-3), withr(v.3.0.2), scales(v.1.3.0), timechange(v.0.3.0), spacefillr(v.0.4.0), rmarkdown(v.2.29), matrixStats(v.1.5.0), gridExtra(v.2.3), ragg(v.1.3.3), png(v.0.1-8), GetoptLong(v.1.0.5), hms(v.1.1.3), evaluate(v.1.0.3), knitr(v.1.49), IRanges(v.2.40.1), doParallel(v.1.0.17), viridisLite(v.0.4.2), rlang(v.1.1.5), Rcpp(v.1.0.14), glue(v.1.8.0), BiocGenerics(v.0.52.0), rstudioapi(v.0.17.1), jsonlite(v.1.9.1), plyr(v.1.8.9), R6(v.2.6.1), systemfonts(v.1.2.1) and marqLevAlg(v.2.0.8)"
  }
]