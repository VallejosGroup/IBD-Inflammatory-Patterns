---
title: "Cluster by diagnosis"
author:
  - name: "Nathan Constantine-Cooke"
    corresponding: true
    url: https://scholar.google.com/citations?user=2emHWR0AAAAJ&hl=en&oi=ao
    affiliations:
      - ref: CGEM
      - ref: HGU
---


```{R Setup}
#| message: false
set.seed(123)
if (file.exists("/.dockerenv")) { # Check if running in Docker
  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume
  prefix <- "data/"
} else {
  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is
  # mounted at /Volumes
  prefix <- "/Volumes/igmm/cvallejo-predicct/libdr/"
}


##########################
#--     Packages       --#
##########################

library(tidyverse)
# Support package (source found in libdr/)
library(libdr)
## Modelling ##
library(lcmm)
library(kml) # K-means
library(mice) # Imputation
## Presentation ##
library(patchwork)
library(ggdist)
library(ggalluvial)
library(pander)
library(qqplotr)
library(table1)
library(ggmosaic)

dict <- readRDS(paste0(prefix, "processed/dict.RDS"))
fcal <- readRDS(paste0(prefix, "processed/fcal.RDS"))
model.fc <- readRDS(paste0(prefix, "/cache/fcal/ncs/fcal-6.RDS"))
crp <- readRDS(paste0(prefix, "processed/crp.RDS"))
crp.median <- readRDS(paste0(prefix, "processed/median-crp.RDS"))
model.crp <- readRDS(paste0(prefix, "cache/crp-ma/crp-8.RDS"))

dict.fc <- subset(dict, ids %in% model.fc$pprob$ids)
dict.fc <- merge(dict.fc, model.fc$pprob[, c("ids", "class")])
fcal <- merge(fcal,
  dict.fc[, c("ids", "class", "diagnosis")],
  all.x = TRUE,
  all.y = FALSE
)

dict.crp <- subset(dict, ids %in% model.crp$pprob$ids)
dict.crp <- merge(dict.crp, model.crp$pprob[, c("ids", "class")])
crp.median <- merge(crp.median,
  dict.crp[, c("ids", "class", "diagnosis")],
  all.x = TRUE,
  all.y = FALSE
) 
```

## Faecal calprotectin

```{R}
fc.model.list <- list()
fc.model.list[[6]] <- model.fc
png("paper/fc-by-diag.png", width = 8, height = 7, units = "in", res = 300)
grid::grid.newpage()
spaghettiPlot(fcal,
  fc.model.list,
  G = 6,
  log = TRUE,
  tmax = 7,
  color = "diagnosis",
  var.time = "calpro_time"
)
dev.off()

cairo_pdf("paper/fc-by-diag.pdf", width = 8, height = 7)
grid::grid.newpage()
spaghettiPlot(fcal,
  fc.model.list,
  G = 6,
  log = TRUE,
  tmax = 7,
  color = "diagnosis",
  var.time = "calpro_time",
  sizes = TRUE
)
dev.off()

grid::grid.newpage()
spaghettiPlot(fcal,
  fc.model.list,
  G = 6,
  log = TRUE,
  tmax = 7,
  color = "diagnosis",
  var.time = "calpro_time"
)
```

```{R}
dict.fc$diagnosis <- factor(dict.fc$diagnosis,
  levels = c(
    "Crohn's Disease",
    "Ulcerative Colitis",
    "IBDU"
  )
)

dict.fc$class <- factor(dict.fc$class,
  levels = seq(1, 6),
  labels = paste0("FC", seq(1, 6))
)

p1 <- dict.fc %>%
  ggplot() +
  geom_mosaic(aes(x = product(class), fill = diagnosis), show.legend = FALSE) +
  scale_fill_manual(values = c("#F8766D", "#619CFF", "#00BA38")) + 
  theme_minimal() +
  labs(
    x = "Cluster",
    y = "IBD type"
  ) +
  ggtitle(
    "IBD type",
    "Faecal calprotectin clustering"
  )

ggsave("plots/mosaic/fc-by-diag.png",
  p1,
  width = 7.5,
  height = 5,
  units = "in",
  dpi = 300,
  create.dir = TRUE
)
ggsave("plots/mosaic/fc-by-diag.pdf", p1, width = 7.5, height = 5)
```


```{R}
p5 <-  dict.fc %>%
  ggplot(aes(x = class,  fill = diagnosis, color = diagnosis)) +
   geom_bar(position="fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF", "#00BA38")) +
  scale_color_manual(values = c("#CF544B", "#417BD2", "#01932A")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = "IBD type",
    color = "IBD type"
  )
```

## CRP

```{R}
crp.model.list <- list()
crp.model.list[[8]] <- model.crp
png("paper/crp-by-diag.png", width = 8, height = 9, units = "in", res = 300)
grid::grid.newpage()
spaghettiPlot(crp.median,
  crp.model.list,
  8,
  color = "diagnosis",
  var.time = "crp_time",
  tmax = 7
)
dev.off()

cairo_pdf("paper/crp-by-diag.pdf", width = 8, height = 9)
grid::grid.newpage()
spaghettiPlot(crp.median,
  crp.model.list,
  8,
  color = "diagnosis",
  var.time = "crp_time",
  tmax = 7
)
dev.off()

grid::grid.newpage()
spaghettiPlot(crp.median,
  crp.model.list,
  8,
  color = "diagnosis",
  var.time = "crp_time",
  tmax = 7
)
```

```{R}
dict.crp$diagnosis <- factor(dict.crp$diagnosis,
  levels = c(
    "Crohn's Disease",
    "Ulcerative Colitis",
    "IBDU"
  )
)

dict.crp$class <- factor(dict.crp$class,
  levels = seq(1, 8),
  labels = paste0("CRP", seq(1, 8))
)

p2 <- dict.crp %>%
  ggplot() +
  geom_mosaic(aes(x = product(class), fill = diagnosis), show.legend = FALSE) +
  scale_fill_manual(values = c("#F8766D", "#619CFF", "#00BA38")) +
  theme_minimal() +
  labs(
    x = "Cluster",
    y = "IBD type"
  ) +
  ggtitle(
    "IBD type",
    "CRP clustering"
  )

ggsave("plots/mosaic/crp-by-diag.png",
  p2,
  width = 7.5,
  height = 5,
  units = "in",
  dpi = 300,
  create.dir = TRUE
)
ggsave("plots/mosaic/crp-by-diag.pdf", p2, width = 7.5, height = 5)
```

```{R}
p6 <-  dict.crp %>%
  ggplot(aes(x = class,  fill = diagnosis, color = diagnosis)) +
   geom_bar(position="fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF", "#00BA38")) +
  scale_color_manual(values = c("#CF544B", "#417BD2", "#01932A")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = "IBD type",
    color = "IBD type"
  )
```


```{R}
tab <- table(model.fc$pprob$class)
cluster.count <- data.frame(Cluster = names(tab), Count = as.numeric(tab))

pred.fc.df <- data.frame(
  calpro_time = c(seq(0, 7, 0.01), seq(0, 7, 0.01)),
  diagnosis = c(
    rep("Crohn's Disease", 701),
    rep("Ulcerative Colitis", 701)
  )
)
pred.fc.df.update <- predictY(model.fc, pred.fc.df,
  var.time = "calpro_time",
  draws = TRUE
)$pred

temp <- data.frame(Time = NULL, Cluster = NULL, Value = NULL)

for (g in 1:6) {
  temp <- rbind(
    temp,
    data.frame(
      Time = seq(0, 7, 0.01),
      Cluster = g,
      Value = pred.fc.df.update[, g]
    )
  )
}

temp <- merge(temp, cluster.count, by = "Cluster")

p3 <- temp %>%
  ggplot(aes(
    x = Time,
    y = Value,
    color = as.factor(Cluster),
    linewidth = Count
  )) +
  geom_line() +
  theme_minimal() +
  labs(
    y = "Log (FC (Î¼g/g))",
    x = "Time (years)",
    color = "Cluster"
  ) +
  theme(legend.position = "bottom") +
  cairo_pdf("plots/fc-by-size.pdf", width = 7.5, height = 5)
print(p3)
invisible(dev.off())
```

```{R}
traj.outlines <- list()

for (g in 1:6) {
  traj.outlines[[g]] <- temp %>%
    filter(Cluster == g) %>%
    ggplot(aes(x = Time, y = Value)) +
    geom_line(color = "#757575") +
    theme_classic() +
    theme(text = element_blank(),
          axis.ticks = element_blank(),
          axis.line = element_line(color = "#dfdfdf")) +
    ylim(3, 6.5)
}

p <- p1 /
  (traj.outlines[[1]] +
    traj.outlines[[2]] +
    traj.outlines[[3]] +
    traj.outlines[[4]] +
    traj.outlines[[5]] +
    traj.outlines[[6]] +
    plot_layout(ncol = 6, guides = "collect", widths = unit(3.5, "cm"))) +
  plot_layout(heights = c(4, 1))

ggsave("plots/mosaic/fc-by-diag-with-traj.pdf",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
ggsave("plots/mosaic/fc-by-diag-with-traj.png",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
```


```{R}
p <- (p5  + theme(text =  element_text(size = 17))) /
  (traj.outlines[[1]] +
    traj.outlines[[2]] +
    traj.outlines[[3]] +
    traj.outlines[[4]] +
    traj.outlines[[5]] +
    traj.outlines[[6]] +
    plot_layout(ncol = 6, guides = "collect", widths = unit(3.9, "cm"))) +
  plot_layout(heights = c(4, 1))
  
ggsave("plots/percbar/fc-by-diag-with-traj.pdf",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65,
  create.dir = TRUE
)
ggsave("plots/percbar/fc-by-diag-with-traj.png",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
```


```{R}
tab <- table(model.crp$pprob$class)
cluster.count <- data.frame(Cluster = names(tab), Count = as.numeric(tab))

pred.crp.df <- data.frame(
  crp_time = c(seq(0, 7, 0.01), seq(0, 7, 0.01)),
  diagnosis = c(
    rep("Crohn's Disease", 701),
    rep("Ulcerative Colitis", 701)
  )
)
pred.crp.df.update <- predictY(model.crp,
  pred.crp.df,
  var.time = "crp_time",
  draws = TRUE
)$pred

temp2 <- data.frame(Time = NULL, Cluster = NULL, Value = NULL)

for (g in 1:8) {
  temp2 <- rbind(temp2, data.frame(
    Time = seq(0, 7, 0.01),
    Cluster = g,
    Value = pred.crp.df.update[, g]
  ))
}

temp2 <- merge(temp2, cluster.count, by = "Cluster")

p4 <- temp2 %>%
  ggplot(aes(
    x = Time,
    y = Value,
    color = as.factor(Cluster),
    linewidth = Count
  )) +
  geom_line() +
  theme_minimal() +
  labs(
    y = "Log (CRP (mg/L))",
    x = "Time (years)",
    color = "Cluster"
  ) +
  theme(legend.position = "bottom")
ggsave("plots/crp-by-size.pdf", p4, width = 7.5, height = 5)
```

```{R}
traj.outlines <- list()

for (g in 1:8) {
  traj.outlines[[g]] <- temp2 %>%
    filter(Cluster == g) %>%
    ggplot(aes(x = Time, y = Value)) +
    geom_line(color = "#757575") +
    theme_classic() +
    theme(text = element_blank(), axis.ticks = element_blank(), axis.line = element_line(color = "#dfdfdf")) +
    ylim(0, 5.5)
}

p <- p2 /
  (traj.outlines[[1]] +
    traj.outlines[[2]] +
    traj.outlines[[3]] +
    traj.outlines[[4]] +
    traj.outlines[[5]] +
    traj.outlines[[6]] +
    traj.outlines[[7]] +
    traj.outlines[[8]] +
    plot_layout(ncol = 8, guides = "collect", widths = unit(2.5, "cm"))) +
  plot_layout(heights = c(4, 1))

ggsave("plots/mosaic/crp-by-diag-with-traj.pdf",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
ggsave("plots/mosaic/crp-by-diag-with-traj.png",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
```

```{R}
 p <- (p6  + theme(text =  element_text(size = 17))) /
  (traj.outlines[[1]] +
    traj.outlines[[2]] +
    traj.outlines[[3]] +
    traj.outlines[[4]] +
    traj.outlines[[5]] +
    traj.outlines[[6]] +
    traj.outlines[[7]] +
    traj.outlines[[8]] +
    plot_layout(ncol = 8, guides = "collect", widths = unit(2.82, "cm"))) +
  plot_layout(heights = c(4, 1))
ggsave("plots/percbar/crp-by-diag-with-traj.pdf",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65,
  create.dir = TRUE
)
ggsave("plots/percbar/crp-by-diag-with-traj.png",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
```

```{R}
p <- (p1 + p2) / (p3 + p4)
ggsave("plots/mosaic/all-comp.png", p, width = 14, height = 10)
```
