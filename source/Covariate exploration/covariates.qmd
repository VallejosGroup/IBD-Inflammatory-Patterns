---
title: "Additional explanatory variables"
subtitle: "Sex and age"
author:
  - name: "Nathan Constantine-Cooke"
    corresponding: true
    url: https://scholar.google.com/citations?user=2emHWR0AAAAJ&hl=en&oi=ao
    affiliations:
      - ref: CGEM
      - ref: HGU
---

## Introduction

```{R Setup}
#| message: false
set.seed(123)
if (file.exists("/.dockerenv")) { # Check if running in Docker
  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume
  prefix <- "data/"
} else {
  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is
  # mounted at /Volumes
  prefix <- "/Volumes/igmm/cvallejo-predicct/libdr/"
}


##########################
#--     Packages       --#
##########################

library(tidyverse)
# Support package (source found in libdr/)
library(libdr)
## Modelling ##
library(lcmm)
library(kml) # K-means
library(mice) # Imputation
## Presentation ##
library(patchwork)
library(ggdist)
library(ggalluvial)
library(pander)
library(qqplotr)
library(table1)

dict <- readRDS(paste0(prefix, "processed/dict.RDS"))
fcal <- readRDS(paste0(prefix, "processed/fcal.RDS"))
model.fc <- readRDS(paste0(prefix, "/cache/fcal/ncs/fcal-6.RDS"))
crp <- readRDS(paste0(prefix, "processed/crp.RDS"))
crp.median <- readRDS(paste0(prefix, "processed/median-crp.RDS"))
model.crp <- readRDS(paste0(prefix, "cache/crp-ma/crp-8.RDS"))
```

To-date, the clustering of faecal calprotectin (FC) and CRP profiles have only
considered the biomarker trajectories and IBD type. This report explores
potential evidence for the need to incorporate sex and/or age at diagnosis into 
the models by stratifying cluster profiles by either sex or age. 

::: {.callout-note}
Sex and age (at recruitment) was found to be significantly associated with
baseline FC in PREdiCCt.
:::

## Faecal calprotectin

### Sex

```{R}
dict.fc <- subset(dict, ids %in% model.fc$pprob$ids)
dict.fc <- merge(dict.fc, model.fc$pprob[, c("ids", "class")])
fcal <- merge(fcal,
  dict.fc[, c("ids", "class", "sex")],
  all.x = TRUE,
  all.y = FALSE
)
fcal$sex <- factor(fcal$sex,
  levels = c("F", "M"),
  labels = c("Female", "Male")
)

chisq.test(dict.fc$class, dict.fc$sex) %>%
  pander()
```

::: {.panel-tabset group="scale"}

#### Log-scale

```{R}
#| results: "hold"
#| column: "body-outset"
#| fig-width: 10.6667
#| fig-height: 6

if (!dir.exists("../../plots/sex-comparison/fc")) {
  dir.create("../../plots/sex-comparison/fc", recursive = TRUE)
}

if (!dir.exists("../../plots/sex-comparison/fc/log")) {
  dir.create("../../plots/sex-comparison/fc/log")
}

if (!dir.exists("../../plots/sex-comparison/fc/original")) {
  dir.create("../../plots/sex-comparison/fc/original")
}

for (g in 1:6) {
  p <- fcal %>%
    filter(class == g) %>%
    ggplot(aes(x = calpro_time, y = calpro_result, color = as.factor(ids))) +
    geom_line(alpha = 0.2) +
    theme_bw() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
    facet_grid(. ~ sex) +
    scale_color_manual(values = rep("black", nrow(fcal))) +
    xlab("Time (years)") +
    ylab("Log (FCAL (\u03BCg/g))") +
    ggtitle(paste0("Cluster ", g))
  ggsave(paste0("../../plots/sex-comparison/fc/log/g=", g, ".png"),
    p,
    width = 16 * 2 / 3,
    height = 9 * 2 / 3
  )
  print(p)
}
```

#### Original units scale

```{R}
#| results: "hold"
#| column: "body-outset"
#| fig-width: 10.6667
#| fig-height: 6
for (g in 1:6) {
  p <- fcal %>%
    filter(class == g) %>%
    ggplot(aes(
      x = calpro_time,
      y = exp(calpro_result),
      color = as.factor(ids)
    )) +
    geom_line(alpha = 0.2) +
    theme_bw() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
    facet_grid(. ~ sex) +
    scale_color_manual(values = rep("black", nrow(fcal))) +
    xlab("Time (years)") +
    ylab("FCAL (\u03BCg/g)") +
    ggtitle(paste0("Cluster ", g))
  ggsave(paste0("../../plots/sex-comparison/fc/original/g=", g, ".png"),
    p,
    width = 16 * 2 / 3,
    height = 9 * 2 / 3
  )
  print(p)
}
```

:::

### Age

```{R}
ageLabels <- c("<18", "18-29", "30-49", "50-69", "\u226570")
dict.fc$ageCat <- cut(dict.fc$age,
  breaks = c(0, 18, 30, 50, 70, Inf),
  labels = ageLabels,
  include.lowest = TRUE,
  right = FALSE
)

fcal <- merge(fcal,
  dict.fc[, c("ids", "ageCat")],
  by = "ids",
  all.x = TRUE,
  all.y = FALSE
)

aov(class ~ age, data = dict.fc) %>%
  summary() %>%
  pander()
```

```{R}
quantile(dict.fc$age, na.rm = TRUE)
```

```{R}
#| label: fig-fc-age-dist
#| fig-cap: "Distribution of age at diagnosis by FC cluster assignment."
#| fig-height: 4
#| fig-width: 9.142857
#| warning: false
p1 <- dict.fc %>%
  mutate(class = factor(class, labels = paste("FC", seq(1, 6)))) %>%
  ggplot(aes(x = class, y = age)) +
  geom_violin(fill = "#5DB7DE", color = "#434371") +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")
print(p1)
```

Age has been calculated by subtracting year of diagnosis from year of birth. Age
is currently missing for some subjects meeting the FC criteria (but is not
missing for subjects meeting the CRP criteria). Age has been grouped into the
following categories, `r ageLabels`,

::: {.panel-tabset group="scale"}

#### Log-scale

```{R}
#| results: "hold"
#| column: "body-outset"
#| fig-width: 10.6667
#| fig-height: 6

if (!dir.exists("../../plots/age-comparison/fc")) {
  dir.create("../../plots/age-comparison/fc", recursive = TRUE)
}

if (!dir.exists("../../plots/age-comparison/fc/log")) {
  dir.create("../../plots/age-comparison/fc/log")
}

if (!dir.exists("../../plots/age-comparison/fc/original")) {
  dir.create("../../plots/age-comparison/fc/original")
}

for (g in 1:6) {
  p <- fcal %>%
    filter(class == g) %>%
    ggplot(aes(x = calpro_time, y = calpro_result, color = as.factor(ids))) +
    geom_line(alpha = 0.2) +
    theme_bw() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
    facet_wrap(. ~ ageCat, ncol = 3) +
    scale_color_manual(values = rep("black", nrow(fcal))) +
    xlab("Time (years)") +
    ylab("Log (FCAL (\u03BCg/g))") +
    ggtitle(paste0("Cluster ", g))
  ggsave(paste0("../../plots/age-comparison/fc/log/g=", g, ".png"),
    p,
    width = 16 * 2 / 3,
    height = 9 * 2 / 3
  )
  print(p)
}
```

#### Original units scale

```{R}
#| results: "hold"
#| column: "body-outset"
#| fig-width: 10.6667
#| fig-height: 6
for (g in 1:6) {
  p <- fcal %>%
    filter(class == g) %>%
    ggplot(aes(
      x = calpro_time,
      y = exp(calpro_result),
      color = as.factor(ids)
    )) +
    geom_line(alpha = 0.2) +
    theme_bw() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
    facet_wrap(. ~ ageCat, ncol = 3) +
    scale_color_manual(values = rep("black", nrow(fcal))) +
    xlab("Time (years)") +
    ylab("FCAL (\u03BCg/g)") +
    ggtitle(paste0("Cluster ", g))
  ggsave(paste0("../../plots/age-comparison/fc/original/g=", g, ".png"),
    p,
    width = 16 * 2 / 3,
    height = 9 * 2 / 3
  )
  print(p)
}
```

:::


## CRP

For CRP, we visualise the processed (median averaged) CRP instead of the
pre-transformed data. This allows patterns and differences to be more easily
seen.  

### Sex

```{R}
dict.crp <- subset(dict, ids %in% model.crp$pprob$ids)
dict.crp <- merge(dict.crp, model.crp$pprob[, c("ids", "class")])
crp.median <- merge(crp.median,
  dict.crp[, c("ids", "class", "sex")],
  all.x = TRUE,
  all.y = FALSE
)
crp.median$sex <- factor(crp.median$sex,
  levels = c("F", "M"),
  labels = c("Female", "Male")
)
chisq.test(dict.crp$class, dict.crp$sex) %>%
  pander()
```

::: {.panel-tabset group="scale"}

#### Log-scale

```{R}
#| results: "hold"
#| column: "body-outset"
#| fig-width: 10.6667
#| fig-height: 6

if (!dir.exists("../../plots/sex-comparison/crp")) {
  dir.create("../../plots/sex-comparison/crp", recursive = TRUE)
}

if (!dir.exists("../../plots/sex-comparison/crp/log")) {
  dir.create("../../plots/sex-comparison/crp/log")
}

if (!dir.exists("../../plots/sex-comparison/crp/original")) {
  dir.create("../../plots/sex-comparison/crp/original")
}

for (g in 1:8) {
  p <- crp.median %>%
    filter(class == g) %>%
    ggplot(aes(x = crp_time, y = crp_result, color = as.factor(ids))) +
    geom_line(alpha = 0.2) +
    theme_bw() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
    facet_grid(. ~ sex) +
    scale_color_manual(values = rep("black", nrow(crp))) +
    xlab("Time (years)") +
    ylab("Log (CRP (\u03BCg/mL))") +
    ggtitle(paste0("Cluster ", g))
  ggsave(paste0("../../plots/sex-comparison/crp/log/g=", g, ".png"),
    p,
    width = 16 * 2 / 3,
    height = 9 * 2 / 3
  )
  print(p)
}
```

#### Original units scale

```{R}
#| results: "hold"
#| column: "body-outset"
#| fig-width: 10.6667
#| fig-height: 6
for (g in 1:8) {
  p <- crp.median %>%
    filter(class == g) %>%
    ggplot(aes(x = crp_time, y = exp(crp_result), color = as.factor(ids))) +
    geom_line(alpha = 0.2) +
    theme_bw() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
    facet_grid(. ~ sex) +
    scale_color_manual(values = rep("black", nrow(crp))) +
    xlab("Time (years)") +
    ylab("CRP (\u03BCg/mL)") +
    ggtitle(paste0("Cluster ", g))
  ggsave(paste0("../../plots/sex-comparison/crp/original/g=", g, ".png"),
    p,
    width = 16 * 2 / 3,
    height = 9 * 2 / 3
  )
  print(p)
}
```

:::

### Age

Age has been calculated by subtracting year of diagnosis from year of birth. 


```{R}
quantile(dict.crp$age, na.rm = TRUE)
```

```{R}
dict.crp$ageCat <- cut(dict.crp$age,
  breaks = c(0, 18, 30, 50, 70, Inf),
  labels = c("<18", "18-29", "30-49", "50-69", "\u226570"),
  include.lowest = TRUE,
  right = FALSE
)

crp.median <- merge(crp.median,
  dict.crp[, c("ids", "ageCat")],
  by = "ids",
  all.x = TRUE,
  all.y = FALSE
)

aov(class ~ age, data = dict.crp) %>%
  summary() %>%
  pander()
```


```{R}
#| label: fig-crp-age-dist
#| fig-cap: "Distribution of age at diagnosis by CRP cluster assignment."
#| fig-height: 4
#| fig-width: 9.142857
#| warning: false
p2 <- dict.crp %>%
  mutate(class = factor(class, labels = paste("CRP", seq(1, 8)))) %>%
  ggplot(aes(x = class, y = age)) +
  geom_violin(fill = "#D4CDF4", color = "#7A6F9B") +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")

p <- p1 / p2 + plot_annotation(tag_levels = "A") &
  theme(plot.tag = element_text(size = 16, face = "bold"))

ggsave("plots/age-dist.png", p, width = 16 * 4 / 7, height = 8)
ggsave("plots/age-dist.pdf", p, width = 16 * 4 / 7, height = 8)
print(p2)
```

::: {.panel-tabset group="scale"}

#### Log-scale

```{R}
#| results: "hold"
#| column: "body-outset"
#| fig-width: 10.6667
#| fig-height: 6

if (!dir.exists("../../plots/age-comparison/crp")) {
  dir.create("../../plots/age-comparison/crp", recursive = TRUE)
}

if (!dir.exists("../../plots/age-comparison/crp/log")) {
  dir.create("../../plots/age-comparison/crp/log")
}

if (!dir.exists("../../plots/age-comparison/crp/original")) {
  dir.create("../../plots/age-comparison/crp/original")
}

for (g in 1:8) {
  p <- crp.median %>%
    filter(class == g) %>%
    ggplot(aes(x = crp_time, y = crp_result, color = as.factor(ids))) +
    geom_line(alpha = 0.2) +
    theme_bw() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
    facet_wrap(. ~ ageCat, ncol = 3) +
    scale_color_manual(values = rep("black", nrow(fcal))) +
    xlab("Time (years)") +
    ylab("Log (FCAL (\u03BCg/g))") +
    ggtitle(paste0("Cluster ", g))
  ggsave(paste0("../../plots/age-comparison/crp/log/g=", g, ".png"),
    p,
    width = 16 * 2 / 3,
    height = 9 * 2 / 3
  )
  print(p)
}
```

#### Original units scale

```{R}
#| results: "hold"
#| column: "body-outset"
#| fig-width: 10.6667
#| fig-height: 6
for (g in 1:8) {
  p <- crp.median %>%
    filter(class == g) %>%
    ggplot(aes(
      x = crp_time,
      y = exp(crp_result),
      color = as.factor(ids)
    )) +
    geom_line(alpha = 0.2) +
    theme_bw() +
    theme(legend.position = "none", plot.title = element_text(hjust = 0.5)) +
    facet_wrap(. ~ ageCat, ncol = 3) +
    scale_color_manual(values = rep("black", nrow(fcal))) +
    xlab("Time (years)") +
    ylab("FCAL (\u03BCg/g)") +
    ggtitle(paste0("Cluster ", g))
  ggsave(paste0("../../plots/age-comparison/crp/original/g=", g, ".png"),
    p,
    width = 16 * 2 / 3,
    height = 9 * 2 / 3
  )
  print(p)
}
```
:::

# Demographics table

```{R}
dict.fc$model <- "FC"
dict.crp$model <- "CRP"
combined <- rbind(dict.fc, dict.crp)
```

```{R}
table1(~ age + sex + diagnosis | model,
  data = combined
)
```
