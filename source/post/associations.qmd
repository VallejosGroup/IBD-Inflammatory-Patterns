---
title: "Associations with cluster membership"
author:
  - name: "Nathan Constantine-Cooke"
    corresponding: true
    url: https://scholar.google.com/citations?user=2emHWR0AAAAJ&hl=en&oi=ao
    affiliations:
      - ref: CGEM
      - ref: HGU
  - name: "Catalina A. Vallejos"
    url: https://scholar.google.com/citations?user=lkdrwm0AAAAJ&hl=en&oi=ao
    affiliations:
      - ref: HGU
---

## Introduction

```{R Setup}
#| message: false
set.seed(123)
if (file.exists("/.dockerenv")) { # Check if running in Docker
  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume
  prefix <- "data/"
} else {
  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is
  # mounted at /Volumes
  prefix <- "/Volumes/igmm/cvallejo-predicct/libdr/"
}

##########################
#--     Packages       --#
##########################

library(tidyverse)
#library(tidyr)
library(dplyr)
# Support package (source found in libdr/)
library(libdr)
## Modelling ##
library(lcmm)
library(nnet) # Multinomial logistic regression
## Survival analysis
library(survival)
library(survminer)
library(cmprsk)
## Presentation ##
library(patchwork)
library(ggdist)
library(ggalluvial)
library(pander)
library(qqplotr)
library(table1)
library(viridis)

library(ggmosaic)


dict <- readRDS(paste0(prefix, "processed/dict.RDS"))
fcal <- readRDS(paste0(prefix, "processed/fcal.RDS"))
model.fc <- readRDS(paste0(prefix, "/cache/fcal/ncs/fcal-8.RDS"))
crp <- readRDS(paste0(prefix, "processed/crp.RDS"))
crp.median <- readRDS(paste0(prefix, "processed/median-crp.RDS"))
model.crp <- readRDS(paste0(prefix, "cache/crp-ma/crp-8.RDS"))
```

This page explores potential associations between information available at
diagnosis, or shortly thereafter, and cluster membership. A descriptive analysis
of baseline variables in described in a
[previous page](../pre/baseline.qmd).

For univariate analyses, continuous data have been analysed via ANOVA, and
categorical data have been analysed using chi-squared or Fisher's exact test as
appropriate. Time-to-event data have been analysed using log-rank tests of 
Kaplan-Meier curves.

Multivariate analyses were also performed to potentially adjust for
confounding factors. 

As faecal calprotectin (FC) and C-reactive protein (CRP) were analysed
independently, this page is split into FC and CRP sections. 

## Faecal calprotectin analysis

### Merge subject-level metadata with model-derived quantities

Here, we create a `data.frame` that combines individual-level information
(e.g. age at diagnosis, sex) with model-derived quantities, such as the
posterior probabilities of class assignment. To facilitate visualisation, 
we also create discretised versions for some variables. 

```{r}
myDF.fc <- fcal %>%
  group_by(ids) %>%
  summarise(n.total = n(),
            followup = max(calpro_time),) %>%
  mutate(followup_cut = cut(followup, breaks = c(0, 2, 4, 6, 7)),
         n.total_cut = cut(n.total, breaks = c(0, 5, 10, 20, max(n.total))))
  
myDF.fc <- merge(myDF.fc, model.fc$pprob, by = "ids", all.x = FALSE, all.y = TRUE)
myDF.fc <- myDF.fc %>% 
  mutate(probmax = pmax(prob1, prob2, prob3, prob4, 
                        prob5, prob6, prob7, prob8)) #, prob9, prob10))
myDF.fc <- merge(myDF.fc, dict, by = "ids", all.x = TRUE, all.y = FALSE)

myDF.fc <- myDF.fc %>%
  mutate(class_order = plyr::mapvalues(
    class, from = seq_len(8), to = c(7, 6, 4, 8, 1, 5, 2, 3))) %>%
  mutate(class_order = factor(
    class_order, levels = 1:8, labels = paste0("FC", 1:8))) %>%
  mutate(prob_order1 = prob5, prob_order2 = prob7,
         prob_order3 = prob8, prob_order4 = prob3,
         prob_order5 = prob6, prob_order6 = prob2,
         prob_order7 = prob1, prob_order8 = prob4)
```

### Uncertainty cluster assignment probabilities 

First, we calculate the proportion of individuals assigned to each cluster
with probability above 0.5.

```{r}
p1 <- myDF.fc %>% 
  group_by(class_order) %>%
  summarise(prop50 = 100*mean(probmax > 0.5),
            prop75 = 100*mean(probmax > 0.75)) %>%
  ggplot(aes(x = class_order, y = prop50)) +
  ylim(c(0,100)) +
  xlab("Assigned cluster") +
  ylab("% assigned with prob > 0.5") +
  geom_bar(stat = "identity") +
  theme_minimal()

p1 
```


Next, we calculate average posterior probabilities of cluster assignment. 

```{r}
myDF.fc_means <- myDF.fc %>% 
  group_by(class_order, followup_cut) %>%
  summarise(across(starts_with("prob_order"), function(x) mean(x, na.rm = TRUE)),
            .groups = "drop") %>%
  pivot_longer(cols = starts_with("prob_order"), names_to = "prob_order")
```

@fig-fc-prob-fup shows how cluster assignment probabilities change as follow-up
for subjects increases. As one would expect, probabilities typically increase as
as follow-up increases. This relationship appears to depend upon when the mean
trajectory for the assigned cluster substantially differs from the other
clusters. FC8 shows high posterior probabilities with even short follow-up as
this is the only cluster with low FC at diagnosis. However, longer follow-ups 
are required to distinguish other clusters. For example, individuals
assigned to FC6 that have a short follow-up (< 4 years from diagnosis) have, on 
average, a high probability of being assigned to FC3 instead 
(`r round(myDF.fc_means$value[myDF.fc_means$class_order == "FC6" & myDF.fc_means$followup_cut == "(0,4]" & myDF.fc_means$prob_order == "prob_order6"], 3)`
versus
`r round(myDF.fc_means$value[myDF.fc_means$class_order == "FC6" & myDF.fc_means$followup_cut == "(0,4]" & myDF.fc_means$prob_order == "prob_order3"], 3)`).
This is not unexpected, as FC3 and FC6 share similar patterns within the first
2 years.  


```{R}
#| label: fig-fc-prob-fup
#| fig-cap: "Demonstration of how mean posterior probabilities of cluster assignment for subjects changes based upon follow-up and assigned cluster."
#| column: body-outset
#| fig-width: 11
#| fig-height: 8


# Assign level order otherwise alphanumerical order used 
# and add sample sizes to labels
myDF.fc_means <- myDF.fc_means %>%
  mutate(prob_order = factor(prob_order,
                             levels = c(paste0("prob_order", 1:8)),
                             labels = c(paste0("FC", 1:8))),
         class_order = factor(class_order,
                              levels = paste0("FC", 1:8),
                              labels = paste0("Assigned to FC", 1:8, "\n n = ",
                                              as.vector(table(myDF.fc$class_order)))))

p2 <- myDF.fc_means %>%
  ggplot(aes(fill = prob_order, y = value, x = followup_cut)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(.~class_order, ncol = 4) + 
  theme_minimal() +
  theme(legend.title = element_text(hjust = 0.5),
        strip.background = element_rect(color = "lightgray",
                                         linewidth = 1.5,
                                         linetype="solid")) +
  labs(x = "Follow-up cutoff (years)",
       y = "",
       fill = "Mean posterior\nprobability of\ncluster assignment") +
  scale_fill_viridis_d(option = "inferno") 

p2
# p + scale_fill_viridis_d(option = "D") 
# p + scale_fill_brewer(palette = "Blues")

ggsave("plots/fc-prob-fup.png", p2, width = 11, height = 8, units = "in")
ggsave("plots/fc-prob-fup.pdf", p2, width = 11, height = 8, units = "in")
p
```


### Associations with respect to cluster assignments

This section displays descriptive plots to summarize marginal associations
between cluster assignments and individual-level covariates. We also explore 
univariate and multivariate associations with respect to cluster assignment 
using multinomial logistic regression. As a sensitivity analysis, we also 
consider restricting the analysis to only consider individuals whose class 
assignment was less uncertain (with posterior probability > 0.5).

<!--- CAV: add here a table with summary statistics per cluster;
include, for each cluster, the proportion of individuals assigned with
prob > 0.5---> 

#### For all individuals

Here, we consider associations with respect to information available at 
diagnosis: age, sex and IBD type. 

```{r}
p_diagnosis_all <- myDF.fc %>%
  plotCat("diagnosis", class = "class_order") 

p_sex_all <- myDF.fc %>%
  plotCat("sex", class = "class_order")

p_age_all <- myDF.fc %>%
  ggplot(aes(x = class_order, y = age)) +
  geom_violin(fill = "#5DB7DE", color = "#434371") +
  geom_boxplot(width=0.1, color="black", alpha=0.2) +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")

p_mlr_all <- myDF.fc %>%
  mutate(class_order = relevel(class_order, ref = "FC4")) %>%
  mlrPlot(var = c("diagnosis", "age", "sex"), class = "class_order") 

wrap_elements(p_diagnosis_all) +
  wrap_elements(p_mlr_all$plot_both$`diagnosisUlcerative Colitis` + 
                  p_mlr_all$plot_both$`diagnosisIBDU` + plot_layout(guides = "collect")) +
  plot_annotation(tag_levels = "A", title = "All subjects")

(wrap_elements(p_age_all) + p_mlr_all$plot_both$age) /
  (wrap_elements(p_sex_all) + p_mlr_all$plot_both$sexMale) +
    plot_annotation(tag_levels = "A", title = "All subjects")
```

Restricted to those with posterior probability > 0.5

```{r}
p_diagnosis <- myDF.fc %>%
  filter(probmax > 0.5) %>%
  plotCat("diagnosis", class = "class_order") 

p_sex <- myDF.fc %>%
  filter(probmax > 0.5) %>%
  plotCat("sex", class = "class_order")

p_age <- myDF.fc %>%
  filter(probmax > 0.5) %>%
  ggplot(aes(x = class_order, y = age)) +
  geom_violin(fill = "#5DB7DE", color = "#434371") +
  geom_boxplot(width=0.1, color="black", alpha=0.2) +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")

p_mlr <- myDF.fc %>%
  filter(probmax > 0.5) %>%
  mutate(class_order = relevel(class_order, ref = "FC4")) %>%
  mlrPlot(var = c("diagnosis", "age", "sex"), class = "class_order") # , "baseline_fc"

wrap_elements(p_diagnosis_all) +
  wrap_elements(p_mlr_all$plot_both$`diagnosisUlcerative Colitis` + 
                  p_mlr_all$plot_both$`diagnosisIBDU` + plot_layout(guides = "collect")) +
  plot_annotation(tag_levels = "A", title = "All subjects")

(wrap_elements(p_age_all) + p_mlr_all$plot_both$age) /
  (wrap_elements(p_sex_all) + p_mlr_all$plot_both$sexMale) +
    plot_annotation(tag_levels = "A", title = "All subjects")
```

Some statistics to be used in the text:

```{r}
myDF.fc %>%
  mutate(class_aux = ifelse(class_order %in% c("FC6"), class_order, "Other")) %>%
  group_by(class_aux, diagnosis) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count) * 100))

myDF.fc %>%
  mutate(class_aux = ifelse(class_order %in% c("FC1", "FC8"), class_order, "Other")) %>%
  group_by(class_aux, diagnosis) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count) * 100))

myDF.fc %>%
  mutate(class_aux = ifelse(class_order %in% c("FC7"), class_order, "Other")) %>%
  group_by(class_aux, diagnosis) %>%
  summarise(count = n()) %>%
  mutate(percentage = (count / sum(count) * 100))
```

#### Crohn's disease only

For CD patients, we also consider additional phenotyping information. This
includes the following information:

**Smoking**

This is recorded as a binary (Yes/No) variable and is primarily based on 
self-reporting. As such, it may not necessarily reflect true smoking status.
Smoking was missing for approximately 
`r round(mean(is.na(myDF.fc$Smoke[myDF.fc$diagnosis == "Crohn's Disease"])) * 100)`%
of CD patients in the FC cohort. 

**Montreal location**

Montreal location refers to where gastrointestinal inflammation is present and
is categorised as:

* L1: Ileal, limited to the ileum which is the final segment of the small
  intestine.
* L2: Colonic, limited to the colon/large intestine.
* L3: Ileocolonic, inflammation is present in both the ileum and colon.

Montreal location was missing for approximately 
`r round(mean(is.na(myDF.fc$Location[myDF.fc$diagnosis == "Crohn's Disease"])) * 100)`%
of CD patients in the FC cohort. 

**Montreal behaviour**

Montreal behaviour describes another clinical phenotype and is defined as
follows:

* B1: Inflammatory, in other words non-stricturing and non-penetrating
* B2: Stricturing, where the formation of fibrosis leads to the narrowing of the
  intestine.
* B3: Penetrating, where the inflammation causes the formation of fistulas or
  abscesses.

Due to small numbers, B2 and B3 are merged into a single group (complicated CD) 
when analysing Montreal behaviour. 

```{r}
myDF.fc <- myDF.fc %>%
  mutate(Behaviour_merged = plyr::mapvalues(Behaviour,
                                      from = c("B1", "B2", "B3", NA),
                                      to = c("B1", "B2 or B3", "B2 or B3", NA)))
```

Montreal behaviour was missing for approximately 
`r round(mean(is.na(myDF.fc$Behaviour[myDF.fc$diagnosis == "Crohn's Disease"])) * 100)`%
of CD patients in the FC cohort. 

**Upper GI inflammation**

Upper GI inflammation refers to any gastrointestinal inflammation further up than
the ileum. Usually, upper inflammation is considered a _modifier_ for Montreal
location and is denoted L4. Upper GI inflammation (L4) was missing for a high 
proportion of CD individuals in the FC cohort (approx 
`r round(mean(is.na(myDF.fc$L4[myDF.fc$diagnosis == "Crohn's Disease"])) * 100)`%. 
This is because the required investigations are only carried out where upper GI 
inflammation is suspected. As such, we have manually mapped missing L4 values 
as "No" (i.e. no upper GI inflammation for the associated patients). 

```{r}
myDF.fc <- myDF.fc %>%
  mutate(L4 = ifelse(!is.na(L4), L4, "No"))
```

**Perianal disease**

Perianal disease is considered a modifier for Montreal behaviour and is a severe
complication of Crohn's disease involving inflammation around the anus.

Perianal disease status was missing for approximately 
`r round(mean(is.na(myDF.fc$Perianal[myDF.fc$diagnosis == "Crohn's Disease"])) * 100)`%
of CD patients in the FC cohort. 

**NOTE: For the purposes of the multinomial logistic regression model, 
individuals with missing values in any of these variables will be excluded.
For consistency, such individuals will also be excluded from the univariate
summary plots.**

For this purpose, we create a missingness indicator (`missingN_cd`) which
will facilitate the application of such filter. 

```{r}
myDF.fc <- myDF.fc %>%
  mutate(missingN_cd = is.na(Smoke) + is.na(Location) + is.na(L4) + 
           is.na(Behaviour) + is.na(Perianal))

with(myDF.fc[myDF.fc$diagnosis == "Crohn's Disease",], table(missingN_cd > 0))
```

As shown above, `r sum(myDF.fc$missingN_cd[myDF.fc$diagnosis == "Crohn's Disease"] > 0)` will be excluded hereafter. 

Here is the code to explore the associations:

```{r}
p_sex_cd <- myDF.fc %>%
  filter(diagnosis == "Crohn's Disease") %>%
  filter(missingN_cd == 0) %>%
  plotCat("sex", class = "class_order")

p_age_cd <- myDF.fc %>%
  filter(diagnosis == "Crohn's Disease") %>%
  filter(missingN_cd == 0) %>%
  ggplot(aes(x = class_order, y = age)) +
  geom_violin(fill = "#5DB7DE", color = "#434371") +
  geom_boxplot(width=0.1, color="black", alpha=0.2) +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")

p_smoke_cd <- myDF.fc %>%
  filter(diagnosis == "Crohn's Disease") %>%
  filter(missingN_cd == 0) %>%
  mutate(Smoke = ifelse(!is.na(Smoke), Smoke, "Missing")) %>%
  plotCat("Smoke", class = "class_order")

p_location_cd <- myDF.fc %>%
  filter(diagnosis == "Crohn's Disease") %>%
  filter(missingN_cd == 0) %>%
  mutate(Location = ifelse(!is.na(Location), Location, "Missing")) %>%
  plotCat("Location", class = "class_order")

p_behaviour_cd <- myDF.fc %>%
  filter(diagnosis == "Crohn's Disease") %>%
  filter(missingN_cd == 0) %>%
  mutate(Behaviour = ifelse(!is.na(Behaviour_merged), Behaviour_merged, "Missing")) %>%
  plotCat("Behaviour", class = "class_order")

p_L4_cd <- myDF.fc %>%
  filter(diagnosis == "Crohn's Disease") %>%
  filter(missingN_cd == 0) %>%
  mutate(L4 = ifelse(!is.na(L4), L4, "Missing")) %>%
  plotCat("L4", class = "class_order")

p_perianal_cd <- myDF.fc %>%
  filter(diagnosis == "Crohn's Disease") %>%
  filter(missingN_cd == 0) %>%
  mutate(Perianal = ifelse(!is.na(Perianal), Perianal, "Missing")) %>%
  plotCat("Perianal", class = "class_order")

p_mlr_cd <- myDF.fc %>%
  filter(diagnosis == "Crohn's Disease") %>%
  filter(missingN_cd == 0) %>%
  mutate(class_order = relevel(class_order, ref = "FC4")) %>%
  mlrPlot(var = c("age", "sex", 
                  "Smoke", "Location", "L4", "Behaviour_merged", "Perianal"), 
          class = "class_order")


(wrap_elements(p_age_cd) + p_mlr_cd$plot_both$age) /
  (wrap_elements(p_sex_cd) + p_mlr_cd$plot_both$sexMale) +
    plot_annotation(tag_levels = "A", title = "CD patients only")

wrap_elements(p_smoke_cd) + p_mlr_cd$plot_both$SmokeYes + 
  plot_annotation(title = "CD patients only")

wrap_elements(p_location_cd) + 
  (p_mlr_cd$plot_both$LocationL2 + p_mlr_cd$plot_both$LocationL3 + 
     plot_layout(guides = "collect")) + 
  plot_annotation(title = "CD patients only")

wrap_elements(p_L4_cd) + p_mlr_cd$plot_both$L4Yes +
  plot_annotation(title = "CD patients only")

wrap_elements(p_behaviour_cd) + p_mlr_cd$plot_both$`Behaviour_mergedB2 or B3` +
  plot_annotation(title = "CD patients only")

wrap_elements(p_perianal_cd) + p_mlr_cd$plot_both$PerianalYes + 
  plot_annotation(title = "CD patients only")
```

#### Ulcerative Colitis only

The additional phenotyping information available for UC patients consists of: 

**Smoking**

This is defined in the same way as for CD patients. 

Smoking was missing for approximately 
`r round(mean(is.na(myDF.fc$Smoke[myDF.fc$diagnosis == "Ulcerative Colitis"])) * 100)`%
of UC patients in the FC cohort. 

**Extent**

<!--- CAV: Nathan to describe ---> 


**NOTE: As for CD cases, individuals with missing values in any of these 
variables will be excluded from the association analysis.
For consistency, such individuals will also be excluded from the univariate
summary plots.**

For this purpose, we create a missingness indicator (`missingN_uc`) which
will facilitate the application of such filter. 

```{r}
myDF.fc <- myDF.fc %>%
  mutate(missingN_uc = is.na(Smoke) + is.na(Extent))

with(myDF.fc[myDF.fc$diagnosis == "Ulcerative Colitis",], table(missingN_uc > 0))
```

As shown above, `r sum(myDF.fc$missingN_uc[myDF.fc$diagnosis == "Ulcerative Colitis"] > 0)` 
will be excluded hereafter. 


```{r}
p_sex_uc <- myDF.fc %>%
  filter(diagnosis == "Ulcerative Colitis") %>%
  filter(missingN_uc == 0) %>%
  plotCat("sex", class = "class_order")

p_age_uc <- myDF.fc %>%
  filter(diagnosis == "Ulcerative Colitis") %>%
  filter(missingN_uc == 0) %>%
  ggplot(aes(x = class_order, y = age)) +
  geom_violin(fill = "#5DB7DE", color = "#434371") +
  geom_boxplot(width=0.1, color="black", alpha=0.2) +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")

p_smoke_uc <- myDF.fc %>%
  filter(diagnosis == "Ulcerative Colitis") %>%
  filter(missingN_uc == 0) %>%
  mutate(Smoke = ifelse(!is.na(Smoke), Smoke, "Missing")) %>%
  plotCat("Smoke", class = "class_order")

p_extent_uc <- myDF.fc %>%
  filter(diagnosis == "Ulcerative Colitis") %>%
  filter(missingN_uc == 0) %>%
  mutate(Extent = ifelse(!is.na(Extent), Extent, "Missing")) %>%
  plotCat("Extent", class = "class_order")

p_mlr_uc <- myDF.fc %>%
  filter(diagnosis == "Ulcerative Colitis") %>%
  filter(missingN_uc == 0) %>%
  mutate(class_order = relevel(class_order, ref = "FC4")) %>%
  mlrPlot(var = c("age", "sex", "Smoke", "Extent"),
          class = "class_order")

(wrap_elements(p_age_uc) + p_mlr_uc$plot_both$age) /
  (wrap_elements(p_sex_uc) + p_mlr_uc$plot_both$sexMale) +
    plot_annotation(tag_levels = "A", title = "UC patients only")

wrap_elements(p_smoke_uc) + p_mlr_uc$plot_both$SmokeYes + 
  plot_annotation(title = "UC patients only")

wrap_elements(p_extent_uc) + 
  (p_mlr_uc$plot_both$ExtentE2 + p_mlr_uc$plot_both$ExtentE3 +
     plot_layout(guides = "collect")) +
  plot_annotation(title = "UC patients only")
```

### Advanced therapy use

#### Overall cluster-specific trajectories

Here, we extract overall cluster-specific trajectories as these will be used
for visualisation purposes in order to better understand patterns of AT use.
Note that model outputs do not match the reordered clusters (based on cumulative
inflammation) used throughout this report. As such, we use `title.mapping` to
re-order the trajectories when these are plotted. 

```{r cluster specific trajectories}
time.pred <- seq(0, 7, by = 0.01)

pred.fc.df <- data.frame(
      calpro_time = c(time.pred, time.pred),
      diagnosis = c(
        rep("Crohn's Disease", length(time.pred)),
        rep("Ulcerative Colitis", length(time.pred))
      )
    )
pred.fc.df.update <- lcmm::predictY(model.fc,
                                    pred.fc.df,
                                    var.time = "calpro_time",
                                    draws = TRUE
                                    )$pred

pred <- predictY(model.fc, pred.fc.df, var.time = "calpro_time", draws = TRUE)$pred

pred <- as.data.frame(pred[1:length(time.pred), ])
pred$time <- time.pred

ylimit <- log(2500)
title.mapping <- c(7, 6, 4, 8, 1, 5, 2, 3)
```

#### Summary statistics of AT use

Overall, we observe significant differences in AT across clusters. In particular,
after adjusting for age and sex, AT was significantly lower in FC2. 


```{r}
p_AT <- myDF.fc %>% 
  mutate(AT = factor(AT, levels = c(0, 1), labels = c("No", "Yes"))) %>%
   plotCat("AT", class = "class_order")

p_AT_mlr <- myDF.fc %>%
  mutate(AT = factor(AT, levels = c(0, 1), labels = c("No", "Yes"))) %>%
  mutate(class_order = relevel(class_order, ref = "FC4")) %>%
  mlrPlot(var = c("age", "sex", "AT"),
          class = "class_order")

wrap_elements(p_AT) + p_AT_mlr$plot_both$AT 
```

However, as seen below, AT use varies across different IBD types (highest
among CD patients, lowest among IBDU) patients. 

```{r}
myDF.fc %>% 
  mutate(AT = factor(AT, levels = c(0, 1), labels = c("No", "Yes"))) %>%
  plotCat("AT", class = "diagnosis") 
```

As such, we also stratify cluster-specific AT usage according to IBD type.
For this purpose, we exclude IBDU due to its small size. 

```{r}
p_AT_cd <- myDF.fc %>% 
  subset(diagnosis == "Crohn's Disease") %>%
  mutate(AT = factor(AT, levels = c(0, 1), labels = c("No", "Yes"))) %>%
  plotCat("AT", class = "class_order")
  
p_AT_uc <- myDF.fc %>% 
  subset(diagnosis == "Ulcerative Colitis") %>%
  mutate(AT = factor(AT, levels = c(0, 1), labels = c("No", "Yes"))) %>%
  plotCat("AT", class = "class_order")
  

wrap_elements(p_AT) + ggtitle("CD + UC + IBDU") + 
  wrap_elements(p_AT_cd) + ggtitle("CD only") +
  wrap_elements(p_AT_uc) + ggtitle("UC only")
```

#### Cumulative AT usage

This is based on the first AT prescription for each patient.

W/ Density

```{R}
dens.cd.big <- data.frame(x = numeric(),
                          y = numeric(),
                          CumulativeY = numeric(),
                          class = character())


dens.uc.big <- data.frame(x = numeric(),
                          y = numeric(),
                          CumulativeY = numeric(),
                          class = character())


km.df <- data.frame(time = numeric(),
                    cumhaz = numeric(),
                    class = character(),
                    diag = character())

for (g in 1:8) {
  temp.cd <- myDF.fc %>%
    filter(class_order == paste0("FC", g)) %>%
    filter(diagnosis == "Crohn's Disease")
  
  
  temp.cd  <- temp.cd  %>%
    mutate(AT_line_1 = if_else(AT == 0, 7, as.numeric(AT_line_1))) %>%
    mutate(AT = if_else(AT_line_1 >= 7, 0, AT)) %>%
    mutate(AT_line_1  = if_else(AT_line_1  > 7, 7, AT_line_1)) %>%
    mutate(AT_line_1 = if_else(AT_line_1 < 0, 0, AT_line_1))
  
  km <- survfit(Surv(AT_line_1, AT) ~ 1, data = temp.cd)
  km.df <- rbind(km.df,
                 data.frame(time = km$time,
                            cumhaz =  1 - km$surv,
                            class = paste0("FC", g),
                            diag = "CD"))
  
  
  temp.uc <- myDF.fc %>%
    filter(class_order == paste0("FC", g)) %>%
    filter(diagnosis == "Ulcerative Colitis")
  

  temp.uc  <- temp.uc  %>%
    mutate(AT_line_1 = if_else(AT == 0, 7, as.numeric(AT_line_1))) %>%
    mutate(AT = if_else(AT_line_1 >= 7, 0, AT)) %>%
    mutate(AT_line_1  = if_else(AT_line_1  > 7, 7, AT_line_1)) %>%
    mutate(AT_line_1 = if_else(AT_line_1 < 0, 0, AT_line_1))
  
  km <- survfit(Surv(AT_line_1, AT) ~ 1, data = temp.uc, stype = 2)
  km.df <- rbind(km.df,
                 data.frame(time = km$time,
                            cumhaz =  1 - km$surv,
                            class = paste0("FC", g),
                            diag = "UC"))
  
  temp.cd <- temp.cd %>%
    filter(AT == 1)
  
  dens.cd <- density(temp.cd$AT_line_1, kernel = "gaussian", from = 0, to = 7, na.rm = TRUE)
  dens.cd <- data.frame(x = dens.cd$x, y = dens.cd$y)
  dens.cd$CumulativeY <- cumsum(dens.cd$y)
  dens.cd$class <- paste0("FC", g)
  dens.cd.big <- rbind(dens.cd.big,
                       dens.cd)

  temp.uc <- temp.uc %>%
    filter(AT == 1)
  dens.uc <- density(temp.uc$AT_line_1, kernel = "gaussian", from = 0, to = 7, na.rm = TRUE)
  dens.uc <- data.frame(x = dens.uc$x, y = dens.uc$y)
#  dens.uc$y <- dens.uc$y/nrow(temp.uc)
  dens.uc$CumulativeY <- cumsum(dens.uc$y)
  dens.uc$class <- paste0("FC", g)
  dens.uc.big <- rbind(dens.uc.big,
                       dens.uc)
}

dens.cd.big$diag <- "CD"
dens.uc.big$diag <- "UC"

dens <- rbind(dens.cd.big, dens.uc.big)


p1 <- ggplot(dens, aes(x = x, y = y, color = diag, fill = diag)) +
  geom_area(alpha = .5, position = 'identity') +
  geom_line(aes(y = cumhaz, x = time), data = km.df, lty = 2) +
  facet_wrap(~class, ncol = 2) +
  theme_minimal() 
p1
```

w/ trajectories

```{R}
km.df <- data.frame(time = numeric(),
                    cumhaz = numeric(),
                    class = character(),
                    diag = character())

traj.df <- data.frame(prediction = numeric(),
                      time = numeric(),
                      class = character())


for (g in 1:8) {
  traj <- pred[, c(g, ncol(pred)), ]
  names(traj) <- c("prediction", "time")
  traj$class <- paste0("FC", g)
  traj.df <- rbind(traj.df, traj)
  
  temp.cd <- myDF.fc %>%
    filter(class_order == paste0("FC", g)) %>%
    filter(diagnosis == "Crohn's Disease")

  temp.cd  <- temp.cd  %>%
    mutate(AT_line_1 = if_else(AT == 0, 7, as.numeric(AT_line_1))) %>%
    mutate(AT = if_else(AT_line_1 >= 7, 0, AT)) %>%
    mutate(AT_line_1  = if_else(AT_line_1  > 7, 7, AT_line_1)) %>%
    mutate(AT_line_1 = if_else(AT_line_1 < 0, 0, AT_line_1))
  
  km <- survfit(Surv(AT_line_1, AT) ~ 1, data = temp.cd)
  km.df <- rbind(km.df,
                 data.frame(time = km$time,
                            cumhaz =  1 - km$surv,
                            class = paste0("FC", g),
                            diag = "CD"))
  
  
  temp.uc <- myDF.fc %>%
    filter(class_order == paste0("FC", g)) %>%
    filter(diagnosis == "Ulcerative Colitis")
  

  temp.uc  <- temp.uc  %>%
    mutate(AT_line_1 = if_else(AT == 0, 7, as.numeric(AT_line_1))) %>%
    mutate(AT = if_else(AT_line_1 >= 7, 0, AT)) %>%
    mutate(AT_line_1  = if_else(AT_line_1  > 7, 7, AT_line_1)) %>%
    mutate(AT_line_1 = if_else(AT_line_1 < 0, 0, AT_line_1))
  
  km <- survfit(Surv(AT_line_1, AT) ~ 1, data = temp.uc)
  km.df <- rbind(km.df,
                 data.frame(time = km$time,
                            cumhaz =  1 - km$surv,
                            class = paste0("FC", g),
                            diag = "UC"))
  temp.cd <- temp.cd %>%
    filter(AT == 1)
}

traj.df$class <- plyr::mapvalues(traj.df$class, 
                                 from = paste0("FC", seq(1, 8)),
                                 to = paste0("FC", c(7, 6, 4, 8, 1, 5, 2, 3)))

p1 <- ggplot(km.df, aes(x = time, y = cumhaz)) +
  geom_line(aes(color = diag), lty = 2) +
  geom_line(aes(x = time, y = prediction/log(2500) ), data = traj.df, color = "black") +
  facet_wrap(~class, ncol = 2) +
  theme_minimal() + 
  scale_y_continuous(name = "Cumulative",
                     
      sec.axis = sec_axis(transform = ~.*log(2500),
                          name = "Log (FC (\u03BCg/g))"))
p1
```

## CRP

```{R}
model.crp$pprob$class <- plyr::mapvalues(
  model.crp$pprob$class,
  from = c(8, 9),
  to = c(7, 8)
)
```

As Cluster CRP2 and CRP4 are characterised by very similar longitudinal
profiles, we have elected to merge these clusters. All subjects in cluster
4 have been migrated to cluster 2 with clusters 5-9 renumbered accordingly.

Similar to FC, we will explore associations only for subjects with a
sufficiently high posterior probability of being in their assigned cluster. As 
cluster assignment is exclusive, we are able to add the posterior probabilities
for the merged clusters together to determine the posterior probability for
CRP2 after the merge. 

### Sex

```{R}
dict.crp <- subset(dict, ids %in% model.crp$pprob$ids)
dict.crp <- merge(dict.crp, model.crp$pprob[, c("ids", "class")])


crp.median <-
  crp.median %>%
  select(-sex) %>%
  merge(dict.crp[, c("ids", "class", "sex")],
    all.x = TRUE,
    all.y = FALSE
  )

chisq.test(dict.crp$class, dict.crp$sex) %>%
  pander()
```

### Age

Age has been calculated by subtracting year of diagnosis from year of birth. 

```{R}
dict.crp$ageCat <- cut(dict.crp$age,
  breaks = c(0, 18, 30, 50, 70, Inf),
  labels = c("<18", "18-29", "30-49", "50-69", "\u226570"),
  include.lowest = TRUE,
  right = FALSE
)

crp.median <- merge(crp.median,
  dict.crp[, c("ids", "ageCat")],
  by = "ids",
  all.x = TRUE,
  all.y = FALSE
)

aov(class ~ age, data = dict.crp) %>%
  summary() %>%
  pander()
```


```{R}
#| label: fig-crp-age-dist
#| fig-cap: "Distribution of age at diagnosis by CRP cluster assignment."
#| fig-height: 4
#| fig-width: 9.142857
#| warning: false
p2 <- dict.crp %>%
  mutate(class = factor(class, labels = paste("CRP", seq(1, 8)))) %>%
  ggplot(aes(x = class, y = age)) +
  geom_violin(fill = "#D4CDF4", color = "#7A6F9B") +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")

p <- p1 / p2 + plot_annotation(tag_levels = "A") &
  theme(plot.tag = element_text(size = 16, face = "bold"))

ggsave("plots/age-dist.png", p, width = 16 * 4 / 7, height = 8)
ggsave("plots/age-dist.pdf", p, width = 16 * 4 / 7, height = 8)
print(p2)
```


### IBD type

As with the FC  model, IBD type has been included in the cluster assignment sub
model as a covariate. Crohn's disease is the reference IBD type with cluster
CRP 8 being the reference cluster. 


```{R}
#| label: fig-crp-ibd
#| fig-cap: "Forest plot of IBD type for the chosen CRP model."
n.clust <- 8
id <- 1:length(model.crp$best)

indice <- rep(id * (id + 1) / 2)

se <- sqrt(model.crp$V[indice])
coefficient <- coef(model.crp)
var.names <- names(coefficient)

df <- data.frame(coefficient = coefficient, se = se)
df <- df[1:(3 * (n.clust - 1)), ]

df$lower <- df$coefficient - (qnorm(0.975) * df$se)
df$upper <- df$coefficient + (qnorm(0.975) * df$se)
df$labels <- names(coefficient)[1:(3 * (n.clust - 1))]

df$labels <- factor(df$labels, levels = rev(df$labels))

df$sig <- FALSE

df[df$upper < 0, "sig"] <- TRUE
df[df$lower > 0, "sig"] <- TRUE

df <- df[n.clust:(3 * (n.clust - 1)), ] # Remove intercept

df %>%
  ggplot(aes(
    x = labels,
    y = coefficient,
    ymin = lower,
    ymax = upper,
    color = sig
  )) +
  geom_errorbar() +
  geom_point(size = 3.5) +
  geom_hline(yintercept = 0, lty = 2) +
  coord_flip() + # flip coordinates (puts labels on y axis)
  xlab("") +
  ylab("Estimate (95% CI)") +
  theme_bw() +
  ylim(-4, 4) +
  scale_color_manual(values = c("black", "#FF007F")) +
  theme(legend.position = "none")
```

```{R}
#| label: tbl-crp-ibd
#| fig-cap: "Table of β estimates and associated p-values obtained via univariate Wald tests."
wald <- c()
p.vals <- c()

for (index in seq(n.clust, 3 * (n.clust - 1))) {
  temp <- WaldMult(model.crp, pos = index)
  wald <- c(wald, temp[, 1])
  p.vals <- c(p.vals, temp[, 2])
}

df$wald <- wald
df$p.vals <- p.vals

rownames(df) <- df$labels

df %>%
  select(coefficient, se, wald, p.vals) %>%
  knitr::kable(digits = 3, col.names = c("Estimate", "SE", "Wald", "p-value"))
```

```{R}
dict.crp$diagnosis <- factor(dict.crp$diagnosis,
  levels = c(
    "Crohn's Disease",
    "Ulcerative Colitis",
    "IBDU"
  )
)

dict.crp$class <- factor(dict.crp$class,
  levels = seq(1, 8),
  labels = paste0("CRP ", seq(1, 8))
)

p2 <- dict.crp %>%
  ggplot() +
  geom_mosaic(aes(x = product(class), fill = diagnosis), show.legend = FALSE) +
  scale_fill_manual(values = c("#F8766D", "#619CFF", "#00BA38")) +
  theme_minimal() +
  labs(
    x = "Cluster",
    y = "IBD type"
  ) +
  ggtitle(
    "IBD type",
    "CRP clustering"
  )

ggsave("plots/mosaic/crp-by-diag.png",
  p2,
  width = 7.5,
  height = 5,
  units = "in",
  dpi = 300,
  create.dir = TRUE
)
ggsave("plots/mosaic/crp-by-diag.pdf", p2, width = 7.5, height = 5)

p6 <- dict.crp %>%
  ggplot(aes(x = class, fill = diagnosis, color = diagnosis)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF", "#00BA38")) +
  scale_color_manual(values = c("#CF544B", "#417BD2", "#01932A")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = "IBD type",
    color = "IBD type"
  )
p6
```

```{R}
#| label: fig-crp-ibd-facet
#| fig-cap: "Percentage of (A) Crohn's disease, (B) ulcerative colitis, and (C) IBDU within each CRP cluster. Dotted lines indicate the overall percentage of each IBD type."
perc.table <- data.frame(
  diagnosis = character(),
  cluster = character(),
  perc = numeric()
)
for (g in 1:8) {
  temp.1 <- subset(dict.crp, class == paste0("CRP ", g))
  for (diag in c("Crohn's Disease", "Ulcerative Colitis", "IBDU")) {
    perc <- nrow(subset(temp.1, diagnosis == diag)) / nrow(temp.1)
    perc.table <- rbind(
      perc.table,
      data.frame(
        diagnosis = diag,
        cluster = paste0("CRP ", g),
        perc = perc
      )
    )
  }
}

totalCdPerc <- nrow(subset(dict.crp, diagnosis == "Crohn's Disease")) /
  nrow(dict.crp)

p1 <- perc.table %>%
  filter(diagnosis == "Crohn's Disease") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#F8766D", color = "#CF544B") +
  geom_hline(yintercept = totalCdPerc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

totalCdPerc <- nrow(subset(dict.crp, diagnosis == "Ulcerative Colitis")) /
  nrow(dict.crp)

p2 <- perc.table %>%
  filter(diagnosis == "Ulcerative Colitis") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#619CFF", color = "#417BD2") +
  geom_hline(yintercept = totalCdPerc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")


totalCdPerc <- nrow(subset(dict.crp, diagnosis == "IBDU")) /
  nrow(dict.crp)

p3 <- perc.table %>%
  filter(diagnosis == "IBDU") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#00BA38", color = "#01932A") +
  geom_hline(yintercept = totalCdPerc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

p <- p1 / p2 / p3 + patchwork::plot_annotation(tag_levels = "A")  &
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) 
ggsave("plots/ibd-type-crp.png", p, width = 7.5, height = 7.5)
ggsave("plots/ibd-type-crp.pdf", p, width = 7.5, height = 7.5)
print(p)
```

### Advanced therapy in CD

```{R}
dict.crp.cd <- readRDS(paste0(prefix, "processed/dict-crp-cd.RDS"))

dict.crp.cd <- merge(dict.crp.cd,
  dict.crp[, c("ids", "class")],
  by = "ids",
  all.x = TRUE,
  all.y = FALSE
)
```



```{R}
pred.crp.df <- data.frame(
  crp_time = c(seq(0, 6.25, 0.01), seq(0, 6.25, 0.01)),
  diagnosis = c(
    rep("Crohn's Disease", 626),
    rep("Ulcerative Colitis", 626)
  )
)
pred.crp.df.update <- predictY(model.crp, pred.crp.df,
  var.time = "crp_time",
  draws = TRUE
)$pred

temp <- data.frame(Time = NULL, Cluster = NULL, Value = NULL)

for (g in 1:8) {
  temp <- rbind(
    temp,
    data.frame(
      Time = seq(0, 6.25, 0.01),
      Cluster = g,
      Value = pred.crp.df.update[, g]
    )
  )
}


dict.crp.cd$timeToTherapy <- with(dict.crp.cd, startDate - date.of.diag) / 365.25

for (g in 1:8) {
  p1 <- temp %>%
    filter(Cluster == g) %>%
    ggplot(aes(x = Time, y = Value)) +
    geom_line(color = "#558C8C") +
    theme_minimal() +
    ylim(0, 6) +
    xlab("") +
    ylab("Log (CRP (\u03BCg/mL))")
  p2 <- dict.crp.cd %>%
    filter(class == paste0("CRP ", g)) %>%
    filter(timeToTherapy > 0) %>%
    ggplot(aes(x = timeToTherapy)) +
    geom_density(color = "#5D002F", fill = "#82204A") +
    theme_minimal() +
    xlim(0, 7) +
    ylim(0, NA) +
    xlab("Time") +
    ylab("Density of time to first advanced therapy")
  p <- p1 / p2 + plot_annotation(
    title = paste("CRP ", g),
    subtitle = "Crohn's disease",
    tag_levels = "A"
  )
  ggsave(paste0("plots/at-density-crp/g=", g, ".png"),
    p,
    width = 7,
    height = 7,
    units = "in",
    create.dir = TRUE
  )
  print(p)
}
```

```{R}
temp <- dict.crp.cd %>%
  mutate(timeToTherapy = if_else(advancedT == 1, 7, as.numeric(timeToTherapy))) %>%
  mutate(advancedT = if_else(advancedT == 1, 0, 1)) %>%
  mutate(advancedT = if_else(timeToTherapy > 7, 0, 1)) %>%
  mutate(timeToTherapy = if_else(timeToTherapy > 7, 7, timeToTherapy))
survfit(Surv(timeToTherapy, advancedT) ~ class, data = temp) %>%
  ggsurvplot(pval = TRUE)
```

```{R}
#| echo: false
png("plots/at-survival-crp-ci.png",
  width = 7,
  height = 5,
  units = "in",
  res = 300
)
survfit(Surv(timeToTherapy, advancedT) ~ class, data = temp) %>%
  ggsurvplot(pval = TRUE, conf.int = TRUE)
invisible(dev.off())
```


```{R}
p <- dict.crp.cd %>%
  ggplot() +
  geom_mosaic(aes(x = product(class), fill = firstY), show.legend = FALSE) +
  theme_minimal() +
  labs(
    x = "Cluster",
    y = "Advanced therapy within first year of diagnosis"
  ) +
  ggtitle(
    "Crohn's disease subjects",
    "CRP clustering"
  )
ggsave("plots/mosaic/crp-cd.png",
  p,
  width = 7.5,
  height = 5,
  units = "in",
  dpi = 300,
  create.dir = TRUE
)
ggsave("plots/mosaic/crp-cd.pdf", p, width = 7.5, height = 5)
p
```

```{R}
pred.crp.df <- data.frame(
  crp_time = c(seq(0, 7, 0.01), seq(0, 7, 0.01)),
  diagnosis = c(
    rep("Crohn's Disease", 701),
    rep("Ulcerative Colitis", 701)
  )
)
pred.crp.df.update <- predictY(model.crp, pred.crp.df,
  var.time = "crp_time",
  draws = TRUE
)$pred

temp <- data.frame(Time = NULL, Cluster = NULL, Value = NULL)

for (g in 1:8) {
  temp <- rbind(
    temp,
    data.frame(
      Time = seq(0, 7, 0.01),
      Cluster = g,
      Value = pred.crp.df.update[, g]
    )
  )
}

traj.crp.outlines <- list()

for (g in 1:8) {
  traj.crp.outlines[[g]] <- temp %>%
    filter(Cluster == g) %>%
    ggplot(aes(x = Time, y = Value)) +
    geom_line(color = "#757575") +
    theme_classic() +
    theme(
      text = element_blank(),
      axis.ticks = element_blank(),
      axis.line = element_line(color = "#dfdfdf")
    ) +
    ylim(0, 6)
}


p1 <- dict.crp.cd %>%
  ggplot(aes(x = class, fill = firstY, color = firstY)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF")) +
  scale_color_manual(values = c("#CF544B", "#417BD2")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = desc,
    color = desc
  )


p <- (p1) /
  (traj.crp.outlines[[1]] +
    traj.crp.outlines[[2]] +
    traj.crp.outlines[[3]] +
    traj.crp.outlines[[4]] +
    traj.crp.outlines[[5]] +
    traj.crp.outlines[[6]] +
    traj.crp.outlines[[7]] +
    traj.crp.outlines[[8]] +
    plot_layout(ncol = 8, guides = "collect", widths = unit(2.8, "cm"))) +
  plot_layout(heights = c(4, 1), nrow = 2)

ggsave("plots/mosaic/crp-by-AT-with-traj.pdf",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
ggsave("plots/mosaic/crp-by-AT-with-traj.png",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
```

### Mutlivariate modelling

```{R}
mlr <- multinom(class ~ age + sex + diagnosis, data = dict.crp, trace = FALSE)
z <- summary(mlr)$coefficients / summary(mlr)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
knitr::kable(p)
```

### Demographics table

## Reuse {.appendix}

Licensed by 
<a href="https://creativecommons.org/licenses/by/4.0/">CC BY</a>
 unless otherwise stated.
 
## {.appendix}

<div class = "center">
  <img class = "center" src="../../images/MRC_HGU_Edinburgh RGB.png" alt="MRC Human Genetics Unit logo" height = 50px>
  <img src="../../images/cgem-logo.png" alt="Centre for Genomic & Experimental Medicine logo" height = 50px>
</div>

---

## Session info {.appendix}

```{R Session info}
pander(sessionInfo())
```


