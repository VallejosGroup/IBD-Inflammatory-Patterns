---
title: "Associations with cluster membership"
author:
  - name: "Nathan Constantine-Cooke"
    corresponding: true
    url: https://scholar.google.com/citations?user=2emHWR0AAAAJ&hl=en&oi=ao
    affiliations:
      - ref: CGEM
      - ref: HGU
  - name: "Catalina A. Vallejos"
    url: https://scholar.google.com/citations?user=lkdrwm0AAAAJ&hl=en&oi=ao
    affiliations:
      - ref: HGU
---

## Introduction

```{R Setup}
#| message: false
set.seed(123)
if (file.exists("/.dockerenv")) { # Check if running in Docker
  # Assume igmm/cvallejo-predicct/libdr/ is passed to the data volume
  prefix <- "data/"
} else {
  # Assume running outside of a Docker container and the IGC(/IGMM) datastore is
  # mounted at /Volumes
  prefix <- "/Volumes/igmm/cvallejo-predicct/libdr/"
}

##########################
#--     Packages       --#
##########################

library(tidyverse)
# Support package (source found in libdr/)
library(libdr)
## Modelling ##
library(lcmm)
library(nnet) # Multinomial logistic regression
## Survival analysis
library(survival)
library(survminer)
## Presentation ##
library(patchwork)
library(ggdist)
library(ggalluvial)
library(pander)
library(qqplotr)
library(table1)

library(ggmosaic)


dict <- readRDS(paste0(prefix, "processed/dict.RDS"))
fcal <- readRDS(paste0(prefix, "processed/fcal.RDS"))
model.fc <- readRDS(paste0(prefix, "/cache/fcal/ncs/fcal-10.RDS"))
crp <- readRDS(paste0(prefix, "processed/crp.RDS"))
crp.median <- readRDS(paste0(prefix, "processed/median-crp.RDS"))
model.crp <- readRDS(paste0(prefix, "cache/crp-ma/crp-9.RDS"))
```

This page explores potential associations between information available at
diagnosis, or shortly thereafter, and cluster membership. A descriptive analysis
of baseline variables in described in a
[previous page](../pre/baseline.qmd).

For univariate analyses, continuous data have been analysed via ANOVA, and
categorical data have been analysed using chi-squared or Fisher's exact test as
appropriate. Time-to-event data have been analysed using log-rank tests of 
Kaplan-Meier curves.

Multivariate analyses were also performed to potentially adjust for
confounding factors. 

As faecal calprotectin (FC) and C-reactive protein (CRP) were analysed
independently, this page is split into FC and CRP sections. 

## Faecal calprotectin analysis

### Merge subject-level metadata with model-derived quantities

Here, we create a `data.frame` that combines individual-level information
(e.g. age at diagnosis, sex) with model-derived quantities, such as the
posterior probabilities of class assignment. To facilitate visualisation, 
we also create discretised versions for some variables. 

```{r}
myDF <- fcal %>%
  group_by(ids) %>%
  summarise(n.total = n(),
            followup = max(calpro_time),) %>%
  mutate(followup_cut = cut(followup, breaks = c(seq(0, 6, by = 2), 7)),
         n.total_cut = cut(n.total, breaks = c(0, 5, 10, 20, max(n.total))))
  
myDF <- merge(myDF, model.fc$pprob, by = "ids", all.x = FALSE, all.y = TRUE)
myDF <- myDF %>% 
  mutate(probmax = pmax(prob1, prob2, prob3, prob4, prob5, 
                        prob6, prob7, prob8, prob9, prob10))
myDF <- merge(myDF, dict, by = "ids", all.x = TRUE, all.y = FALSE)
```

### Posterior cluster assignment probabilities 

```{R}
#| label: fig-fc-prob-fup
#| fig-cap: "Demonstration of how mean posterior probabilities of cluster assignment for subjects changes based upon follow-up and assigned cluster."
#| column: body-outset
#| fig-width: 11
#| fig-height: 8

myDF_means <- myDF %>% 
  group_by(class, followup_cut) %>%
  summarise(across(starts_with("prob"), function(x) mean(x, na.rm = TRUE)),
            .groups = "drop") %>%
  pivot_longer(cols = starts_with("prob"), names_to = "prob")

# Assign level order otherwise alphanumerical order used
myDF_means$prob <- factor(myDF_means$prob,
                          levels = c(paste0("prob", 1:10), "probmax"),
                          labels = c(paste0("FC", 1:10), "probmax"))

myDF_means$class <- factor(myDF_means$class,
                           levels = 1:10,
                           labels = paste0("Assigned to FC", 1:10))


col.vec <- c("#df5c7f",
"#74c74a",
"#d159d3",
"#c2ae42",
"#8581da",
"#de6d3c",
"#74b0c3",
"#bc9d7a",
"#6cb886",
"#c597bd")


p <- myDF_means %>%
  filter(prob != "probmax") %>%
  ggplot(aes(fill = prob, y = value, x = followup_cut)) +
  geom_bar(position = "fill", stat = "identity") +
  facet_wrap(.~class, ncol = 5) + 
  theme_minimal() +
  theme(legend.title = element_text(hjust = 0.5),
        strip.background = element_rect(color = "lightgray",
                                         linewidth = 1.5,
                                         linetype="solid")) +
  labs(x = "Follow-up cutoff (years)",
       y = "",
       fill = "Mean posterior\nprobability of\ncluster assignment") +
  scale_fill_manual(values = col.vec) 

ggsave("plots/fc-prob-fup.png", p, width = 11, height = 8, units = "in")
ggsave("plots/fc-prob-fup.pdf", p, width = 11, height = 8, units = "in")
p
```

@fig-fc-prob-fup shows how cluster assignment probabilities change as follow-up
for subjects increases. As one would expect, probabilities typically increase as
as follow-up increases. This relationship appears to depend upon when the mean
trajectory for the assigned cluster substantially differs from the other
clusters. FC8 shows high posterior probabilities with even short follow-up as
this is the only cluster with low FC at diagnosis. However, longer follow-ups 
are required to distinguish other clusters. For example, individuals
assigned to FC1 that have a short follow-up (< 2 years from diagnosis) only have
a marginally higher average probability of being assigned to FC1 than to FC6
(`r myDF_means$value[myDF_means$class == "Assigned to FC1" & myDF_means$followup_cut == "(0,2]" & myDF_means$prob == "FC1"]` versus `r myDF_means$value[myDF_means$class == "Assigned to FC1" & myDF_means$followup_cut == "(0,2]" & myDF_means$prob == "FC6"]`). This is not
unexpected, as FC1 and FC6 share similar patterns within the first 2 years. 


### Exclusion based on posterior probabilities

In order to reliably assess associations between clusters and baseline data, we
will focus on subjects with posterior probabilities for cluster assignment above
a set threshold. This ensures subjects which were not confidently assigned to a
cluster do not affect potential associations. 

Subjects with little follow-up typically have low posterior probabilities as 
there is less of a temporal trend to rely upon when assigning a cluster. As
such, subjects with short follow-up available will typically be removed from
the association testing when filtering by posterior probabilities (@fig-pprob-fup-fc). 

```{R}
#| label: fig-pprob-fup-fc
#| fig-cap: "The relationship between posterior probability of cluster assignment and subject follow-up (defined as last FC observation within the study period). Subjects with more than 20 FC observations have been removed from the plot for clarity."
p <- myDF %>%
  filter(n.total <= 20) %>%
  ggplot(aes(x = followup, y = probmax)) +
  geom_point(aes(color = n.total)) +
  geom_smooth(method = "lm", formula = "y ~ x") +
  theme_minimal() +
  xlab("Follow-up time (years)") +
  ylab("Posterior probability") +
  ylim(0, NA) +
  viridis::scale_color_viridis(option = "viridis") 

ggsave("plots/postprob-fup.png", p, width = 10, height = 8, units = "in")
ggsave("plots/postprob-fup.pdf", p, width = 10, height = 8, units = "in")
p
```

```{R}
#| label: fig-pprob-fup-fc-cluster
#| fig-cap: "The relationship between posterior probability of cluster assignment and subject follow-up (defined as last FC observation within the study period) by cluster. Subjects with more than 20 FC observations have been removed from the plot for clarity."
#| fig-height: 10

p <- myDF %>%
  filter(n.total <= 20) %>%
  ggplot(aes(x = followup, y = probmax)) +
  geom_point(aes(color = n.total)) +
  geom_smooth(method = "lm", formula = "y ~ x") +
  theme_minimal() +
  xlab("Follow-up time (years)") +
  ylab("Posterior probability") +
  ylim(0, NA) +
  viridis::scale_color_viridis(option = "viridis") +
  facet_grid(rows = vars(class))

ggsave("plots/postprob-fup-clusters.png",
       p,
       width = 10,
       height = 16,
       units = "in")
ggsave("plots/postprob-fup-clusters.pdf",
       p,
       width = 10,
       height = 16,
       units = "in")
p
```



```{R}
pprob.df <- subset(myDF, probmax > 0.5)
model.fc$pprob <- subset(model.fc$pprob, ids %in% pprob.df$ids)
```

Based upon @tbl-pprob-fc-cutoff and the above plots, we will only look at
associations with cluster membership for subjects with a posterior 
probability greater than 0.5.

```{R}
#| label: tbl-pprob-fc-cutoff
#| tbl-cap: "Percentage of subjects included in the analysis based upon different posterior probability cutoffs."
included <- c()
percs <- seq(0.5, 0.8, by = 0.05)

for (perc in percs) {
  included <- c(included,
                paste0(round(sum(myDF$probmax > perc) / nrow(myDF), 4) * 100, "%"))
}

included.df <- data.frame(perc = percs, included = included)
included.df %>%
  knitr::kable(col.names = c("Posterior prob cutoff", "Percentage included"),
               align = c("c", "c"))
```


### Univariate analyses 

#### Sex

A significant association was not found between sex and cluster membership. 

```{R}
dict.fc <- subset(dict, ids %in% model.fc$pprob$ids)
dict.fc <- merge(dict.fc, model.fc$pprob[, c("ids", "class")])
fcal <- select(fcal, -sex)

fcal <- merge(fcal,
  dict.fc[, c("ids", "class", "sex")],
  all.x = TRUE,
  all.y = FALSE,
  by = "ids"
)

chisq.test(dict.fc$class, dict.fc$sex) %>%
  pander()
```

#### Age

As a reminder, age has been calculated by subtracting year of diagnosis from
year of birth and is therefore not 100% accurate. We will initially consider
age as a continuous variable. 

```{R}
aov(class ~ age, data = dict.fc) %>%
  summary() %>%
  pander()
```


```{R}
#| label: fig-fc-age-dist
#| fig-cap: "Distribution of age at diagnosis by FC cluster assignment."
#| fig-height: 4
#| fig-width: 9.142857
#| warning: false
p1 <- dict.fc %>%
  mutate(class = factor(class, labels = paste("FC", seq(1, 10)))) %>%
  ggplot(aes(x = class, y = age)) +
  geom_violin(fill = "#5DB7DE", color = "#434371") +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")
print(p1)
```

##### Montreal classification of age for Crohn's disease

Unlike ulcerative colitis, age at diagnosis is part of the Montreal
classification for Crohn's disease.  As such, we will explore potential
associations between Montreal age classification and cluster membership for
subjects diagnosed with Crohn's disease. The Montreal age categories are as
follows: 

* A1: $\leq$ 16 years
* A2: 17—40 years
* A3: $>$ 40 years

Montreal classification of age for Crohn's disease was not found to be
significantly associated with cluster membership.

```{R}
ageLabels <- c("\u226416", "17—40", "> 40")

cd.dict.fc <- subset(dict.fc, diagnosis == "Crohn's Disease")

cd.dict.fc$ageCat <- cut(cd.dict.fc$age,
  breaks = c(0, 16, 40, Inf),
  labels = ageLabels,
  include.lowest = TRUE,
  right = FALSE
)

cd.dict.fc %>%
  with(fisher.test(class,
                   ageCat,
                   workspace = 2000000,
                   simulate.p.value = TRUE)) %>%
  pander()
```

#### IBD type

IBD type has been included in the cluster assignment sub model as a covariate
and will therefore be analysed differently to the other variables considered.
Instead of chi-squared tests, Wald tests of the model covariates were conducted.
In these tests, Crohn's disease is the reference IBD type with cluster FC 8
being the reference cluster. 

The results of these tests are presented as both forest plots ([@fig-fc-ibd])
and a summary table ([@tbl-fc-ibd]).

Only ulcerative colitis in cluster 1 was found to be statistically significant. 


```{R}
#| label: fig-fc-ibd
#| fig-cap: "Forest plot of IBD type for the chosen FC model. Pink estimates denote a statistically different covariate at the 5% significance level."
n.clust <- 8
id <- 1:length(model.fc$best)

indice <- rep(id * (id + 1) / 2)

se <- sqrt(model.fc$V[indice])
coefficient <- coef(model.fc)
var.names <- names(coefficient)

df <- data.frame(coefficient = coefficient, se = se)
df <- df[1:(3 * (n.clust - 1)), ]

df$lower <- df$coefficient - (qnorm(0.975) * df$se)
df$upper <- df$coefficient + (qnorm(0.975) * df$se)
df$labels <- names(coefficient)[1:(3 * (n.clust - 1))]

df$labels <- factor(df$labels, levels = rev(df$labels))

df$sig <- FALSE

df[df$upper < 0, "sig"] <- TRUE
df[df$lower > 0, "sig"] <- TRUE

df <- df[n.clust:(3 * (n.clust - 1)), ] # Remove intercept

df %>%
  ggplot(aes(
    x = labels,
    y = coefficient,
    ymin = lower,
    ymax = upper,
    color = sig
  )) +
  geom_errorbar() +
  geom_point(size = 3.5) +
  geom_hline(yintercept = 0, lty = 2) +
  coord_flip() + # flip coordinates (puts labels on y axis)
  xlab("") +
  ylab("Estimate (95% CI)") +
  theme_bw() +
  ylim(-6, 6) +
  scale_color_manual(values = c("black", "#FF007F")) +
  theme(legend.position = "none")
```

```{R}
#| label: tbl-fc-ibd
#| tbl-cap: "Table of β estimates and associated p-values obtained via univariate Wald tests."
wald <- c()
p.vals <- c()

for (index in seq(n.clust, 3 * (n.clust - 1))) {
  temp <- WaldMult(model.fc, pos = index)
  wald <- c(wald, temp[, 1])
  p.vals <- c(p.vals, temp[, 2])
}

df$wald <- wald
df$p.vals <- p.vals

rownames(df) <- df$labels

df %>%
  select(coefficient, se, wald, p.vals) %>%
  knitr::kable(digits = 3, col.names = c("Estimate", "SE", "Wald", "p-value"))
```

@fig-fc-ibd-facet shows the breakdown of IBD type within each cluster.


```{R}
#| label: fig-fc-ibd-facet
#| fig-cap: "Percentage of (A) Crohn's disease, (B) ulcerative colitis, and (C) IBDU within each FC cluster. Dotted lines indicate the overall percentage of each IBD type."
perc.table <- data.frame(
  diagnosis = character(),
  cluster = character(),
  perc = numeric()
)
for (g in 1:8) {
  temp.1 <- subset(dict.fc, class == g)
  for (diag in c("Crohn's Disease", "Ulcerative Colitis", "IBDU")) {
    perc <- nrow(subset(temp.1, diagnosis == diag)) / nrow(temp.1)
    perc.table <- rbind(
      perc.table,
      data.frame(
        diagnosis = diag,
        cluster = paste0("FC ", g),
        perc = perc
      )
    )
  }
}

totalCdPerc <- nrow(subset(dict.fc, diagnosis == "Crohn's Disease")) /
  nrow(dict.fc)

p1 <- perc.table %>%
  filter(diagnosis == "Crohn's Disease") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#F8766D", color = "#CF544B") +
  geom_hline(yintercept = totalCdPerc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

totalCdPerc <- nrow(subset(dict.fc, diagnosis == "Ulcerative Colitis")) /
  nrow(dict.fc)

p2 <- perc.table %>%
  filter(diagnosis == "Ulcerative Colitis") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#619CFF", color = "#417BD2") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")


totalCdPerc <- nrow(subset(dict.fc, diagnosis == "IBDU")) /
  nrow(dict.fc)

p3 <- perc.table %>%
  filter(diagnosis == "IBDU") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#00BA38", color = "#01932A") +
  geom_hline(yintercept = totalCdPerc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

p <- p1 / p2 / p3 + patchwork::plot_annotation(tag_levels = "A")  &
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) 
ggsave("plots/ibd-type-fc.png", p, width = 7.5, height = 7.5)
ggsave("plots/ibd-type-fc.pdf", p, width = 7.5, height = 7.5)
print(p)
```

### Multivariate modelling

For the multivariate analysis, multinomial logistic regression has been used to
predict class membership via age (as a continuous variable), sex, and IBD type.

Cluster FC 1, female sex, and Crohn's disease were used as the reference
categories. @tbl-mlr-fc provides all p-values for all covariates.

```{R}
#| label: tbl-mlr-fc
#| tbl-cap: "Table of p-values for the Wald tests of the multinomial logistic regression model."
mlr <- multinom(class ~ age + sex + diagnosis, data = dict.fc, trace = FALSE)
z <- summary(mlr)$coefficients / summary(mlr)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
knitr::kable(p)
```

As estimates lie on  substantially different scales, these will be visualised
using separate forest plots for each covariate. 

```{R}
coeff <- summary(mlr)$coefficients
coeff <- reshape2::melt(coeff)
coeff$var <- with(coeff, paste(Var1, Var2))
coeff <- filter(coeff, Var2 != "(Intercept)")
coeff <- coeff
colnames(coeff) <- c("Var1", "Var2", "Estimate", "var")

lower <- summary(mlr)$coefficients - (qnorm(0.975) * summary(mlr)$standard.errors)
lower <- reshape2::melt(lower)
lower$var <- with(lower, paste(Var1, Var2))
lower <- filter(lower, Var2 != "(Intercept)")
lower <- lower %>%
  select(-Var1, -Var2)
colnames(lower) <- c("Lower", "var")

tab <- merge(coeff, lower, by = "var")

upper <- summary(mlr)$coefficients + (qnorm(0.975) * summary(mlr)$standard.errors)
upper <- reshape2::melt(upper)
upper$var <- with(upper, paste(Var1, Var2))
upper <- filter(upper, Var2 != "(Intercept)")
upper <- upper %>%
  select(-Var1, -Var2)
colnames(upper) <- c("Upper", "var")

tab <- merge(tab, upper, by = "var")

tab$var <- factor(tab$var, levels = rev(tab$var))
tab$sig <- FALSE
tab[tab$Upper < 0, "sig"] <- TRUE
tab[tab$Lower > 0, "sig"] <- TRUE

for (variable in unique(tab$Var2)) {
  p <- tab %>%
    filter(Var2 == variable) %>%
    ggplot(aes(
      x = var,
      y = Estimate,
      ymin = Lower,
      ymax = Upper,
      color = sig
    )) +
    geom_errorbar() +
    geom_point(size = 3.5) +
    geom_hline(yintercept = 0, lty = 2) +
    coord_flip() + # flip coordinates (puts labels on y axis)
    xlab("") +
    ylab("Estimate (95% CI)") +
    theme_bw() +
    #  ylim(-6, 6) +
    scale_color_manual(values = c("black", "#FF007F")) +
    theme(legend.position = "none")
  print(p)
}
```


### Crohn's disease only data

This section is concerned with data specific to Crohn's disease, namely the
Montreal classification of Crohn's disease and advanced therapy prescribing. 

```{R}
cd.pheno <- readRDS(paste0(prefix, "processed/cd-pheno.RDS"))
cd.pheno <- merge(cd.pheno,
  dict.fc[, c("ids", "class")],
  by = "ids",
  all.x = TRUE,
  all.y = FALSE
)
cd.pheno$class <- as.factor(cd.pheno$class)

cd.pheno <- subset(cd.pheno, ids %in% model.fc$pprob$ids)
```

#### Montreal location

Montreal location refers to where gastrointestinal inflammation is present and
is categorised as:

* L1: Ileal, limited to the ileum which is the final segment of the small
  intestine.
* L2: Colonic, limited to the colon/large intestine.
* L3: Ileocolonic, inflammation is present in both the ileum and colon.

A significant association was not found between cluster membership and Montreal
location. 


```{R}
cd.pheno %>%
  with(chisq.test(class,Location)) %>%
  pander()
```

```{R}
#| label: fig-fc-location-facet
#| fig-cap: "Percentage of (A) L1, (B) L2, and (C) L3 within each FC cluster. Dotted lines indicate the overall percentage of each IBD type."
perc.table <- data.frame(
  location = character(),
  cluster = character(),
  perc = numeric()
)
for (g in 1:8) {
  temp.1 <- subset(cd.pheno, class ==  g)
  for (loc in c("L1", "L2", "L3")) {
    perc <- nrow(subset(temp.1, Location == loc)) / nrow(temp.1)
    perc.table <- rbind(
      perc.table,
      data.frame(
        location = loc,
        cluster = paste0("FC ", g),
        perc = perc
      )
    )
  }
}

totalL1Perc <- nrow(subset(cd.pheno, Location == "L1")) /
  nrow(cd.pheno)

p1 <- perc.table %>%
  filter(location == "L1") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#C2F8CB", color = "#82C68F") +
  geom_hline(yintercept = totalL1Perc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

totalL2Perc <- nrow(subset(cd.pheno, Location == "L2")) /
  nrow(cd.pheno)

p2 <- perc.table %>%
  filter(location == "L2") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#EFC7E5", color = "#C795BB") +
  geom_hline(yintercept = totalL2Perc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")


totalL3Perc <- nrow(subset(cd.pheno, Location == "L3")) /
  nrow(cd.pheno)

p3 <- perc.table %>%
  filter(location == "L3") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#F6BD60", color = "#C89216") +
  geom_hline(yintercept = totalL3Perc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

p <- p1 / p2 / p3 + patchwork::plot_annotation(tag_levels = "A") &
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) 
ggsave("plots/cd-location-fc.png", p, width = 7.5, height = 7.5)
ggsave("plots/cd-location-fc.pdf", p, width = 7.5, height = 7.5)
print(p)
```

#### Upper GI inflammation

Upper inflammation refers to any gastrointestinal inflammation further up than
the ileum. Usually, upper inflammation is considered a _modifier_ for Montreal
location and is denoted L4. 

The presence of upper GI inflammation was found to be significantly associated
with cluster membership. 

```{R}
cd.pheno %>%
  with(fisher.test(class, L4, workspace = 200000000)) %>%
  pander()
```

Cluster FC 2 appears to be enriched for CD subjects with L4 whilst a very low
percentage of CD subjects in FC 4 have L4.

```{R}
cd.pheno %>%
  drop_na(L4) %>%
  ggplot(aes(x = class, fill = L4, color = L4)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF")) +
  scale_color_manual(values = c("#CF544B", "#417BD2")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = "L4 present",
    color = "L4 present"
  )
```

#### Montreal behaviour

Montreal behaviour describes another clinical phenotype and is defined as
follows:

* B1: Inflammatory, in other words non-stricturing and non-penetrating
* B2: Stricturing, where the formation of fibrosis leads to the narrowing of the
  intestine.
* B3: Penetrating, where the inflammation causes the formation of fistulas or
  abscesses.

Montreal behaviour was found to be significantly associated with cluster
membership at the 5% significance level.

```{R}
fisher.test(cd.pheno$class, cd.pheno$Behaviour, simulate.p.value = TRUE) %>%
  pander()
```

Whilst the inflammatory phenotype appears to be mostly evenly distributed across
the clusters, substantial differences are seen for stricturing disease and even
starker differences for penetrating. 

```{R}
#| label: fig-fc-behaviour-facet
#| fig-cap: "Percentage of (A) B1, (B) B2, and (C) B3 within each FC cluster. Dotted lines indicate the overall percentage of each IBD type."
perc.table <- data.frame(
  behaviour = character(),
  cluster = character(),
  perc = numeric()
)
for (g in 1:8) {
  temp.1 <- subset(cd.pheno, class == g)
  for (beh in c("B1", "B2", "B3")) {
    perc <- nrow(subset(temp.1, Behaviour == beh)) / nrow(temp.1)
    perc.table <- rbind(
      perc.table,
      data.frame(
        behaviour = beh,
        cluster = paste0("FC ", g),
        perc = perc
      )
    )
  }
}

totalB1Perc <- nrow(subset(cd.pheno, Behaviour == "B1")) /
  nrow(cd.pheno)

p1 <- perc.table %>%
  filter(behaviour == "B1") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#FF7700", color = "#C56025") +
  geom_hline(yintercept = totalB1Perc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

totalB2Perc <- nrow(subset(cd.pheno, Behaviour == "B2")) /
  nrow(cd.pheno)

p2 <- perc.table %>%
  filter(behaviour == "B2") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#004777", color = "#003A62") +
  geom_hline(yintercept = totalB2Perc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")


totalB3Perc <- nrow(subset(cd.pheno, Behaviour == "B3")) /
  nrow(cd.pheno)

p3 <- perc.table %>%
  filter(behaviour == "B3") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#4E937A", color = "#447361") +
  geom_hline(yintercept = totalB3Perc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

p <- p1 / p2 / p3 + patchwork::plot_annotation(tag_levels = "A")  &
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) 
ggsave("plots/cd-behaviour-fc.png", p, width = 7.5, height = 7.5)
ggsave("plots/cd-behaviour-fc.pdf", p, width = 7.5, height = 7.5)
print(p)
```

#### Perianal disease

Perianal disease is considered a modifier for Montreal behaviour and is a severe
complication of Crohn's disease involving inflammation around the anus.

Presence of perianal disease was not found to be significantly associated with
cluter membership for CD subjects. 

```{R}
cd.pheno %>%
  with(fisher.test(class, Perianal, workspace = 20000000)) %>%
  pander()
```


```{R}
cd.pheno %>%
  drop_na(Perianal) %>%
  ggplot(aes(x = class, fill = Perianal, color = Perianal)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF")) +
  scale_color_manual(values = c("#CF544B", "#417BD2")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = "Perianal disease present",
    color = "Perianal disease present"
  )
```

### Advanced therapy in CD

```{R}
dict.fc.cd <- readRDS(paste0(prefix, "processed/dict-fc-cd.RDS"))
dict.fc.cd <- merge(dict.fc.cd,
  dict.fc[, c("ids", "class")],
  by = "ids",
  all.x = TRUE,
  all.y = FALSE
)
```

```{R}
pred.fc.df <- data.frame(
  calpro_time = c(seq(0, 7, 0.01), seq(0, 7, 0.01)),
  diagnosis = c(
    rep("Crohn's Disease", 701),
    rep("Ulcerative Colitis", 701)
  )
)
pred.fc.df.update <- predictY(model.fc, pred.fc.df,
  var.time = "calpro_time",
  draws = TRUE
)$pred

temp <- data.frame(Time = NULL, Cluster = NULL, Value = NULL)

for (g in 1:8) {
  temp <- rbind(
    temp,
    data.frame(
      Time = seq(0, 7, 0.01),
      Cluster = g,
      Value = pred.fc.df.update[, g]
    )
  )
}

dict.fc.cd$timeToTherapy <- with(dict.fc.cd, startDate - date.of.diag) / 365.25

for (g in 1:8) {
  p1 <- temp %>%
    filter(Cluster == g) %>%
    ggplot(aes(x = Time, y = Value)) +
    geom_line(color = "#558C8C") +
    theme_minimal() +
    ylim(3, 6.5) +
    xlab("") +
    ylab("Log (FCAL (\u03BCg/g))")
  p2 <- dict.fc.cd %>%
    filter(class == g) %>%
    filter(timeToTherapy > 0) %>%
    ggplot(aes(x = timeToTherapy)) +
    geom_density(color = "#5D002F", fill = "#82204A") +
    theme_minimal() +
    xlim(0, 7) +
    xlab("Time") +
    ylab("Density of time to first advanced therapy")
  p <- p1 / p2 + plot_annotation(
    title = paste("FC", g),
    subtitle = "Crohn's disease",
    tag_levels = "A"
  )
  ggsave(paste0("plots/at-density/g=", g, ".png"),
    p,
    width = 7,
    height = 7,
    units = "in",
    create.dir = TRUE
  )
  print(p)
}
```


```{R}
temp <- dict.fc.cd %>%
  mutate(timeToTherapy = if_else(advancedT == 1, 7, as.numeric(timeToTherapy))) %>%
  mutate(advancedT = if_else(advancedT == 1, 0, 1)) %>%
  mutate(advancedT = if_else(timeToTherapy > 7, 0, 1)) %>%
  mutate(timeToTherapy = if_else(timeToTherapy > 7, 7, timeToTherapy))


survfit(Surv(timeToTherapy, advancedT) ~ class, data = temp) %>%
  ggsurvplot(pval = TRUE, conf.int = FALSE)
```

```{R}
#| echo: false
png("plots/at-survival-fc-ci.png",
  width = 7,
  height = 5,
  units = "in",
  res = 300
)
survfit(Surv(timeToTherapy, advancedT) ~ class, data = temp) %>%
  ggsurvplot(pval = TRUE, conf.int = TRUE)
invisible(dev.off())
```


```{R}
p1 <- dict.fc.cd %>%
  ggplot() +
  geom_mosaic(aes(x = product(class), fill = firstY), show.legend = FALSE) +
  theme_minimal() +
  labs(
    x = "Cluster",
    y = "Advanced therapy within first year of diagnosis"
  ) +
  ggtitle(
    "Crohn's disease subjects",
    "Faecal calprotectin clustering"
  )
ggsave("plots/mosaic/fc-cd.png",
  p1,
  width = 7.5,
  height = 5,
  units = "in",
  dpi = 300,
  create.dir = TRUE
)
ggsave("plots/mosaic/fc-cd-AT.pdf", p, width = 7.5, height = 5)
p1
```

```{R}
pred.fc.df <- data.frame(
  calpro_time = c(seq(0, 7, 0.01), seq(0, 7, 0.01)),
  diagnosis = c(
    rep("Crohn's Disease", 701),
    rep("Ulcerative Colitis", 701)
  )
)
pred.fc.df.update <- predictY(model.fc, pred.fc.df,
  var.time = "calpro_time",
  draws = TRUE
)$pred

temp <- data.frame(Time = NULL, Cluster = NULL, Value = NULL)

for (g in 1:6) {
  temp <- rbind(
    temp,
    data.frame(
      Time = seq(0, 7, 0.01),
      Cluster = g,
      Value = pred.fc.df.update[, g]
    )
  )
}

traj.outlines <- list()

for (g in 1:6) {
  traj.outlines[[g]] <- temp %>%
    filter(Cluster == g) %>%
    ggplot(aes(x = Time, y = Value)) +
    geom_line(color = "#757575") +
    theme_classic() +
    theme(
      text = element_blank(),
      axis.ticks = element_blank(),
      axis.line = element_line(color = "#dfdfdf")
    ) +
    ylim(3, 6.5)
}



desc <- "Advanced therapy within first year of diagnosis for Crohn's disease"

p1 <- dict.fc.cd %>%
  ggplot(aes(x = class, fill = firstY, color = firstY)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF")) +
  scale_color_manual(values = c("#CF544B", "#417BD2")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = desc,
    color = desc
  )



p <- p1 /
  (traj.outlines[[1]] +
    traj.outlines[[2]] +
    traj.outlines[[3]] +
    traj.outlines[[4]] +
    traj.outlines[[5]] +
    traj.outlines[[6]] +
    plot_layout(ncol = 6, guides = "collect", widths = unit(3.9, "cm"))) +
  plot_layout(heights = c(4, 1))

ggsave("plots/mosaic/fc-by-AT-with-traj.pdf",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
ggsave("plots/mosaic/fc-by-AT-with-traj.png",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
```

```{R}
sum(dict.fc.cd$firstY)
prop.table(table(dict.fc.cd$class, dict.fc.cd$firstY), margin = 1)
```

```{R}
with(
  dict.fc.cd,
  fisher.test(table(class, firstY), workspace = 2000000)
)
```

### Demographics table

## CRP

```{R}
model.crp$pprob$class <- plyr::mapvalues(
  model.crp$pprob$class,
  from = c(8, 9),
  to = c(7, 8)
)
```

As Cluster CRP2 and CRP4 are characterised by very similar longitudinal
profiles, we have elected to merge these clusters. All subjects in cluster
4 have been migrated to cluster 2 with clusters 5-9 renumbered accordingly.

Similar to FC, we will explore associations only for subjects with a
sufficiently high posterior probability of being in their assigned cluster. As 
cluster assignment is exclusive, we are able to add the posterior probabilities
for the merged clusters together to determine the posterior probability for
CRP2 after the merge. 

### Sex

```{R}
dict.crp <- subset(dict, ids %in% model.crp$pprob$ids)
dict.crp <- merge(dict.crp, model.crp$pprob[, c("ids", "class")])


crp.median <-
  crp.median %>%
  select(-sex) %>%
  merge(dict.crp[, c("ids", "class", "sex")],
    all.x = TRUE,
    all.y = FALSE
  )

chisq.test(dict.crp$class, dict.crp$sex) %>%
  pander()
```

### Age

Age has been calculated by subtracting year of diagnosis from year of birth. 

```{R}
dict.crp$ageCat <- cut(dict.crp$age,
  breaks = c(0, 18, 30, 50, 70, Inf),
  labels = c("<18", "18-29", "30-49", "50-69", "\u226570"),
  include.lowest = TRUE,
  right = FALSE
)

crp.median <- merge(crp.median,
  dict.crp[, c("ids", "ageCat")],
  by = "ids",
  all.x = TRUE,
  all.y = FALSE
)

aov(class ~ age, data = dict.crp) %>%
  summary() %>%
  pander()
```


```{R}
#| label: fig-crp-age-dist
#| fig-cap: "Distribution of age at diagnosis by CRP cluster assignment."
#| fig-height: 4
#| fig-width: 9.142857
#| warning: false
p2 <- dict.crp %>%
  mutate(class = factor(class, labels = paste("CRP", seq(1, 8)))) %>%
  ggplot(aes(x = class, y = age)) +
  geom_violin(fill = "#D4CDF4", color = "#7A6F9B") +
  theme_minimal() +
  xlab("Cluster") +
  ylab("Age at diagnosis")

p <- p1 / p2 + plot_annotation(tag_levels = "A") &
  theme(plot.tag = element_text(size = 16, face = "bold"))

ggsave("plots/age-dist.png", p, width = 16 * 4 / 7, height = 8)
ggsave("plots/age-dist.pdf", p, width = 16 * 4 / 7, height = 8)
print(p2)
```


### IBD type

As with the FC  model, IBD type has been included in the cluster assignment sub
model as a covariate. Crohn's disease is the reference IBD type with cluster
CRP 8 being the reference cluster. 


```{R}
#| label: fig-crp-ibd
#| fig-cap: "Forest plot of IBD type for the chosen CRP model."
n.clust <- 8
id <- 1:length(model.crp$best)

indice <- rep(id * (id + 1) / 2)

se <- sqrt(model.crp$V[indice])
coefficient <- coef(model.crp)
var.names <- names(coefficient)

df <- data.frame(coefficient = coefficient, se = se)
df <- df[1:(3 * (n.clust - 1)), ]

df$lower <- df$coefficient - (qnorm(0.975) * df$se)
df$upper <- df$coefficient + (qnorm(0.975) * df$se)
df$labels <- names(coefficient)[1:(3 * (n.clust - 1))]

df$labels <- factor(df$labels, levels = rev(df$labels))

df$sig <- FALSE

df[df$upper < 0, "sig"] <- TRUE
df[df$lower > 0, "sig"] <- TRUE

df <- df[n.clust:(3 * (n.clust - 1)), ] # Remove intercept

df %>%
  ggplot(aes(
    x = labels,
    y = coefficient,
    ymin = lower,
    ymax = upper,
    color = sig
  )) +
  geom_errorbar() +
  geom_point(size = 3.5) +
  geom_hline(yintercept = 0, lty = 2) +
  coord_flip() + # flip coordinates (puts labels on y axis)
  xlab("") +
  ylab("Estimate (95% CI)") +
  theme_bw() +
  ylim(-4, 4) +
  scale_color_manual(values = c("black", "#FF007F")) +
  theme(legend.position = "none")
```

```{R}
#| label: tbl-crp-ibd
#| fig-cap: "Table of β estimates and associated p-values obtained via univariate Wald tests."
wald <- c()
p.vals <- c()

for (index in seq(n.clust, 3 * (n.clust - 1))) {
  temp <- WaldMult(model.crp, pos = index)
  wald <- c(wald, temp[, 1])
  p.vals <- c(p.vals, temp[, 2])
}

df$wald <- wald
df$p.vals <- p.vals

rownames(df) <- df$labels

df %>%
  select(coefficient, se, wald, p.vals) %>%
  knitr::kable(digits = 3, col.names = c("Estimate", "SE", "Wald", "p-value"))
```

```{R}
dict.crp$diagnosis <- factor(dict.crp$diagnosis,
  levels = c(
    "Crohn's Disease",
    "Ulcerative Colitis",
    "IBDU"
  )
)

dict.crp$class <- factor(dict.crp$class,
  levels = seq(1, 8),
  labels = paste0("CRP ", seq(1, 8))
)

p2 <- dict.crp %>%
  ggplot() +
  geom_mosaic(aes(x = product(class), fill = diagnosis), show.legend = FALSE) +
  scale_fill_manual(values = c("#F8766D", "#619CFF", "#00BA38")) +
  theme_minimal() +
  labs(
    x = "Cluster",
    y = "IBD type"
  ) +
  ggtitle(
    "IBD type",
    "CRP clustering"
  )

ggsave("plots/mosaic/crp-by-diag.png",
  p2,
  width = 7.5,
  height = 5,
  units = "in",
  dpi = 300,
  create.dir = TRUE
)
ggsave("plots/mosaic/crp-by-diag.pdf", p2, width = 7.5, height = 5)

p6 <- dict.crp %>%
  ggplot(aes(x = class, fill = diagnosis, color = diagnosis)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF", "#00BA38")) +
  scale_color_manual(values = c("#CF544B", "#417BD2", "#01932A")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = "IBD type",
    color = "IBD type"
  )
p6
```

```{R}
#| label: fig-crp-ibd-facet
#| fig-cap: "Percentage of (A) Crohn's disease, (B) ulcerative colitis, and (C) IBDU within each CRP cluster. Dotted lines indicate the overall percentage of each IBD type."
perc.table <- data.frame(
  diagnosis = character(),
  cluster = character(),
  perc = numeric()
)
for (g in 1:8) {
  temp.1 <- subset(dict.crp, class == paste0("CRP ", g))
  for (diag in c("Crohn's Disease", "Ulcerative Colitis", "IBDU")) {
    perc <- nrow(subset(temp.1, diagnosis == diag)) / nrow(temp.1)
    perc.table <- rbind(
      perc.table,
      data.frame(
        diagnosis = diag,
        cluster = paste0("CRP ", g),
        perc = perc
      )
    )
  }
}

totalCdPerc <- nrow(subset(dict.crp, diagnosis == "Crohn's Disease")) /
  nrow(dict.crp)

p1 <- perc.table %>%
  filter(diagnosis == "Crohn's Disease") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#F8766D", color = "#CF544B") +
  geom_hline(yintercept = totalCdPerc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

totalCdPerc <- nrow(subset(dict.crp, diagnosis == "Ulcerative Colitis")) /
  nrow(dict.crp)

p2 <- perc.table %>%
  filter(diagnosis == "Ulcerative Colitis") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#619CFF", color = "#417BD2") +
  geom_hline(yintercept = totalCdPerc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")


totalCdPerc <- nrow(subset(dict.crp, diagnosis == "IBDU")) /
  nrow(dict.crp)

p3 <- perc.table %>%
  filter(diagnosis == "IBDU") %>%
  ggplot(aes(x = cluster, y = perc)) +
  geom_bar(stat = "identity", fill = "#00BA38", color = "#01932A") +
  geom_hline(yintercept = totalCdPerc, linetype = "dashed", color = "#4D4730") +
  theme_minimal() +
  labs(x = "Cluster", y = "Percentage")

p <- p1 / p2 / p3 + patchwork::plot_annotation(tag_levels = "A")  &
  scale_y_continuous(labels = scales::percent, limits = c(0, 1)) 
ggsave("plots/ibd-type-crp.png", p, width = 7.5, height = 7.5)
ggsave("plots/ibd-type-crp.pdf", p, width = 7.5, height = 7.5)
print(p)
```

### Advanced therapy in CD

```{R}
dict.crp.cd <- readRDS(paste0(prefix, "processed/dict-crp-cd.RDS"))

dict.crp.cd <- merge(dict.crp.cd,
  dict.crp[, c("ids", "class")],
  by = "ids",
  all.x = TRUE,
  all.y = FALSE
)
```



```{R}
pred.crp.df <- data.frame(
  crp_time = c(seq(0, 6.25, 0.01), seq(0, 6.25, 0.01)),
  diagnosis = c(
    rep("Crohn's Disease", 626),
    rep("Ulcerative Colitis", 626)
  )
)
pred.crp.df.update <- predictY(model.crp, pred.crp.df,
  var.time = "crp_time",
  draws = TRUE
)$pred

temp <- data.frame(Time = NULL, Cluster = NULL, Value = NULL)

for (g in 1:8) {
  temp <- rbind(
    temp,
    data.frame(
      Time = seq(0, 6.25, 0.01),
      Cluster = g,
      Value = pred.crp.df.update[, g]
    )
  )
}


dict.crp.cd$timeToTherapy <- with(dict.crp.cd, startDate - date.of.diag) / 365.25

for (g in 1:8) {
  p1 <- temp %>%
    filter(Cluster == g) %>%
    ggplot(aes(x = Time, y = Value)) +
    geom_line(color = "#558C8C") +
    theme_minimal() +
    ylim(0, 6) +
    xlab("") +
    ylab("Log (CRP (\u03BCg/mL))")
  p2 <- dict.crp.cd %>%
    filter(class == paste0("CRP ", g)) %>%
    filter(timeToTherapy > 0) %>%
    ggplot(aes(x = timeToTherapy)) +
    geom_density(color = "#5D002F", fill = "#82204A") +
    theme_minimal() +
    xlim(0, 7) +
    ylim(0, NA) +
    xlab("Time") +
    ylab("Density of time to first advanced therapy")
  p <- p1 / p2 + plot_annotation(
    title = paste("CRP ", g),
    subtitle = "Crohn's disease",
    tag_levels = "A"
  )
  ggsave(paste0("plots/at-density-crp/g=", g, ".png"),
    p,
    width = 7,
    height = 7,
    units = "in",
    create.dir = TRUE
  )
  print(p)
}
```

```{R}
temp <- dict.crp.cd %>%
  mutate(timeToTherapy = if_else(advancedT == 1, 7, as.numeric(timeToTherapy))) %>%
  mutate(advancedT = if_else(advancedT == 1, 0, 1)) %>%
  mutate(advancedT = if_else(timeToTherapy > 7, 0, 1)) %>%
  mutate(timeToTherapy = if_else(timeToTherapy > 7, 7, timeToTherapy))
survfit(Surv(timeToTherapy, advancedT) ~ class, data = temp) %>%
  ggsurvplot(pval = TRUE)
```

```{R}
#| echo: false
png("plots/at-survival-crp-ci.png",
  width = 7,
  height = 5,
  units = "in",
  res = 300
)
survfit(Surv(timeToTherapy, advancedT) ~ class, data = temp) %>%
  ggsurvplot(pval = TRUE, conf.int = TRUE)
invisible(dev.off())
```


```{R}
p <- dict.crp.cd %>%
  ggplot() +
  geom_mosaic(aes(x = product(class), fill = firstY), show.legend = FALSE) +
  theme_minimal() +
  labs(
    x = "Cluster",
    y = "Advanced therapy within first year of diagnosis"
  ) +
  ggtitle(
    "Crohn's disease subjects",
    "CRP clustering"
  )
ggsave("plots/mosaic/crp-cd.png",
  p,
  width = 7.5,
  height = 5,
  units = "in",
  dpi = 300,
  create.dir = TRUE
)
ggsave("plots/mosaic/crp-cd.pdf", p, width = 7.5, height = 5)
p
```

```{R}
pred.crp.df <- data.frame(
  crp_time = c(seq(0, 7, 0.01), seq(0, 7, 0.01)),
  diagnosis = c(
    rep("Crohn's Disease", 701),
    rep("Ulcerative Colitis", 701)
  )
)
pred.crp.df.update <- predictY(model.crp, pred.crp.df,
  var.time = "crp_time",
  draws = TRUE
)$pred

temp <- data.frame(Time = NULL, Cluster = NULL, Value = NULL)

for (g in 1:8) {
  temp <- rbind(
    temp,
    data.frame(
      Time = seq(0, 7, 0.01),
      Cluster = g,
      Value = pred.crp.df.update[, g]
    )
  )
}

traj.crp.outlines <- list()

for (g in 1:8) {
  traj.crp.outlines[[g]] <- temp %>%
    filter(Cluster == g) %>%
    ggplot(aes(x = Time, y = Value)) +
    geom_line(color = "#757575") +
    theme_classic() +
    theme(
      text = element_blank(),
      axis.ticks = element_blank(),
      axis.line = element_line(color = "#dfdfdf")
    ) +
    ylim(0, 6)
}


p1 <- dict.crp.cd %>%
  ggplot(aes(x = class, fill = firstY, color = firstY)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("#F8766D", "#619CFF")) +
  scale_color_manual(values = c("#CF544B", "#417BD2")) +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = "Cluster",
    y = "",
    fill = desc,
    color = desc
  )


p <- (p1) /
  (traj.crp.outlines[[1]] +
    traj.crp.outlines[[2]] +
    traj.crp.outlines[[3]] +
    traj.crp.outlines[[4]] +
    traj.crp.outlines[[5]] +
    traj.crp.outlines[[6]] +
    traj.crp.outlines[[7]] +
    traj.crp.outlines[[8]] +
    plot_layout(ncol = 8, guides = "collect", widths = unit(2.8, "cm"))) +
  plot_layout(heights = c(4, 1), nrow = 2)

ggsave("plots/mosaic/crp-by-AT-with-traj.pdf",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
ggsave("plots/mosaic/crp-by-AT-with-traj.png",
  p,
  width = 7 * 1.65,
  height = 5 * 1.65
)
```

### Mutlivariate modelling

```{R}
mlr <- multinom(class ~ age + sex + diagnosis, data = dict.crp, trace = FALSE)
z <- summary(mlr)$coefficients / summary(mlr)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
knitr::kable(p)
```

``` {R}
coeff <- summary(mlr)$coefficients
coeff <- reshape2::melt(coeff)
coeff$var <- with(coeff, paste(Var1, Var2))
coeff <- filter(coeff, Var2 != "(Intercept)")
coeff <- coeff
colnames(coeff) <- c("Var1", "Var2", "Estimate", "var")

lower <- summary(mlr)$coefficients - (qnorm(0.975) * summary(mlr)$standard.errors)
lower <- reshape2::melt(lower)
lower$var <- with(lower, paste(Var1, Var2))
lower <- filter(lower, Var2 != "(Intercept)")
lower <- lower %>%
  select(-Var1, -Var2)
colnames(lower) <- c("Lower", "var")

tab <- merge(coeff, lower, by = "var")

upper <- summary(mlr)$coefficients + (qnorm(0.975) * summary(mlr)$standard.errors)
upper <- reshape2::melt(upper)
upper$var <- with(upper, paste(Var1, Var2))
upper <- filter(upper, Var2 != "(Intercept)")
upper <- upper %>%
  select(-Var1, -Var2)
colnames(upper) <- c("Upper", "var")

tab <- merge(tab, upper, by = "var")

tab$var <- factor(tab$var, levels = rev(tab$var))
tab$sig <- FALSE
tab[tab$Upper < 0, "sig"] <- TRUE
tab[tab$Lower > 0, "sig"] <- TRUE

for (variable in unique(tab$Var2)) {
  p <- tab %>%
    filter(Var2 == variable) %>%
    ggplot(aes(
      x = var,
      y = Estimate,
      ymin = Lower,
      ymax = Upper,
      color = sig
    )) +
    geom_errorbar() +
    geom_point(size = 3.5) +
    geom_hline(yintercept = 0, lty = 2) +
    coord_flip() + # flip coordinates (puts labels on y axis)
    xlab("") +
    ylab("Estimate (95% CI)") +
    theme_bw() +
    #  ylim(-6, 6) +
    scale_color_manual(values = c("black", "#FF007F")) +
    theme(legend.position = "none")
  print(p)
}
```

### Demographics table

## Reuse {.appendix}

Licensed by 
<a href="https://creativecommons.org/licenses/by/4.0/">CC BY</a>
 unless otherwise stated.
 
## {.appendix}

<div class = "center">
  <img class = "center" src="../../images/MRC_HGU_Edinburgh RGB.png" alt="MRC Human Genetics Unit logo" height = 50px>
  <img src="../../images/cgem-logo.png" alt="Centre for Genomic & Experimental Medicine logo" height = 50px>
</div>

---

## Session info {.appendix}

```{R Session info}
pander(sessionInfo())
```
