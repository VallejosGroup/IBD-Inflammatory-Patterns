---
title: "Model selection"
subtitle: "Faecal calprotectin"
author:
  - name: "Nathan Constantine-Cooke" 
    url: https://scholar.google.com/citations?user=2emHWR0AAAAJ&hl=en&oi=ao
    corresponding: true
    affiliations:
      - ref: CGEM
      - ref: HGU
  - name: "Karla Monterrubio-Gómez"
    url: https://scholar.google.com/citations?user=YmyxSXAAAAAJ&hl=en
    affiliations:
      - ref: HGU
      - ref: CGEM
  - name: "Catalina A. Vallejos"
    url: https://scholar.google.com/citations?user=lkdrwm0AAAAJ&hl=en&oi=ao
    affiliations:
      - ref: HGU
      - ref: Turing
#comments:
#  giscus: 
#    repo: quarto-dev/quarto-docs
---

```{R}
library(libdr)
library(ComplexHeatmap)
library(ggalluvial)
library(lcmm)
library(patchwork)
library(gameR)
library(pander)
set.seed(123)
prefix <- "/Volumes/igmm/cvallejo-predicct/libdr/"

########################
### Load FCAL models ###
########################
# set the number of groups
G.fcal <- numeric()
models.fcal <- list()
G.cands <- seq(2, 10)
for (G.cand in G.cands) {
  file.name <- paste0(prefix, "cache/fcal/ncs/fcal-", G.cand, ".RDS")
  if (file.exists(file.name)) {
    G.fcal <- c(G.fcal, G.cand)
    models.fcal[[G.cand]] <- readRDS(file.name)
  }
}
rm(G.cand, G.cands)

dict <- readRDS(paste0(prefix, "processed/dict.RDS"))


####################################################################
### Load CRP moving average (no autocorrelation struture) models ###
####################################################################
G.crp <- numeric()
models.crp <- list()
G.cands <- seq(2, 10)
for (G.cand in G.cands) {
  file.name <- paste0(prefix, "cache/crp-ma/crp-", G.cand, ".RDS")
  if (file.exists(file.name)) {
    G.crp <- c(G.crp, G.cand)
    models.crp[[G.cand]] <- readRDS(file.name)
  }
}
rm(G.cand, G.cands)
```


```{R}
if (!dir.exists("plots/cluster-comp")) dir.create("plots/cluster-comp")

################################
### No posterior prob cutoff ###
################################


col.vec <- c(
  "1" = "#EF3E36",
  "2" = "#17BEBB",
  "3" = "#F4AC45",
  "4" = "#3E5622",
  "5" = "#DDC3D0",
  "6" = "#8FD744FF",
  "7" = "#2A1E5C",
  "8" = "black"
)


col.vec.ibd <- c(
  "Crohn's Disease" = "#052F5F",
  "Ulcerative Colitis" = "#F15BB5",
  "IBDU" = "#329F5B"
)

for (G in 2:8) { # No G = 8 for FCAL
  comp.mat <- compareClustering(G, models.fcal, models.crp)
  ids.fcal <- models.fcal[[G]]$pprob$ids
  ids.crp <- models.crp[[G]]$pprob$ids
  ids.common <- intersect(ids.fcal, ids.crp)

  dict.sub <- subset(dict, ids %in% ids.common)

  column_ha <- HeatmapAnnotation(
    "CRP cluster" = models.crp[[G]]$pprob$class[models.crp[[G]]$pprob$ids %in% ids.common],
    "FCAL cluster" = models.fcal[[G]]$pprob$class[models.fcal[[G]]$pprob$ids %in% ids.common],
    col = list("FCAL cluster" = col.vec, "CRP cluster" = col.vec)
  )

  row.ha <- HeatmapAnnotation(
    "IBD type" = dict.sub$diagnosis,
    col = list("IBD type" = col.vec.ibd),
    annotation_name_rot = 45,
    which = "row"
  )

  heat <- Heatmap(comp.mat,
                  name = sprintf("Cluster Concordance"),
                  col = gameR_cols("cyberpunk", reverse = TRUE),
                  show_row_names = FALSE,
                  show_column_names = FALSE,
                  cluster_rows = TRUE,
                  cluster_columns = TRUE,
                  heatmap_legend_param = list(
                    labels = c(
                      "Shares cluster for both FCAL and CRP",
                      "Shares cluster for only CRP",
                      "Shares cluster for only FCAL",
                      "Never clustered together"
                    )
                  ),
                  top_annotation = column_ha,
                  left_annotation = row.ha
  )
  # Save heatmaps to file

  draw(heat)

}
```

```{R}
##################################
### With posterior prob cutoff ###
##################################

col.vec <- c(
  "1" = "#EF3E36",
  "2" = "#17BEBB",
  "3" = "#F4AC45",
  "4" = "#3E5622",
  "5" = "#DDC3D0",
  "6" = "#8FD744FF",
  "7" = "#2A1E5C",
  "8" = "black"
)

col.vec.ibd <- c(
  "Crohn's Disease" = "#052F5F",
  "Ulcerative Colitis" = "#F15BB5",
  "IBDU" = "#329F5B"
)

for (G in 2:8) {
  comp.mat <- compareClustering(G, models.fcal, models.crp, cutoff = TRUE)

  ids.fcal <- models.fcal[[G]]$pprob[apply(models.fcal[[G]]$pprob[,c(-1, -2)] > 0.8, 1, any),]$ids
  ids.crp <- models.crp[[G]]$pprob[apply(models.crp[[G]]$pprob[,c(-1, -2)] > 0.8, 1, any),]$ids

  ids.common <- intersect(ids.fcal, ids.crp)

  dict.sub <- subset(dict, ids %in% ids.common)


  column_ha <- HeatmapAnnotation(
    "CRP cluster" = models.crp[[G]]$pprob$class[models.crp[[G]]$pprob$ids %in% ids.common],
    "FCAL cluster" = models.fcal[[G]]$pprob$class[models.fcal[[G]]$pprob$ids %in% ids.common],
    col = list("FCAL cluster" = col.vec, "CRP cluster" = col.vec)
  )

  row.ha <- HeatmapAnnotation(
    "IBD type" = dict.sub$diagnosis,
    col = list("IBD type" = col.vec.ibd),
    annotation_name_rot = 45,
    which = "row"
  )


  heat <- Heatmap(comp.mat,
                  name = paste0("Cluster Concordance, n = ", nrow(comp.mat)),
                  col = gameR::gameR_cols("cyberpunk", reverse = TRUE),
                  show_row_names = FALSE,
                  show_column_names = FALSE,
                  cluster_rows = TRUE,
                  cluster_columns = TRUE,
                  heatmap_legend_param = list(
                    labels = c(
                      "Shares cluster for both FCAL and CRP",
                      "Shares cluster for only CRP",
                      "Shares cluster for only FCAL",
                      "Never clustered together"
                    )
                  ),
                  top_annotation = column_ha,
                  left_annotation = row.ha
  )
  # Save heatmaps to file
  png(paste0("plots/cluster-comp/G=", G, "-pprob.png"),
      width = 10.82,
      height = 8,
      units = "in",
      res = 300
  )
  draw(heat)
  invisible(dev.off())

  pdf(paste0("plots/cluster-comp/G=", G, "-pprob.pdf"),
      width = 10.82,
      height = 8
  )
  draw(heat)
  invisible(dev.off())
  draw(heat)
}
```


```{R}
fcal.pprob <- models.fcal[[6]]$pprob
crp.pprob <- models.crp[[6]]$pprob

fcal.ids <- fcal.pprob$ids
crp.ids <- crp.pprob$ids

# Only IDs in both FCAL and CRP models
ids.comb <- fcal.ids[fcal.ids %in% crp.ids]
ids.comb <- ids.comb[order(ids.comb)]

fcal.pprob <- subset(fcal.pprob, ids %in% ids.comb)
crp.pprob <- subset(crp.pprob, ids %in% ids.comb)


classes <- rbind(data.frame(fcal.pprob[, c(1,2)], type = "FCAL" ),
                 data.frame(crp.pprob[, c(1,2)], type = "CRP"))
classes$class <- as.factor(classes$class)

p1 <- ggplot(classes, aes(x = type,
                          stratum = class,
                          alluvium = ids,
                          fill = class,
                          label = class)) +
  geom_flow()  +
  geom_stratum()  + geom_text(stat = "stratum", size = 3) +
  theme_minimal() +
  theme(axis.line = element_line(colour = "gray"))


calpro_time <- seq(0,7, by = 0.1)

new.data <- cbind(calpro_time, ns(calpro_time, df = 4, Boundary.knots = c(0,7)))
new.data <- rbind(data.frame(new.data, diagnosis = "Crohn's"),
                  data.frame(new.data, diagnosis = "UC"))


preds.fcal <- predictY(models.fcal[[6]], newdata = new.data, draws = TRUE)
plot.fcal <- data.frame(time = calpro_time,
                        pred = preds.fcal$pred[, "Ypred_class1"],
                        class = "1" )
for (class in as.character(2:6)){
  plot.fcal <- rbind(plot.fcal,
                     data.frame(time = calpro_time,
                                pred = preds.fcal$pred[, paste0("Ypred_class", class)],
                                class = class))
}

p2 <- ggplot(plot.fcal, aes(x = time, y = pred, color = class)) +
  geom_line(linewidth = 0.7) +
  theme_minimal() +
  xlab("Time (years)") +
  ylab("Log(FCAL (µg/g))") +
  ylim(0, 7) +
  xlim(0, 7) +
  theme(axis.line = element_line(colour = "gray"))

crp_time <- seq(0,7, by = 0.1)

new.data <- cbind(crp_time, ns(crp_time, df = 4, Boundary.knots = c(0, 7)))
new.data <- rbind(data.frame(new.data, diagnosis = "Crohn's"),
                  data.frame(new.data, diagnosis = "UC"))

preds.crp <- predictY(models.crp[[6]], newdata = new.data, draws = TRUE)
plot.crp <- data.frame(time = crp_time,
                       pred = preds.crp$pred[, "Ypred_class1"],
                       class = "1" )
for (class in as.character(2:6)){
  plot.crp <- rbind(plot.crp,
                    data.frame(time = crp_time,
                               pred = preds.crp$pred[, paste0("Ypred_class",class)],
                               class = class))
}

p3 <- ggplot(plot.crp, aes(x = time, y = pred, color = class)) +
  geom_line(size = 0.7) +
  theme_minimal() +
  xlab("Time (years)") +
  ylab("Log(CRP (mg/L))") +
  ylim(0,7) +
  xlim(0,7) +
  theme(axis.line = element_line(colour = "gray"))

p <- p1 + (p3/p2) +
  plot_annotation(tag_levels = "A") +
  plot_layout(guides = "collect") & theme(legend.position='bottom')

ggsave("plots/big-comp.png", p, width = 10, height = 6.75)
ggsave("plots/big-comp.pdf", p, width = 10, height = 6.75)
print(p)
```

## Reuse {.appendix}

Licensed by 
<a href="https://creativecommons.org/licenses/by/4.0/">CC BY</a>
 unless otherwise stated.
 
## {.appendix}

<div class = "center">
  <img class = "center" src="../../images/MRC_HGU_Edinburgh RGB.png" alt="MRC Human Genetics Unit logo" height = 50px>
  <img src="../../images/cgem-logo.png" alt="Centre for Genomic & Experimental Medicine logo" height = 50px>
</div>

---

## Session info {.appendix}

```{R Session info}
pander(sessionInfo())
```
